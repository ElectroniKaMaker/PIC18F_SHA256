

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Apr 04 23:28:15 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25  0000                     
    26                           ; Version 2.10
    27                           ; Generated 31/07/2019 GMT
    28                           ; 
    29                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F47K42 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     
    61                           	psect	mediumconst
    62  00FCC4                     __pmediumconst:
    63                           	opt callstack 0
    64  00FCC4  00                 	db	0
    65  00FCC5                     _SHA256_K:
    66                           	opt callstack 0
    67  00FCC5  2F98               	dw	12184
    68  00FCC7  428A               	dw	17034
    69  00FCC9  4491               	dw	17553
    70  00FCCB  7137               	dw	28983
    71  00FCCD  FBCF               	dw	64463
    72  00FCCF  B5C0               	dw	46528
    73  00FCD1  DBA5               	dw	56229
    74  00FCD3  E9B5               	dw	59829
    75  00FCD5  C25B               	dw	49755
    76  00FCD7  3956               	dw	14678
    77  00FCD9  11F1               	dw	4593
    78  00FCDB  59F1               	dw	23025
    79  00FCDD  82A4               	dw	33444
    80  00FCDF  923F               	dw	37439
    81  00FCE1  5ED5               	dw	24277
    82  00FCE3  AB1C               	dw	43804
    83  00FCE5  AA98               	dw	43672
    84  00FCE7  D807               	dw	55303
    85  00FCE9  5B01               	dw	23297
    86  00FCEB  1283               	dw	4739
    87  00FCED  85BE               	dw	34238
    88  00FCEF  2431               	dw	9265
    89  00FCF1  7DC3               	dw	32195
    90  00FCF3  550C               	dw	21772
    91  00FCF5  5D74               	dw	23924
    92  00FCF7  72BE               	dw	29374
    93  00FCF9  B1FE               	dw	45566
    94  00FCFB  80DE               	dw	32990
    95  00FCFD  06A7               	dw	1703
    96  00FCFF  9BDC               	dw	39900
    97  00FD01  F174               	dw	61812
    98  00FD03  C19B               	dw	49563
    99  00FD05  69C1               	dw	27073
   100  00FD07  E49B               	dw	58523
   101  00FD09  4786               	dw	18310
   102  00FD0B  EFBE               	dw	61374
   103  00FD0D  9DC6               	dw	40390
   104  00FD0F  0FC1               	dw	4033
   105  00FD11  A1CC               	dw	41420
   106  00FD13  240C               	dw	9228
   107  00FD15  2C6F               	dw	11375
   108  00FD17  2DE9               	dw	11753
   109  00FD19  84AA               	dw	33962
   110  00FD1B  4A74               	dw	19060
   111  00FD1D  A9DC               	dw	43484
   112  00FD1F  5CB0               	dw	23728
   113  00FD21  88DA               	dw	35034
   114  00FD23  76F9               	dw	30457
   115  00FD25  5152               	dw	20818
   116  00FD27  983E               	dw	38974
   117  00FD29  C66D               	dw	50797
   118  00FD2B  A831               	dw	43057
   119  00FD2D  27C8               	dw	10184
   120  00FD2F  B003               	dw	45059
   121  00FD31  7FC7               	dw	32711
   122  00FD33  BF59               	dw	48985
   123  00FD35  0BF3               	dw	3059
   124  00FD37  C6E0               	dw	50912
   125  00FD39  9147               	dw	37191
   126  00FD3B  D5A7               	dw	54695
   127  00FD3D  6351               	dw	25425
   128  00FD3F  06CA               	dw	1738
   129  00FD41  2967               	dw	10599
   130  00FD43  1429               	dw	5161
   131  00FD45  0A85               	dw	2693
   132  00FD47  27B7               	dw	10167
   133  00FD49  2138               	dw	8504
   134  00FD4B  2E1B               	dw	11803
   135  00FD4D  6DFC               	dw	28156
   136  00FD4F  4D2C               	dw	19756
   137  00FD51  0D13               	dw	3347
   138  00FD53  5338               	dw	21304
   139  00FD55  7354               	dw	29524
   140  00FD57  650A               	dw	25866
   141  00FD59  0ABB               	dw	2747
   142  00FD5B  766A               	dw	30314
   143  00FD5D  C92E               	dw	51502
   144  00FD5F  81C2               	dw	33218
   145  00FD61  2C85               	dw	11397
   146  00FD63  9272               	dw	37490
   147  00FD65  E8A1               	dw	59553
   148  00FD67  A2BF               	dw	41663
   149  00FD69  664B               	dw	26187
   150  00FD6B  A81A               	dw	43034
   151  00FD6D  8B70               	dw	35696
   152  00FD6F  C24B               	dw	49739
   153  00FD71  51A3               	dw	20899
   154  00FD73  C76C               	dw	51052
   155  00FD75  E819               	dw	59417
   156  00FD77  D192               	dw	53650
   157  00FD79  0624               	dw	1572
   158  00FD7B  D699               	dw	54937
   159  00FD7D  3585               	dw	13701
   160  00FD7F  F40E               	dw	62478
   161  00FD81  A070               	dw	41072
   162  00FD83  106A               	dw	4202
   163  00FD85  C116               	dw	49430
   164  00FD87  19A4               	dw	6564
   165  00FD89  6C08               	dw	27656
   166  00FD8B  1E37               	dw	7735
   167  00FD8D  774C               	dw	30540
   168  00FD8F  2748               	dw	10056
   169  00FD91  BCB5               	dw	48309
   170  00FD93  34B0               	dw	13488
   171  00FD95  0CB3               	dw	3251
   172  00FD97  391C               	dw	14620
   173  00FD99  AA4A               	dw	43594
   174  00FD9B  4ED8               	dw	20184
   175  00FD9D  CA4F               	dw	51791
   176  00FD9F  5B9C               	dw	23452
   177  00FDA1  6FF3               	dw	28659
   178  00FDA3  682E               	dw	26670
   179  00FDA5  82EE               	dw	33518
   180  00FDA7  748F               	dw	29839
   181  00FDA9  636F               	dw	25455
   182  00FDAB  78A5               	dw	30885
   183  00FDAD  7814               	dw	30740
   184  00FDAF  84C8               	dw	33992
   185  00FDB1  0208               	dw	520
   186  00FDB3  8CC7               	dw	36039
   187  00FDB5  FFFA               	dw	65530
   188  00FDB7  90BE               	dw	37054
   189  00FDB9  6CEB               	dw	27883
   190  00FDBB  A450               	dw	42064
   191  00FDBD  A3F7               	dw	41975
   192  00FDBF  BEF9               	dw	48889
   193  00FDC1  78F2               	dw	30962
   194  00FDC3  C671               	dw	50801
   195  00FDC5                     __end_of_SHA256_K:
   196                           	opt callstack 0
   197  00FDC5                     _message8:
   198                           	opt callstack 0
   199  00FDC5  61                 	db	97
   200  00FDC6  61                 	db	97
   201  00FDC7  61                 	db	97
   202  00FDC8  61                 	db	97
   203  00FDC9  61                 	db	97
   204  00FDCA  61                 	db	97
   205  00FDCB  61                 	db	97
   206  00FDCC  61                 	db	97
   207  00FDCD  61                 	db	97
   208  00FDCE  61                 	db	97
   209  00FDCF  61                 	db	97
   210  00FDD0  61                 	db	97
   211  00FDD1  61                 	db	97
   212  00FDD2  61                 	db	97
   213  00FDD3  61                 	db	97
   214  00FDD4  61                 	db	97
   215  00FDD5  61                 	db	97
   216  00FDD6  61                 	db	97
   217  00FDD7  61                 	db	97
   218  00FDD8  61                 	db	97
   219  00FDD9  61                 	db	97
   220  00FDDA  61                 	db	97
   221  00FDDB  61                 	db	97
   222  00FDDC  61                 	db	97
   223  00FDDD  61                 	db	97
   224  00FDDE  61                 	db	97
   225  00FDDF  61                 	db	97
   226  00FDE0  61                 	db	97
   227  00FDE1  61                 	db	97
   228  00FDE2  61                 	db	97
   229  00FDE3  61                 	db	97
   230  00FDE4  61                 	db	97
   231  00FDE5  61                 	db	97
   232  00FDE6  61                 	db	97
   233  00FDE7  61                 	db	97
   234  00FDE8  61                 	db	97
   235  00FDE9  61                 	db	97
   236  00FDEA  61                 	db	97
   237  00FDEB  61                 	db	97
   238  00FDEC  61                 	db	97
   239  00FDED  61                 	db	97
   240  00FDEE  61                 	db	97
   241  00FDEF  61                 	db	97
   242  00FDF0  61                 	db	97
   243  00FDF1  61                 	db	97
   244  00FDF2  61                 	db	97
   245  00FDF3  61                 	db	97
   246  00FDF4  61                 	db	97
   247  00FDF5  61                 	db	97
   248  00FDF6  61                 	db	97
   249  00FDF7  61                 	db	97
   250  00FDF8  61                 	db	97
   251  00FDF9  61                 	db	97
   252  00FDFA  61                 	db	97
   253  00FDFB  61                 	db	97
   254  00FDFC  61                 	db	97
   255  00FDFD  61                 	db	97
   256  00FDFE  61                 	db	97
   257  00FDFF  61                 	db	97
   258  00FE00  61                 	db	97
   259  00FE01  61                 	db	97
   260  00FE02  61                 	db	97
   261  00FE03  61                 	db	97
   262  00FE04  61                 	db	97
   263  00FE05  61                 	db	97
   264  00FE06  61                 	db	97
   265  00FE07  61                 	db	97
   266  00FE08  61                 	db	97
   267  00FE09  61                 	db	97
   268  00FE0A  61                 	db	97
   269  00FE0B  61                 	db	97
   270  00FE0C  61                 	db	97
   271  00FE0D  61                 	db	97
   272  00FE0E  61                 	db	97
   273  00FE0F  61                 	db	97
   274  00FE10  61                 	db	97
   275  00FE11  61                 	db	97
   276  00FE12  61                 	db	97
   277  00FE13  61                 	db	97
   278  00FE14  61                 	db	97
   279  00FE15  61                 	db	97
   280  00FE16  61                 	db	97
   281  00FE17  61                 	db	97
   282  00FE18  61                 	db	97
   283  00FE19  61                 	db	97
   284  00FE1A  61                 	db	97
   285  00FE1B  61                 	db	97
   286  00FE1C  61                 	db	97
   287  00FE1D  61                 	db	97
   288  00FE1E  61                 	db	97
   289  00FE1F  61                 	db	97
   290  00FE20  61                 	db	97
   291  00FE21  61                 	db	97
   292  00FE22  61                 	db	97
   293  00FE23  61                 	db	97
   294  00FE24  61                 	db	97
   295  00FE25  61                 	db	97
   296  00FE26  61                 	db	97
   297  00FE27  61                 	db	97
   298  00FE28  61                 	db	97
   299  00FE29  00                 	db	0
   300  00FE2A                     __end_of_message8:
   301                           	opt callstack 0
   302  00FE2A                     _message6:
   303                           	opt callstack 0
   304  00FE2A  41                 	db	65
   305  00FE2B  42                 	db	66
   306  00FE2C  43                 	db	67
   307  00FE2D  44                 	db	68
   308  00FE2E  45                 	db	69
   309  00FE2F  46                 	db	70
   310  00FE30  47                 	db	71
   311  00FE31  48                 	db	72
   312  00FE32  49                 	db	73
   313  00FE33  4A                 	db	74
   314  00FE34  4B                 	db	75
   315  00FE35  4C                 	db	76
   316  00FE36  4D                 	db	77
   317  00FE37  4E                 	db	78
   318  00FE38  4F                 	db	79
   319  00FE39  50                 	db	80
   320  00FE3A  51                 	db	81
   321  00FE3B  52                 	db	82
   322  00FE3C  53                 	db	83
   323  00FE3D  54                 	db	84
   324  00FE3E  55                 	db	85
   325  00FE3F  56                 	db	86
   326  00FE40  57                 	db	87
   327  00FE41  58                 	db	88
   328  00FE42  59                 	db	89
   329  00FE43  5A                 	db	90
   330  00FE44  61                 	db	97
   331  00FE45  62                 	db	98
   332  00FE46  63                 	db	99
   333  00FE47  64                 	db	100
   334  00FE48  65                 	db	101
   335  00FE49  66                 	db	102
   336  00FE4A  67                 	db	103
   337  00FE4B  68                 	db	104
   338  00FE4C  69                 	db	105
   339  00FE4D  6A                 	db	106
   340  00FE4E  6B                 	db	107
   341  00FE4F  6C                 	db	108
   342  00FE50  6D                 	db	109
   343  00FE51  6E                 	db	110
   344  00FE52  6F                 	db	111
   345  00FE53  70                 	db	112
   346  00FE54  71                 	db	113
   347  00FE55  72                 	db	114
   348  00FE56  73                 	db	115
   349  00FE57  74                 	db	116
   350  00FE58  75                 	db	117
   351  00FE59  76                 	db	118
   352  00FE5A  77                 	db	119
   353  00FE5B  78                 	db	120
   354  00FE5C  79                 	db	121
   355  00FE5D  7A                 	db	122
   356  00FE5E  30                 	db	48
   357  00FE5F  31                 	db	49
   358  00FE60  32                 	db	50
   359  00FE61  33                 	db	51
   360  00FE62  34                 	db	52
   361  00FE63  35                 	db	53
   362  00FE64  36                 	db	54
   363  00FE65  37                 	db	55
   364  00FE66  38                 	db	56
   365  00FE67  39                 	db	57
   366  00FE68  00                 	db	0
   367  00FE69                     __end_of_message6:
   368                           	opt callstack 0
   369  00FE69                     _message5:
   370                           	opt callstack 0
   371  00FE69  61                 	db	97
   372  00FE6A  62                 	db	98
   373  00FE6B  63                 	db	99
   374  00FE6C  64                 	db	100
   375  00FE6D  62                 	db	98
   376  00FE6E  63                 	db	99
   377  00FE6F  64                 	db	100
   378  00FE70  65                 	db	101
   379  00FE71  63                 	db	99
   380  00FE72  64                 	db	100
   381  00FE73  65                 	db	101
   382  00FE74  66                 	db	102
   383  00FE75  64                 	db	100
   384  00FE76  65                 	db	101
   385  00FE77  66                 	db	102
   386  00FE78  67                 	db	103
   387  00FE79  65                 	db	101
   388  00FE7A  66                 	db	102
   389  00FE7B  67                 	db	103
   390  00FE7C  68                 	db	104
   391  00FE7D  66                 	db	102
   392  00FE7E  67                 	db	103
   393  00FE7F  68                 	db	104
   394  00FE80  69                 	db	105
   395  00FE81  67                 	db	103
   396  00FE82  68                 	db	104
   397  00FE83  69                 	db	105
   398  00FE84  6A                 	db	106
   399  00FE85  68                 	db	104
   400  00FE86  69                 	db	105
   401  00FE87  6A                 	db	106
   402  00FE88  6B                 	db	107
   403  00FE89  69                 	db	105
   404  00FE8A  6A                 	db	106
   405  00FE8B  6B                 	db	107
   406  00FE8C  6C                 	db	108
   407  00FE8D  6A                 	db	106
   408  00FE8E  6B                 	db	107
   409  00FE8F  6C                 	db	108
   410  00FE90  6D                 	db	109
   411  00FE91  6B                 	db	107
   412  00FE92  6C                 	db	108
   413  00FE93  6D                 	db	109
   414  00FE94  6E                 	db	110
   415  00FE95  6C                 	db	108
   416  00FE96  6D                 	db	109
   417  00FE97  6E                 	db	110
   418  00FE98  6F                 	db	111
   419  00FE99  6D                 	db	109
   420  00FE9A  6E                 	db	110
   421  00FE9B  6F                 	db	111
   422  00FE9C  70                 	db	112
   423  00FE9D  6E                 	db	110
   424  00FE9E  6F                 	db	111
   425  00FE9F  70                 	db	112
   426  00FEA0  71                 	db	113
   427  00FEA1  00                 	db	0
   428  00FEA2                     __end_of_message5:
   429                           	opt callstack 0
   430  00FEA2                     _message8_256_digest:
   431                           	opt callstack 0
   432  00FEA2  CD                 	db	205
   433  00FEA3  C7                 	db	199
   434  00FEA4  6E                 	db	110
   435  00FEA5  5C                 	db	92
   436  00FEA6  99                 	db	153
   437  00FEA7  14                 	db	20
   438  00FEA8  FB                 	db	251
   439  00FEA9  92                 	db	146
   440  00FEAA  81                 	db	129
   441  00FEAB  A1                 	db	161
   442  00FEAC  C7                 	db	199
   443  00FEAD  E2                 	db	226
   444  00FEAE  84                 	db	132
   445  00FEAF  D7                 	db	215
   446  00FEB0  3E                 	db	62
   447  00FEB1  67                 	db	103
   448  00FEB2  F1                 	db	241
   449  00FEB3  80                 	db	128
   450  00FEB4  9A                 	db	154
   451  00FEB5  48                 	db	72
   452  00FEB6  A4                 	db	164
   453  00FEB7  97                 	db	151
   454  00FEB8  20                 	db	32
   455  00FEB9  0E                 	db	14
   456  00FEBA  04                 	db	4
   457  00FEBB  6D                 	db	109
   458  00FEBC  39                 	db	57
   459  00FEBD  CC                 	db	204
   460  00FEBE  C7                 	db	199
   461  00FEBF  11                 	db	17
   462  00FEC0  2C                 	db	44
   463  00FEC1  D0                 	db	208
   464  00FEC2                     __end_of_message8_256_digest:
   465                           	opt callstack 0
   466  00FEC2                     _message7_256_digest:
   467                           	opt callstack 0
   468  00FEC2  F3                 	db	243
   469  00FEC3  71                 	db	113
   470  00FEC4  BC                 	db	188
   471  00FEC5  4A                 	db	74
   472  00FEC6  31                 	db	49
   473  00FEC7  1F                 	db	31
   474  00FEC8  2B                 	db	43
   475  00FEC9  00                 	db	0
   476  00FECA  9E                 	db	158
   477  00FECB  EF                 	db	239
   478  00FECC  95                 	db	149
   479  00FECD  2D                 	db	45
   480  00FECE  D8                 	db	216
   481  00FECF  3C                 	db	60
   482  00FED0  A8                 	db	168
   483  00FED1  0E                 	db	14
   484  00FED2  2B                 	db	43
   485  00FED3  60                 	db	96
   486  00FED4  02                 	db	2
   487  00FED5  6C                 	db	108
   488  00FED6  8E                 	db	142
   489  00FED7  93                 	db	147
   490  00FED8  55                 	db	85
   491  00FED9  92                 	db	146
   492  00FEDA  D0                 	db	208
   493  00FEDB  F9                 	db	249
   494  00FEDC  C3                 	db	195
   495  00FEDD  08                 	db	8
   496  00FEDE  45                 	db	69
   497  00FEDF  3C                 	db	60
   498  00FEE0  81                 	db	129
   499  00FEE1  3E                 	db	62
   500  00FEE2                     __end_of_message7_256_digest:
   501                           	opt callstack 0
   502  00FEE2                     _message6_256_digest:
   503                           	opt callstack 0
   504  00FEE2  DB                 	db	219
   505  00FEE3  4B                 	db	75
   506  00FEE4  FC                 	db	252
   507  00FEE5  BD                 	db	189
   508  00FEE6  4D                 	db	77
   509  00FEE7  A0                 	db	160
   510  00FEE8  CD                 	db	205
   511  00FEE9  85                 	db	133
   512  00FEEA  A6                 	db	166
   513  00FEEB  0C                 	db	12
   514  00FEEC  3C                 	db	60
   515  00FEED  37                 	db	55
   516  00FEEE  D3                 	db	211
   517  00FEEF  FB                 	db	251
   518  00FEF0  D8                 	db	216
   519  00FEF1  80                 	db	128
   520  00FEF2  5C                 	db	92
   521  00FEF3  77                 	db	119
   522  00FEF4  F1                 	db	241
   523  00FEF5  5F                 	db	95
   524  00FEF6  C6                 	db	198
   525  00FEF7  B1                 	db	177
   526  00FEF8  FD                 	db	253
   527  00FEF9  FE                 	db	254
   528  00FEFA  61                 	db	97
   529  00FEFB  4E                 	db	78
   530  00FEFC  E0                 	db	224
   531  00FEFD  A7                 	db	167
   532  00FEFE  C8                 	db	200
   533  00FEFF  FD                 	db	253
   534  00FF00  B4                 	db	180
   535  00FF01  C0                 	db	192
   536  00FF02                     __end_of_message6_256_digest:
   537                           	opt callstack 0
   538  00FF02                     _message5_256_digest:
   539                           	opt callstack 0
   540  00FF02  24                 	db	36
   541  00FF03  8D                 	db	141
   542  00FF04  6A                 	db	106
   543  00FF05  61                 	db	97
   544  00FF06  D2                 	db	210
   545  00FF07  06                 	db	6
   546  00FF08  38                 	db	56
   547  00FF09  B8                 	db	184
   548  00FF0A  E5                 	db	229
   549  00FF0B  C0                 	db	192
   550  00FF0C  26                 	db	38
   551  00FF0D  93                 	db	147
   552  00FF0E  0C                 	db	12
   553  00FF0F  3E                 	db	62
   554  00FF10  60                 	db	96
   555  00FF11  39                 	db	57
   556  00FF12  A3                 	db	163
   557  00FF13  3C                 	db	60
   558  00FF14  E4                 	db	228
   559  00FF15  59                 	db	89
   560  00FF16  64                 	db	100
   561  00FF17  FF                 	db	255
   562  00FF18  21                 	db	33
   563  00FF19  67                 	db	103
   564  00FF1A  F6                 	db	246
   565  00FF1B  EC                 	db	236
   566  00FF1C  ED                 	db	237
   567  00FF1D  D4                 	db	212
   568  00FF1E  19                 	db	25
   569  00FF1F  DB                 	db	219
   570  00FF20  06                 	db	6
   571  00FF21  C1                 	db	193
   572  00FF22                     __end_of_message5_256_digest:
   573                           	opt callstack 0
   574  00FF22                     _message4_256_digest:
   575                           	opt callstack 0
   576  00FF22  71                 	db	113
   577  00FF23  C4                 	db	196
   578  00FF24  80                 	db	128
   579  00FF25  DF                 	db	223
   580  00FF26  93                 	db	147
   581  00FF27  D6                 	db	214
   582  00FF28  AE                 	db	174
   583  00FF29  2F                 	db	47
   584  00FF2A  1E                 	db	30
   585  00FF2B  FA                 	db	250
   586  00FF2C  D1                 	db	209
   587  00FF2D  44                 	db	68
   588  00FF2E  7C                 	db	124
   589  00FF2F  66                 	db	102
   590  00FF30  C9                 	db	201
   591  00FF31  52                 	db	82
   592  00FF32  5E                 	db	94
   593  00FF33  31                 	db	49
   594  00FF34  62                 	db	98
   595  00FF35  18                 	db	24
   596  00FF36  CF                 	db	207
   597  00FF37  51                 	db	81
   598  00FF38  FC                 	db	252
   599  00FF39  8D                 	db	141
   600  00FF3A  9E                 	db	158
   601  00FF3B  D8                 	db	216
   602  00FF3C  32                 	db	50
   603  00FF3D  F2                 	db	242
   604  00FF3E  DA                 	db	218
   605  00FF3F  F1                 	db	241
   606  00FF40  8B                 	db	139
   607  00FF41  73                 	db	115
   608  00FF42                     __end_of_message4_256_digest:
   609                           	opt callstack 0
   610  00FF42                     _message3_256_digest:
   611                           	opt callstack 0
   612  00FF42  F7                 	db	247
   613  00FF43  84                 	db	132
   614  00FF44  6F                 	db	111
   615  00FF45  55                 	db	85
   616  00FF46  CF                 	db	207
   617  00FF47  23                 	db	35
   618  00FF48  E1                 	db	225
   619  00FF49  4E                 	db	78
   620  00FF4A  EB                 	db	235
   621  00FF4B  EA                 	db	234
   622  00FF4C  B5                 	db	181
   623  00FF4D  B4                 	db	180
   624  00FF4E  E1                 	db	225
   625  00FF4F  55                 	db	85
   626  00FF50  0C                 	db	12
   627  00FF51  AD                 	db	173
   628  00FF52  5B                 	db	91
   629  00FF53  50                 	db	80
   630  00FF54  9E                 	db	158
   631  00FF55  33                 	db	51
   632  00FF56  48                 	db	72
   633  00FF57  FB                 	db	251
   634  00FF58  C4                 	db	196
   635  00FF59  EF                 	db	239
   636  00FF5A  A3                 	db	163
   637  00FF5B  A1                 	db	161
   638  00FF5C  41                 	db	65
   639  00FF5D  3D                 	db	61
   640  00FF5E  39                 	db	57
   641  00FF5F  3C                 	db	60
   642  00FF60  B6                 	db	182
   643  00FF61  50                 	db	80
   644  00FF62                     __end_of_message3_256_digest:
   645                           	opt callstack 0
   646  00FF62                     _message2_256_digest:
   647                           	opt callstack 0
   648  00FF62  BA                 	db	186
   649  00FF63  78                 	db	120
   650  00FF64  16                 	db	22
   651  00FF65  BF                 	db	191
   652  00FF66  8F                 	db	143
   653  00FF67  01                 	db	1
   654  00FF68  CF                 	db	207
   655  00FF69  EA                 	db	234
   656  00FF6A  41                 	db	65
   657  00FF6B  41                 	db	65
   658  00FF6C  40                 	db	64
   659  00FF6D  DE                 	db	222
   660  00FF6E  5D                 	db	93
   661  00FF6F  AE                 	db	174
   662  00FF70  22                 	db	34
   663  00FF71  23                 	db	35
   664  00FF72  B0                 	db	176
   665  00FF73  03                 	db	3
   666  00FF74  61                 	db	97
   667  00FF75  A3                 	db	163
   668  00FF76  96                 	db	150
   669  00FF77  17                 	db	23
   670  00FF78  7A                 	db	122
   671  00FF79  9C                 	db	156
   672  00FF7A  B4                 	db	180
   673  00FF7B  10                 	db	16
   674  00FF7C  FF                 	db	255
   675  00FF7D  61                 	db	97
   676  00FF7E  F2                 	db	242
   677  00FF7F  00                 	db	0
   678  00FF80  15                 	db	21
   679  00FF81  AD                 	db	173
   680  00FF82                     __end_of_message2_256_digest:
   681                           	opt callstack 0
   682  00FF82                     _message4:
   683                           	opt callstack 0
   684  00FF82  61                 	db	97
   685  00FF83  62                 	db	98
   686  00FF84  63                 	db	99
   687  00FF85  64                 	db	100
   688  00FF86  65                 	db	101
   689  00FF87  66                 	db	102
   690  00FF88  67                 	db	103
   691  00FF89  68                 	db	104
   692  00FF8A  69                 	db	105
   693  00FF8B  6A                 	db	106
   694  00FF8C  6B                 	db	107
   695  00FF8D  6C                 	db	108
   696  00FF8E  6D                 	db	109
   697  00FF8F  6E                 	db	110
   698  00FF90  6F                 	db	111
   699  00FF91  70                 	db	112
   700  00FF92  71                 	db	113
   701  00FF93  72                 	db	114
   702  00FF94  73                 	db	115
   703  00FF95  74                 	db	116
   704  00FF96  75                 	db	117
   705  00FF97  76                 	db	118
   706  00FF98  77                 	db	119
   707  00FF99  78                 	db	120
   708  00FF9A  79                 	db	121
   709  00FF9B  7A                 	db	122
   710  00FF9C  00                 	db	0
   711  00FF9D                     __end_of_message4:
   712                           	opt callstack 0
   713  00FF9D                     _message3:
   714                           	opt callstack 0
   715  00FF9D  6D                 	db	109
   716  00FF9E  65                 	db	101
   717  00FF9F  73                 	db	115
   718  00FFA0  73                 	db	115
   719  00FFA1  61                 	db	97
   720  00FFA2  67                 	db	103
   721  00FFA3  65                 	db	101
   722  00FFA4  20                 	db	32
   723  00FFA5  64                 	db	100
   724  00FFA6  69                 	db	105
   725  00FFA7  67                 	db	103
   726  00FFA8  65                 	db	101
   727  00FFA9  73                 	db	115
   728  00FFAA  74                 	db	116
   729  00FFAB  00                 	db	0
   730  00FFAC                     __end_of_message3:
   731                           	opt callstack 0
   732  00FFAC                     _message7:
   733                           	opt callstack 0
   734  00FFAC  31                 	db	49
   735  00FFAD  32                 	db	50
   736  00FFAE  33                 	db	51
   737  00FFAF  34                 	db	52
   738  00FFB0  35                 	db	53
   739  00FFB1  36                 	db	54
   740  00FFB2  37                 	db	55
   741  00FFB3  38                 	db	56
   742  00FFB4  39                 	db	57
   743  00FFB5  30                 	db	48
   744  00FFB6  00                 	db	0
   745  00FFB7                     __end_of_message7:
   746                           	opt callstack 0
   747  00FFB7                     _message2:
   748                           	opt callstack 0
   749  00FFB7  61                 	db	97
   750  00FFB8  62                 	db	98
   751  00FFB9  63                 	db	99
   752  00FFBA  00                 	db	0
   753  00FFBB                     __end_of_message2:
   754                           	opt callstack 0
   755  00FFBB                     _message1_256_digest:
   756                           	opt callstack 0
   757  00FFBB  CA                 	db	202
   758  00FFBC  97                 	db	151
   759  00FFBD  81                 	db	129
   760  00FFBE  12                 	db	18
   761  00FFBF  CA                 	db	202
   762  00FFC0  1B                 	db	27
   763  00FFC1  BD                 	db	189
   764  00FFC2  CA                 	db	202
   765  00FFC3  FA                 	db	250
   766  00FFC4  C2                 	db	194
   767  00FFC5  31                 	db	49
   768  00FFC6  B3                 	db	179
   769  00FFC7  9A                 	db	154
   770  00FFC8  23                 	db	35
   771  00FFC9  DC                 	db	220
   772  00FFCA  4D                 	db	77
   773  00FFCB  A7                 	db	167
   774  00FFCC  86                 	db	134
   775  00FFCD  EF                 	db	239
   776  00FFCE  F8                 	db	248
   777  00FFCF  14                 	db	20
   778  00FFD0  7C                 	db	124
   779  00FFD1  4E                 	db	78
   780  00FFD2  72                 	db	114
   781  00FFD3  B9                 	db	185
   782  00FFD4  80                 	db	128
   783  00FFD5  77                 	db	119
   784  00FFD6  85                 	db	133
   785  00FFD7  AF                 	db	175
   786  00FFD8  EE                 	db	238
   787  00FFD9  48                 	db	72
   788  00FFDA  BB                 	db	187
   789  00FFDB                     __end_of_message1_256_digest:
   790                           	opt callstack 0
   791  00FFDB                     _message0_256_digest:
   792                           	opt callstack 0
   793  00FFDB  E3                 	db	227
   794  00FFDC  B0                 	db	176
   795  00FFDD  C4                 	db	196
   796  00FFDE  42                 	db	66
   797  00FFDF  98                 	db	152
   798  00FFE0  FC                 	db	252
   799  00FFE1  1C                 	db	28
   800  00FFE2  14                 	db	20
   801  00FFE3  9A                 	db	154
   802  00FFE4  FB                 	db	251
   803  00FFE5  F4                 	db	244
   804  00FFE6  C8                 	db	200
   805  00FFE7  99                 	db	153
   806  00FFE8  6F                 	db	111
   807  00FFE9  B9                 	db	185
   808  00FFEA  24                 	db	36
   809  00FFEB  27                 	db	39
   810  00FFEC  AE                 	db	174
   811  00FFED  41                 	db	65
   812  00FFEE  E4                 	db	228
   813  00FFEF  64                 	db	100
   814  00FFF0  9B                 	db	155
   815  00FFF1  93                 	db	147
   816  00FFF2  4C                 	db	76
   817  00FFF3  A4                 	db	164
   818  00FFF4  95                 	db	149
   819  00FFF5  99                 	db	153
   820  00FFF6  1B                 	db	27
   821  00FFF7  78                 	db	120
   822  00FFF8  52                 	db	82
   823  00FFF9  B8                 	db	184
   824  00FFFA  55                 	db	85
   825  00FFFB                     __end_of_message0_256_digest:
   826                           	opt callstack 0
   827  00FFFB                     _message1:
   828                           	opt callstack 0
   829  00FFFB  61                 	db	97
   830  00FFFC  00                 	db	0
   831  00FFFD                     __end_of_message1:
   832                           	opt callstack 0
   833  00FFFD                     _message0:
   834                           	opt callstack 0
   835  00FFFD  00                 	db	0
   836  00FFFE                     __end_of_message0:
   837                           	opt callstack 0
   838  0000                     _PMD7	set	14791
   839  0000                     _PMD6	set	14790
   840  0000                     _PMD5	set	14789
   841  0000                     _PMD4	set	14788
   842  0000                     _PMD3	set	14787
   843  0000                     _PMD2	set	14786
   844  0000                     _PMD1	set	14785
   845  0000                     _PMD0	set	14784
   846  0000                     _OSCTUNE	set	14814
   847  0000                     _OSCFRQ	set	14815
   848  0000                     _OSCEN	set	14813
   849  0000                     _OSCCON3	set	14811
   850  0000                     _OSCCON1	set	14809
   851  0000                     _INLVLE	set	14980
   852  0000                     _INLVLD	set	14964
   853  0000                     _INLVLC	set	14948
   854  0000                     _INLVLB	set	14932
   855  0000                     _INLVLA	set	14916
   856  0000                     _SLRCONE	set	14979
   857  0000                     _SLRCOND	set	14963
   858  0000                     _SLRCONC	set	14947
   859  0000                     _SLRCONB	set	14931
   860  0000                     _SLRCONA	set	14915
   861  0000                     _ODCOND	set	14962
   862  0000                     _ODCONC	set	14946
   863  0000                     _ODCONB	set	14930
   864  0000                     _ODCONA	set	14914
   865  0000                     _ODCONE	set	14978
   866  0000                     _RD1I2C	set	14971
   867  0000                     _RD0I2C	set	14970
   868  0000                     _RC4I2C	set	14955
   869  0000                     _RC3I2C	set	14954
   870  0000                     _RB2I2C	set	14939
   871  0000                     _RB1I2C	set	14938
   872  0000                     _WPUC	set	14945
   873  0000                     _WPUA	set	14913
   874  0000                     _WPUB	set	14929
   875  0000                     _WPUE	set	14977
   876  0000                     _WPUD	set	14961
   877  0000                     _ANSELA	set	14912
   878  0000                     _ANSELE	set	14976
   879  0000                     _ANSELB	set	14928
   880  0000                     _ANSELC	set	14944
   881  0000                     _ANSELD	set	14960
   882  0000                     _TRISD	set	16325
   883  0000                     _TRISC	set	16324
   884  0000                     _TRISB	set	16323
   885  0000                     _TRISA	set	16322
   886  0000                     _TRISE	set	16326
   887  0000                     _LATC	set	16316
   888  0000                     _LATB	set	16315
   889  0000                     _LATA	set	16314
   890  0000                     _LATD	set	16317
   891  0000                     _LATE	set	16318
   892                           
   893                           ; #config settings
   894  00FFFE  00                 	db	0	; dummy byte at the end
   895  0000                     
   896                           	psect	cinit
   897  011586                     __pcinit:
   898                           	opt callstack 0
   899  011586                     start_initialization:
   900                           	opt callstack 0
   901  011586                     __initialization:
   902                           	opt callstack 0
   903                           
   904                           ; Clear objects allocated to BIGRAM (320 bytes)
   905  011586  EE00  F167         	lfsr	0,__pbssBIGRAM
   906  01158A  EE10 F140          	lfsr	1,320
   907  01158E                     clear_0:
   908  01158E  6AEE               	clrf	postinc0,c
   909  011590  50E5               	movf	postdec1,w,c
   910  011592  50E1               	movf	fsr1l,w,c
   911  011594  E1FC               	bnz	clear_0
   912  011596  50E2               	movf	fsr1h,w,c
   913  011598  E1FA               	bnz	clear_0
   914                           
   915                           ; Clear objects allocated to BANK1 (103 bytes)
   916  01159A  EE00  F100         	lfsr	0,__pbssBANK1
   917  01159E  0E67               	movlw	103
   918  0115A0                     clear_1:
   919  0115A0  6AEE               	clrf	postinc0,c
   920  0115A2  06E8               	decf	wreg,f,c
   921  0115A4  E1FD               	bnz	clear_1
   922                           
   923                           ; Clear objects allocated to BANK0 (64 bytes)
   924  0115A6  EE00  F060         	lfsr	0,__pbssBANK0
   925  0115AA  0E40               	movlw	64
   926  0115AC                     clear_2:
   927  0115AC  6AEE               	clrf	postinc0,c
   928  0115AE  06E8               	decf	wreg,f,c
   929  0115B0  E1FD               	bnz	clear_2
   930  0115B2                     end_of_initialization:
   931                           	opt callstack 0
   932  0115B2                     __end_of__initialization:
   933                           	opt callstack 0
   934  0115B2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   935  0115B4  6EF8               	movwf	tblptru,c
   936  0115B6  0100               	movlb	0
   937  0115B8  EF81  F089         	goto	_main	;jump to C main() function
   938                           
   939                           	psect	bssBANK0
   940  000060                     __pbssBANK0:
   941                           	opt callstack 0
   942  000060                     _digest:
   943                           	opt callstack 0
   944  000060                     	ds	64
   945                           
   946                           	psect	bssBANK1
   947  000100                     __pbssBANK1:
   948                           	opt callstack 0
   949  000100                     _contexts:
   950                           	opt callstack 0
   951  000100                     	ds	103
   952                           
   953                           	psect	bssBIGRAM
   954  000167                     __pbssBIGRAM:
   955                           	opt callstack 0
   956  000167                     _workingBuffer:
   957                           	opt callstack 0
   958  000167                     	ds	320
   959                           
   960                           	psect	cstackBANK0
   961  0000A0                     __pcstackBANK0:
   962                           	opt callstack 0
   963  0000A0                     SHA256_HashBlock@t2:
   964                           	opt callstack 0
   965                           
   966                           ; 4 bytes @ 0x0
   967  0000A0                     	ds	4
   968  0000A4                     SHA256_HashBlock@d:
   969                           	opt callstack 0
   970                           
   971                           ; 4 bytes @ 0x4
   972  0000A4                     	ds	4
   973  0000A8                     SHA256_HashBlock@h:
   974                           	opt callstack 0
   975                           
   976                           ; 4 bytes @ 0x8
   977  0000A8                     	ds	4
   978  0000AC                     SHA256_HashBlock@f:
   979                           	opt callstack 0
   980                           
   981                           ; 4 bytes @ 0xC
   982  0000AC                     	ds	4
   983  0000B0                     SHA256_HashBlock@g:
   984                           	opt callstack 0
   985                           
   986                           ; 4 bytes @ 0x10
   987  0000B0                     	ds	4
   988  0000B4                     SHA256_HashBlock@b:
   989                           	opt callstack 0
   990                           
   991                           ; 4 bytes @ 0x14
   992  0000B4                     	ds	4
   993  0000B8                     SHA256_HashBlock@c:
   994                           	opt callstack 0
   995                           
   996                           ; 4 bytes @ 0x18
   997  0000B8                     	ds	4
   998  0000BC                     SHA256_HashBlock@t1:
   999                           	opt callstack 0
  1000                           
  1001                           ; 4 bytes @ 0x1C
  1002  0000BC                     	ds	4
  1003  0000C0                     SHA256_HashBlock@dataPtr:
  1004                           	opt callstack 0
  1005                           
  1006                           ; 2 bytes @ 0x20
  1007  0000C0                     	ds	2
  1008  0000C2                     SHA256_HashBlock@a:
  1009                           	opt callstack 0
  1010                           
  1011                           ; 4 bytes @ 0x22
  1012  0000C2                     	ds	4
  1013  0000C6                     SHA256_HashBlock@e:
  1014                           	opt callstack 0
  1015                           
  1016                           ; 4 bytes @ 0x26
  1017  0000C6                     	ds	4
  1018  0000CA                     SHA256_HashBlock@i:
  1019                           	opt callstack 0
  1020                           
  1021                           ; 1 bytes @ 0x2A
  1022  0000CA                     	ds	1
  1023  0000CB                     SHA256_HashBlock@schedulePtr:
  1024                           	opt callstack 0
  1025                           
  1026                           ; 2 bytes @ 0x2B
  1027  0000CB                     	ds	2
  1028  0000CD                     SHA256_DataAdd@context:
  1029                           	opt callstack 0
  1030  0000CD                     SHA256_Calculate@context:
  1031                           	opt callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x2D
  1034  0000CD                     	ds	2
  1035  0000CF                     SHA256_DataAdd@data:
  1036                           	opt callstack 0
  1037  0000CF                     SHA256_Calculate@result:
  1038                           	opt callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x2F
  1041  0000CF                     	ds	2
  1042  0000D1                     ??_SHA256_Calculate:
  1043  0000D1                     SHA256_DataAdd@len:
  1044                           	opt callstack 0
  1045                           
  1046                           ; 4 bytes @ 0x31
  1047  0000D1                     	ds	4
  1048  0000D5                     ??_SHA256_DataAdd:
  1049  0000D5                     SHA256_Calculate@endPtr:
  1050                           	opt callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x35
  1053  0000D5                     	ds	2
  1054  0000D7                     SHA256_Calculate@i:
  1055                           	opt callstack 0
  1056                           
  1057                           ; 1 bytes @ 0x37
  1058  0000D7                     	ds	1
  1059  0000D8                     SHA256_Calculate@blockPtr:
  1060                           	opt callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x38
  1063  0000D8                     	ds	1
  1064  0000D9                     SHA256_DataAdd@blockPtr:
  1065                           	opt callstack 0
  1066                           
  1067                           ; 2 bytes @ 0x39
  1068  0000D9                     	ds	2
  1069                           
  1070                           	psect	cstackCOMRAM
  1071  000001                     __pcstackCOMRAM:
  1072                           	opt callstack 0
  1073  000001                     ?_memcmp:
  1074                           	opt callstack 0
  1075  000001                     SHA256_Initialize@context:
  1076                           	opt callstack 0
  1077  000001                     SHA256_HashBlock@context:
  1078                           	opt callstack 0
  1079  000001                     SHA256_OutputData@output:
  1080                           	opt callstack 0
  1081  000001                     memcmp@vl:
  1082                           	opt callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x0
  1085  000001                     	ds	2
  1086  000003                     ??_SHA256_HashBlock:
  1087  000003                     SHA256_Initialize@length:
  1088                           	opt callstack 0
  1089  000003                     memcmp@vr:
  1090                           	opt callstack 0
  1091  000003                     SHA256_OutputData@value:
  1092                           	opt callstack 0
  1093                           
  1094                           ; 4 bytes @ 0x2
  1095  000003                     	ds	1
  1096  000004                     SHA256_Initialize@workingBuffer:
  1097                           	opt callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x3
  1100  000004                     	ds	1
  1101  000005                     memcmp@n:
  1102                           	opt callstack 0
  1103                           
  1104                           ; 2 bytes @ 0x4
  1105  000005                     	ds	1
  1106  000006                     
  1107                           ; 1 bytes @ 0x5
  1108  000006                     	ds	1
  1109  000007                     ??_memcmp:
  1110                           
  1111                           ; 1 bytes @ 0x6
  1112  000007                     	ds	1
  1113  000008                     memcmp@l:
  1114                           	opt callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x7
  1117  000008                     	ds	2
  1118  00000A                     memcmp@r:
  1119                           	opt callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x9
  1122  00000A                     	ds	85
  1123  00005F                     
  1124                           ; 1 bytes @ 0x5E
  1125 ;;
  1126 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1127 ;;
  1128 ;; *************** function _main *****************
  1129 ;; Defined at:
  1130 ;;		line 50 in file "main.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;		None
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;		None
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1148 ;;Total ram usage:        0 bytes
  1149 ;; Hardware stack levels required when called:    2
  1150 ;; This function calls:
  1151 ;;		_SHA256_Calculate
  1152 ;;		_SHA256_DataAdd
  1153 ;;		_SHA256_Initialize
  1154 ;;		_SYSTEM_Initialize
  1155 ;;		_memcmp
  1156 ;; This function is called by:
  1157 ;;		Startup code after reset
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           	psect	text0
  1162  011302                     __ptext0:
  1163                           	opt callstack 0
  1164  011302                     _main:
  1165                           	opt callstack 29
  1166  011302                     
  1167                           ;main.c: 53:     SYSTEM_Initialize();
  1168  011302  ECFC  F08A         	call	_SYSTEM_Initialize	;wreg free
  1169  011306                     l1538:
  1170                           
  1171                           ;main.c: 66:     {;main.c: 68:      SHA256_Initialize (&contexts.context256, SHA2_256, w
      +                          orkingBuffer.workingBuffer32);
  1172  011306  0E00               	movlw	low _contexts
  1173  011308  6E01               	movwf	SHA256_Initialize@context^0,c
  1174  01130A  0E01               	movlw	high _contexts
  1175  01130C  6E02               	movwf	(SHA256_Initialize@context+1)^0,c
  1176  01130E  0E01               	movlw	1
  1177  011310  6E03               	movwf	SHA256_Initialize@length^0,c
  1178  011312  0E67               	movlw	low _workingBuffer
  1179  011314  6E04               	movwf	SHA256_Initialize@workingBuffer^0,c
  1180  011316  0E01               	movlw	high _workingBuffer
  1181  011318  6E05               	movwf	(SHA256_Initialize@workingBuffer+1)^0,c
  1182  01131A  EC00  F088         	call	_SHA256_Initialize	;wreg free
  1183  01131E                     
  1184                           ;main.c: 69:     SHA256_DataAdd (&contexts.context256, (uint8_t *)message0, 0);
  1185  01131E  0E00               	movlw	low _contexts
  1186  011320  0100               	movlb	0	; () banked
  1187  011322  6FCD               	movwf	SHA256_DataAdd@context& (0+255),b
  1188  011324  0E01               	movlw	high _contexts
  1189  011326  6FCE               	movwf	(SHA256_DataAdd@context+1)& (0+255),b
  1190  011328  0EFD               	movlw	low _message0
  1191  01132A  6FCF               	movwf	SHA256_DataAdd@data& (0+255),b
  1192  01132C  0EFF               	movlw	high _message0
  1193  01132E  6FD0               	movwf	(SHA256_DataAdd@data+1)& (0+255),b
  1194  011330  0E00               	movlw	0
  1195  011332  6FD1               	movwf	SHA256_DataAdd@len& (0+255),b
  1196  011334  0E00               	movlw	0
  1197  011336  6FD2               	movwf	(SHA256_DataAdd@len+1)& (0+255),b
  1198  011338  0E00               	movlw	0
  1199  01133A  6FD3               	movwf	(SHA256_DataAdd@len+2)& (0+255),b
  1200  01133C  0E00               	movlw	0
  1201  01133E  6FD4               	movwf	(SHA256_DataAdd@len+3)& (0+255),b
  1202  011340  EC0A  F089         	call	_SHA256_DataAdd	;wreg free
  1203  011344                     
  1204                           ;main.c: 70:     SHA256_Calculate (&contexts.context256, digest);
  1205  011344  0E00               	movlw	low _contexts
  1206  011346  0100               	movlb	0	; () banked
  1207  011348  6FCD               	movwf	SHA256_Calculate@context& (0+255),b
  1208  01134A  0E01               	movlw	high _contexts
  1209  01134C  6FCE               	movwf	(SHA256_Calculate@context+1)& (0+255),b
  1210  01134E  0E60               	movlw	low _digest
  1211  011350  6FCF               	movwf	SHA256_Calculate@result& (0+255),b
  1212  011352  0E00               	movlw	high _digest
  1213  011354  6FD0               	movwf	(SHA256_Calculate@result+1)& (0+255),b
  1214  011356  EC5F  F086         	call	_SHA256_Calculate	;wreg free
  1215  01135A                     
  1216                           ;main.c: 71:     if (memcmp(digest, message0_256_digest, 32))
  1217  01135A  0E60               	movlw	low _digest
  1218  01135C  6E01               	movwf	memcmp@vl^0,c
  1219  01135E  0E00               	movlw	high _digest
  1220  011360  6E02               	movwf	(memcmp@vl+1)^0,c
  1221  011362  0EDB               	movlw	low _message0_256_digest
  1222  011364  6E03               	movwf	memcmp@vr^0,c
  1223  011366  0EFF               	movlw	high _message0_256_digest
  1224  011368  6E04               	movwf	(memcmp@vr+1)^0,c
  1225  01136A  0E00               	movlw	0
  1226  01136C  6E06               	movwf	(memcmp@n+1)^0,c
  1227  01136E  0E20               	movlw	32
  1228  011370  6E05               	movwf	memcmp@n^0,c
  1229  011372  ECF7  F089         	call	_memcmp	;wreg free
  1230  011376                     
  1231                           ;main.c: 79:     SHA256_Initialize (&contexts.context256, SHA2_256, workingBuffer.workin
      +                          gBuffer32);
  1232  011376  0E00               	movlw	low _contexts
  1233  011378  6E01               	movwf	SHA256_Initialize@context^0,c
  1234  01137A  0E01               	movlw	high _contexts
  1235  01137C  6E02               	movwf	(SHA256_Initialize@context+1)^0,c
  1236  01137E  0E01               	movlw	1
  1237  011380  6E03               	movwf	SHA256_Initialize@length^0,c
  1238  011382  0E67               	movlw	low _workingBuffer
  1239  011384  6E04               	movwf	SHA256_Initialize@workingBuffer^0,c
  1240  011386  0E01               	movlw	high _workingBuffer
  1241  011388  6E05               	movwf	(SHA256_Initialize@workingBuffer+1)^0,c
  1242  01138A  EC00  F088         	call	_SHA256_Initialize	;wreg free
  1243  01138E                     
  1244                           ;main.c: 80:     SHA256_DataAdd (&contexts.context256, (uint8_t *)message1, 1);
  1245  01138E  0E00               	movlw	low _contexts
  1246  011390  0100               	movlb	0	; () banked
  1247  011392  6FCD               	movwf	SHA256_DataAdd@context& (0+255),b
  1248  011394  0E01               	movlw	high _contexts
  1249  011396  6FCE               	movwf	(SHA256_DataAdd@context+1)& (0+255),b
  1250  011398  0EFB               	movlw	low _message1
  1251  01139A  6FCF               	movwf	SHA256_DataAdd@data& (0+255),b
  1252  01139C  0EFF               	movlw	high _message1
  1253  01139E  6FD0               	movwf	(SHA256_DataAdd@data+1)& (0+255),b
  1254  0113A0  0E01               	movlw	1
  1255  0113A2  6FD1               	movwf	SHA256_DataAdd@len& (0+255),b
  1256  0113A4  0E00               	movlw	0
  1257  0113A6  6FD2               	movwf	(SHA256_DataAdd@len+1)& (0+255),b
  1258  0113A8  0E00               	movlw	0
  1259  0113AA  6FD3               	movwf	(SHA256_DataAdd@len+2)& (0+255),b
  1260  0113AC  0E00               	movlw	0
  1261  0113AE  6FD4               	movwf	(SHA256_DataAdd@len+3)& (0+255),b
  1262  0113B0  EC0A  F089         	call	_SHA256_DataAdd	;wreg free
  1263  0113B4                     
  1264                           ;main.c: 81:     SHA256_Calculate (&contexts.context256, digest);
  1265  0113B4  0E00               	movlw	low _contexts
  1266  0113B6  0100               	movlb	0	; () banked
  1267  0113B8  6FCD               	movwf	SHA256_Calculate@context& (0+255),b
  1268  0113BA  0E01               	movlw	high _contexts
  1269  0113BC  6FCE               	movwf	(SHA256_Calculate@context+1)& (0+255),b
  1270  0113BE  0E60               	movlw	low _digest
  1271  0113C0  6FCF               	movwf	SHA256_Calculate@result& (0+255),b
  1272  0113C2  0E00               	movlw	high _digest
  1273  0113C4  6FD0               	movwf	(SHA256_Calculate@result+1)& (0+255),b
  1274  0113C6  EC5F  F086         	call	_SHA256_Calculate	;wreg free
  1275  0113CA                     
  1276                           ;main.c: 82:     if (memcmp(digest, message1_256_digest, 32))
  1277  0113CA  0E60               	movlw	low _digest
  1278  0113CC  6E01               	movwf	memcmp@vl^0,c
  1279  0113CE  0E00               	movlw	high _digest
  1280  0113D0  6E02               	movwf	(memcmp@vl+1)^0,c
  1281  0113D2  0EBB               	movlw	low _message1_256_digest
  1282  0113D4  6E03               	movwf	memcmp@vr^0,c
  1283  0113D6  0EFF               	movlw	high _message1_256_digest
  1284  0113D8  6E04               	movwf	(memcmp@vr+1)^0,c
  1285  0113DA  0E00               	movlw	0
  1286  0113DC  6E06               	movwf	(memcmp@n+1)^0,c
  1287  0113DE  0E20               	movlw	32
  1288  0113E0  6E05               	movwf	memcmp@n^0,c
  1289  0113E2  ECF7  F089         	call	_memcmp	;wreg free
  1290  0113E6  EF83  F089         	goto	l1538
  1291  0113EA  EFFE  F0FF         	goto	start
  1292  0113EE                     __end_of_main:
  1293                           	opt callstack 0
  1294                           
  1295 ;; *************** function _memcmp *****************
  1296 ;; Defined at:
  1297 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memcmp.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;  vl              2    0[COMRAM] PTR const void 
  1300 ;;		 -> digest(64), 
  1301 ;;  vr              2    2[COMRAM] PTR const void 
  1302 ;;		 -> message1_256_digest(32), message0_256_digest(32), 
  1303 ;;  n               2    4[COMRAM] unsigned int 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  r               2    9[COMRAM] PTR const unsigned char 
  1306 ;;		 -> message1_256_digest(32), message0_256_digest(32), 
  1307 ;;  l               2    7[COMRAM] PTR const unsigned char 
  1308 ;;		 -> digest(64), 
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  2    0[COMRAM] int 
  1311 ;; Registers used:
  1312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1318 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1319 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1320 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1321 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1322 ;;Total ram usage:       11 bytes
  1323 ;; Hardware stack levels used:    1
  1324 ;; This function calls:
  1325 ;;		Nothing
  1326 ;; This function is called by:
  1327 ;;		_main
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           	psect	text1
  1332  0113EE                     __ptext1:
  1333                           	opt callstack 0
  1334  0113EE                     _memcmp:
  1335                           	opt callstack 30
  1336  0113EE  0060  F004  F008   	movff	memcmp@vl,memcmp@l
  1337  0113F4  0060  F008  F009   	movff	memcmp@vl+1,memcmp@l+1
  1338  0113FA  0060  F00C  F00A   	movff	memcmp@vr,memcmp@r
  1339  011400  0060  F010  F00B   	movff	memcmp@vr+1,memcmp@r+1
  1340  011406  EF0C  F08A         	goto	l1524
  1341  01140A                     l1522:
  1342  01140A  0605               	decf	memcmp@n^0,f,c
  1343  01140C  A0D8               	btfss	status,0,c
  1344  01140E  0606               	decf	(memcmp@n+1)^0,f,c
  1345  011410  4A08               	infsnz	memcmp@l^0,f,c
  1346  011412  2A09               	incf	(memcmp@l+1)^0,f,c
  1347  011414  4A0A               	infsnz	memcmp@r^0,f,c
  1348  011416  2A0B               	incf	(memcmp@r+1)^0,f,c
  1349  011418                     l1524:
  1350  011418  5005               	movf	memcmp@n^0,w,c
  1351  01141A  1006               	iorwf	(memcmp@n+1)^0,w,c
  1352  01141C  B4D8               	btfsc	status,2,c
  1353  01141E  EF13  F08A         	goto	u781
  1354  011422  EF15  F08A         	goto	u780
  1355  011426                     u781:
  1356  011426  EF2D  F08A         	goto	l1528
  1357  01142A                     u780:
  1358  01142A  0060  F023  FFD9   	movff	memcmp@l,fsr2l
  1359  011430  0060  F027  FFDA   	movff	memcmp@l+1,fsr2h
  1360  011436  50DF               	movf	indf2,w,c
  1361  011438  6E07               	movwf	??_memcmp^0,c
  1362  01143A  0060  F02B  FFF6   	movff	memcmp@r,tblptrl
  1363  011440  0060  F02F  FFF7   	movff	memcmp@r+1,tblptrh
  1364  011446                     	if	0	;tblptru may be non-zero
  1365  011446                     	endif
  1366  011446                     	if	0	;tblptru may be non-zero
  1367  011446                     	endif
  1368  011446  0008               	tblrd		*
  1369  011448  50F5               	movf	tablat,w,c
  1370  01144A  1807               	xorwf	??_memcmp^0,w,c
  1371  01144C  B4D8               	btfsc	status,2,c
  1372  01144E  EF2B  F08A         	goto	u791
  1373  011452  EF2D  F08A         	goto	u790
  1374  011456                     u791:
  1375  011456  EF05  F08A         	goto	l1522
  1376  01145A                     u790:
  1377  01145A                     l1528:
  1378  01145A  5005               	movf	memcmp@n^0,w,c
  1379  01145C  1006               	iorwf	(memcmp@n+1)^0,w,c
  1380  01145E  A4D8               	btfss	status,2,c
  1381  011460  EF34  F08A         	goto	u801
  1382  011464  EF36  F08A         	goto	u800
  1383  011468                     u801:
  1384  011468  EF3C  F08A         	goto	l1532
  1385  01146C                     u800:
  1386  01146C  0E00               	movlw	0
  1387  01146E  6E02               	movwf	(?_memcmp+1)^0,c
  1388  011470  0E00               	movlw	0
  1389  011472  6E01               	movwf	?_memcmp^0,c
  1390  011474  EF51  F08A         	goto	l920
  1391  011478                     l1532:
  1392  011478  0060  F023  FFD9   	movff	memcmp@l,fsr2l
  1393  01147E  0060  F027  FFDA   	movff	memcmp@l+1,fsr2h
  1394  011484  50DF               	movf	indf2,w,c
  1395  011486  6E07               	movwf	??_memcmp^0,c
  1396  011488  0060  F02B  FFF6   	movff	memcmp@r,tblptrl
  1397  01148E  0060  F02F  FFF7   	movff	memcmp@r+1,tblptrh
  1398  011494                     	if	0	;tblptru may be non-zero
  1399  011494                     	endif
  1400  011494                     	if	0	;tblptru may be non-zero
  1401  011494                     	endif
  1402  011494  0008               	tblrd		*
  1403  011496  50F5               	movf	tablat,w,c
  1404  011498  5C07               	subwf	??_memcmp^0,w,c
  1405  01149A  6E01               	movwf	?_memcmp^0,c
  1406  01149C  6A02               	clrf	(?_memcmp+1)^0,c
  1407  01149E  A0D8               	btfss	status,0,c
  1408  0114A0  0602               	decf	(?_memcmp+1)^0,f,c
  1409  0114A2                     l920:
  1410  0114A2  0012               	return		;funcret
  1411  0114A4                     __end_of_memcmp:
  1412                           	opt callstack 0
  1413                           
  1414 ;; *************** function _SYSTEM_Initialize *****************
  1415 ;; Defined at:
  1416 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;		None
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;		None
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  1    wreg      void 
  1423 ;; Registers used:
  1424 ;;		wreg, status,2, cstack
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1434 ;;Total ram usage:        0 bytes
  1435 ;; Hardware stack levels used:    1
  1436 ;; Hardware stack levels required when called:    1
  1437 ;; This function calls:
  1438 ;;		_OSCILLATOR_Initialize
  1439 ;;		_PIN_MANAGER_Initialize
  1440 ;;		_PMD_Initialize
  1441 ;; This function is called by:
  1442 ;;		_main
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text2
  1447  0115F8                     __ptext2:
  1448                           	opt callstack 0
  1449  0115F8                     _SYSTEM_Initialize:
  1450                           	opt callstack 29
  1451  0115F8                     
  1452                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  1453  0115F8  ECDE  F08A         	call	_PMD_Initialize	;wreg free
  1454                           
  1455                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1456  0115FC  EC52  F08A         	call	_PIN_MANAGER_Initialize	;wreg free
  1457                           
  1458                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1459  011600  ECF0  F08A         	call	_OSCILLATOR_Initialize	;wreg free
  1460  011604  0012               	return		;funcret
  1461  011606                     __end_of_SYSTEM_Initialize:
  1462                           	opt callstack 0
  1463                           
  1464 ;; *************** function _PMD_Initialize *****************
  1465 ;; Defined at:
  1466 ;;		line 71 in file "mcc_generated_files/mcc.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;		None
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;		None
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      void 
  1473 ;; Registers used:
  1474 ;;		wreg, status,2
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1484 ;;Total ram usage:        0 bytes
  1485 ;; Hardware stack levels used:    1
  1486 ;; This function calls:
  1487 ;;		Nothing
  1488 ;; This function is called by:
  1489 ;;		_SYSTEM_Initialize
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493                           	psect	text3
  1494  0115BC                     __ptext3:
  1495                           	opt callstack 0
  1496  0115BC                     _PMD_Initialize:
  1497                           	opt callstack 29
  1498  0115BC                     
  1499                           ;mcc_generated_files/mcc.c: 74:     PMD0 = 0x00;
  1500  0115BC  0E00               	movlw	0
  1501  0115BE  0139               	movlb	57	; () banked
  1502  0115C0  6FC0               	movwf	192,b	;volatile
  1503                           
  1504                           ;mcc_generated_files/mcc.c: 76:     PMD1 = 0x00;
  1505  0115C2  0E00               	movlw	0
  1506  0115C4  6FC1               	movwf	193,b	;volatile
  1507                           
  1508                           ;mcc_generated_files/mcc.c: 78:     PMD2 = 0x00;
  1509  0115C6  0E00               	movlw	0
  1510  0115C8  6FC2               	movwf	194,b	;volatile
  1511                           
  1512                           ;mcc_generated_files/mcc.c: 80:     PMD3 = 0x00;
  1513  0115CA  0E00               	movlw	0
  1514  0115CC  6FC3               	movwf	195,b	;volatile
  1515                           
  1516                           ;mcc_generated_files/mcc.c: 82:     PMD4 = 0x00;
  1517  0115CE  0E00               	movlw	0
  1518  0115D0  6FC4               	movwf	196,b	;volatile
  1519                           
  1520                           ;mcc_generated_files/mcc.c: 84:     PMD5 = 0x00;
  1521  0115D2  0E00               	movlw	0
  1522  0115D4  6FC5               	movwf	197,b	;volatile
  1523                           
  1524                           ;mcc_generated_files/mcc.c: 86:     PMD6 = 0x00;
  1525  0115D6  0E00               	movlw	0
  1526  0115D8  6FC6               	movwf	198,b	;volatile
  1527                           
  1528                           ;mcc_generated_files/mcc.c: 88:     PMD7 = 0x00;
  1529  0115DA  0E00               	movlw	0
  1530  0115DC  6FC7               	movwf	199,b	;volatile
  1531  0115DE                     
  1532                           ; BSR set to: 57
  1533  0115DE  0012               	return		;funcret
  1534  0115E0                     __end_of_PMD_Initialize:
  1535                           	opt callstack 0
  1536                           
  1537 ;; *************** function _PIN_MANAGER_Initialize *****************
  1538 ;; Defined at:
  1539 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;		None
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;		None
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      void 
  1546 ;; Registers used:
  1547 ;;		wreg, status,2
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1557 ;;Total ram usage:        0 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; This function calls:
  1560 ;;		Nothing
  1561 ;; This function is called by:
  1562 ;;		_SYSTEM_Initialize
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           	psect	text4
  1567  0114A4                     __ptext4:
  1568                           	opt callstack 0
  1569  0114A4                     _PIN_MANAGER_Initialize:
  1570                           	opt callstack 29
  1571  0114A4                     
  1572                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  1573  0114A4  0E00               	movlw	0
  1574  0114A6  6EBE               	movwf	190,c	;volatile
  1575                           
  1576                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  1577  0114A8  0E00               	movlw	0
  1578  0114AA  6EBD               	movwf	189,c	;volatile
  1579                           
  1580                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  1581  0114AC  0E00               	movlw	0
  1582  0114AE  6EBA               	movwf	186,c	;volatile
  1583                           
  1584                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  1585  0114B0  0E00               	movlw	0
  1586  0114B2  6EBB               	movwf	187,c	;volatile
  1587                           
  1588                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  1589  0114B4  0E00               	movlw	0
  1590  0114B6  6EBC               	movwf	188,c	;volatile
  1591                           
  1592                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  1593  0114B8  0E07               	movlw	7
  1594  0114BA  6EC6               	movwf	198,c	;volatile
  1595  0114BC                     
  1596                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  1597  0114BC  68C2               	setf	194,c	;volatile
  1598  0114BE                     
  1599                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  1600  0114BE  68C3               	setf	195,c	;volatile
  1601  0114C0                     
  1602                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  1603  0114C0  68C4               	setf	196,c	;volatile
  1604  0114C2                     
  1605                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  1606  0114C2  68C5               	setf	197,c	;volatile
  1607  0114C4                     
  1608                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  1609  0114C4  013A               	movlb	58	; () banked
  1610  0114C6  6970               	setf	112,b	;volatile
  1611  0114C8                     
  1612                           ; BSR set to: 58
  1613                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
  1614  0114C8  6960               	setf	96,b	;volatile
  1615  0114CA                     
  1616                           ; BSR set to: 58
  1617                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xFF;
  1618  0114CA  6950               	setf	80,b	;volatile
  1619                           
  1620                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  1621  0114CC  0E07               	movlw	7
  1622  0114CE  6F80               	movwf	128,b	;volatile
  1623  0114D0                     
  1624                           ; BSR set to: 58
  1625                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  1626  0114D0  6940               	setf	64,b	;volatile
  1627                           
  1628                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  1629  0114D2  0E00               	movlw	0
  1630  0114D4  6F71               	movwf	113,b	;volatile
  1631                           
  1632                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  1633  0114D6  0E00               	movlw	0
  1634  0114D8  6F81               	movwf	129,b	;volatile
  1635                           
  1636                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  1637  0114DA  0E00               	movlw	0
  1638  0114DC  6F51               	movwf	81,b	;volatile
  1639                           
  1640                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  1641  0114DE  0E00               	movlw	0
  1642  0114E0  6F41               	movwf	65,b	;volatile
  1643                           
  1644                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  1645  0114E2  0E00               	movlw	0
  1646  0114E4  6F61               	movwf	97,b	;volatile
  1647                           
  1648                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  1649  0114E6  0E00               	movlw	0
  1650  0114E8  6F5A               	movwf	90,b	;volatile
  1651                           
  1652                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  1653  0114EA  0E00               	movlw	0
  1654  0114EC  6F5B               	movwf	91,b	;volatile
  1655                           
  1656                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  1657  0114EE  0E00               	movlw	0
  1658  0114F0  6F6A               	movwf	106,b	;volatile
  1659                           
  1660                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  1661  0114F2  0E00               	movlw	0
  1662  0114F4  6F6B               	movwf	107,b	;volatile
  1663                           
  1664                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  1665  0114F6  0E00               	movlw	0
  1666  0114F8  6F7A               	movwf	122,b	;volatile
  1667                           
  1668                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  1669  0114FA  0E00               	movlw	0
  1670  0114FC  6F7B               	movwf	123,b	;volatile
  1671                           
  1672                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  1673  0114FE  0E00               	movlw	0
  1674  011500  6F82               	movwf	130,b	;volatile
  1675                           
  1676                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  1677  011502  0E00               	movlw	0
  1678  011504  6F42               	movwf	66,b	;volatile
  1679                           
  1680                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
  1681  011506  0E00               	movlw	0
  1682  011508  6F52               	movwf	82,b	;volatile
  1683                           
  1684                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
  1685  01150A  0E00               	movlw	0
  1686  01150C  6F62               	movwf	98,b	;volatile
  1687                           
  1688                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  1689  01150E  0E00               	movlw	0
  1690  011510  6F72               	movwf	114,b	;volatile
  1691  011512                     
  1692                           ; BSR set to: 58
  1693                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  1694  011512  6943               	setf	67,b	;volatile
  1695  011514                     
  1696                           ; BSR set to: 58
  1697                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  1698  011514  6953               	setf	83,b	;volatile
  1699  011516                     
  1700                           ; BSR set to: 58
  1701                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  1702  011516  6963               	setf	99,b	;volatile
  1703  011518                     
  1704                           ; BSR set to: 58
  1705                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  1706  011518  6973               	setf	115,b	;volatile
  1707                           
  1708                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  1709  01151A  0E07               	movlw	7
  1710  01151C  6F83               	movwf	131,b	;volatile
  1711  01151E                     
  1712                           ; BSR set to: 58
  1713                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
  1714  01151E  6944               	setf	68,b	;volatile
  1715  011520                     
  1716                           ; BSR set to: 58
  1717                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
  1718  011520  6954               	setf	84,b	;volatile
  1719  011522                     
  1720                           ; BSR set to: 58
  1721                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
  1722  011522  6964               	setf	100,b	;volatile
  1723  011524                     
  1724                           ; BSR set to: 58
  1725                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
  1726  011524  6974               	setf	116,b	;volatile
  1727                           
  1728                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
  1729  011526  0E0F               	movlw	15
  1730  011528  6F84               	movwf	132,b	;volatile
  1731  01152A                     
  1732                           ; BSR set to: 58
  1733  01152A  0012               	return		;funcret
  1734  01152C                     __end_of_PIN_MANAGER_Initialize:
  1735                           	opt callstack 0
  1736                           
  1737 ;; *************** function _OSCILLATOR_Initialize *****************
  1738 ;; Defined at:
  1739 ;;		line 57 in file "mcc_generated_files/mcc.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;		None
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;		None
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  1    wreg      void 
  1746 ;; Registers used:
  1747 ;;		wreg, status,2
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1757 ;;Total ram usage:        0 bytes
  1758 ;; Hardware stack levels used:    1
  1759 ;; This function calls:
  1760 ;;		Nothing
  1761 ;; This function is called by:
  1762 ;;		_SYSTEM_Initialize
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           	psect	text5
  1767  0115E0                     __ptext5:
  1768                           	opt callstack 0
  1769  0115E0                     _OSCILLATOR_Initialize:
  1770                           	opt callstack 29
  1771  0115E0                     
  1772                           ;mcc_generated_files/mcc.c: 60:     OSCCON1 = 0x60;
  1773  0115E0  0E60               	movlw	96
  1774  0115E2  0139               	movlb	57	; () banked
  1775  0115E4  6FD9               	movwf	217,b	;volatile
  1776                           
  1777                           ;mcc_generated_files/mcc.c: 62:     OSCCON3 = 0x00;
  1778  0115E6  0E00               	movlw	0
  1779  0115E8  6FDB               	movwf	219,b	;volatile
  1780                           
  1781                           ;mcc_generated_files/mcc.c: 64:     OSCEN = 0x00;
  1782  0115EA  0E00               	movlw	0
  1783  0115EC  6FDD               	movwf	221,b	;volatile
  1784                           
  1785                           ;mcc_generated_files/mcc.c: 66:     OSCFRQ = 0x08;
  1786  0115EE  0E08               	movlw	8
  1787  0115F0  6FDF               	movwf	223,b	;volatile
  1788                           
  1789                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  1790  0115F2  0E00               	movlw	0
  1791  0115F4  6FDE               	movwf	222,b	;volatile
  1792  0115F6                     
  1793                           ; BSR set to: 57
  1794  0115F6  0012               	return		;funcret
  1795  0115F8                     __end_of_OSCILLATOR_Initialize:
  1796                           	opt callstack 0
  1797                           
  1798 ;; *************** function _SHA256_Initialize *****************
  1799 ;; Defined at:
  1800 ;;		line 74 in file "sha256.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;  context         2    0[COMRAM] PTR struct .
  1803 ;;		 -> contexts(103), 
  1804 ;;  length          1    2[COMRAM] enum E34
  1805 ;;  workingBuffe    2    3[COMRAM] PTR unsigned long 
  1806 ;;		 -> workingBuffer(320), 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;		None
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  1    wreg      void 
  1811 ;; Registers used:
  1812 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1818 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1821 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1822 ;;Total ram usage:        5 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; This function calls:
  1825 ;;		Nothing
  1826 ;; This function is called by:
  1827 ;;		_main
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text6
  1832  011000                     __ptext6:
  1833                           	opt callstack 0
  1834  011000                     _SHA256_Initialize:
  1835                           	opt callstack 30
  1836  011000                     
  1837                           ;sha256.c: 74: void SHA256_Initialize (SHA256_CONTEXT * context, SHA256_BIT_LENGTH lengt
      +                          h, uint32_t * workingBuffer);sha256.c: 75: {;sha256.c: 76:     if (length == SHA2_256)
  1838  011000  0403               	decf	SHA256_Initialize@length^0,w,c
  1839  011002  A4D8               	btfss	status,2,c
  1840  011004  EF06  F088         	goto	u661
  1841  011008  EF08  F088         	goto	u660
  1842  01100C                     u661:
  1843  01100C  EF7A  F088         	goto	l1416
  1844  011010                     u660:
  1845  011010                     
  1846                           ;sha256.c: 77:     {;sha256.c: 79:         context->h[0] = 0x6a09e667;
  1847  011010  0060  F007  FFD9   	movff	SHA256_Initialize@context,fsr2l
  1848  011016  0060  F00B  FFDA   	movff	SHA256_Initialize@context+1,fsr2h
  1849  01101C  0E67               	movlw	103
  1850  01101E  6EDE               	movwf	postinc2,c
  1851  011020  0EE6               	movlw	230
  1852  011022  6EDE               	movwf	postinc2,c
  1853  011024  0E09               	movlw	9
  1854  011026  6EDE               	movwf	postinc2,c
  1855  011028  0E6A               	movlw	106
  1856  01102A  6EDD               	movwf	postdec2,c
  1857  01102C                     
  1858                           ;sha256.c: 80:         context->h[1] = 0xbb67ae85;
  1859  01102C  EE20 F004          	lfsr	2,4
  1860  011030  5001               	movf	SHA256_Initialize@context^0,w,c
  1861  011032  26D9               	addwf	fsr2l,f,c
  1862  011034  5002               	movf	(SHA256_Initialize@context+1)^0,w,c
  1863  011036  22DA               	addwfc	fsr2h,f,c
  1864  011038  0E85               	movlw	133
  1865  01103A  6EDE               	movwf	postinc2,c
  1866  01103C  0EAE               	movlw	174
  1867  01103E  6EDE               	movwf	postinc2,c
  1868  011040  0E67               	movlw	103
  1869  011042  6EDE               	movwf	postinc2,c
  1870  011044  0EBB               	movlw	187
  1871  011046  6EDD               	movwf	postdec2,c
  1872  011048                     
  1873                           ;sha256.c: 81:         context->h[2] = 0x3c6ef372;
  1874  011048  EE20 F008          	lfsr	2,8
  1875  01104C  5001               	movf	SHA256_Initialize@context^0,w,c
  1876  01104E  26D9               	addwf	fsr2l,f,c
  1877  011050  5002               	movf	(SHA256_Initialize@context+1)^0,w,c
  1878  011052  22DA               	addwfc	fsr2h,f,c
  1879  011054  0E72               	movlw	114
  1880  011056  6EDE               	movwf	postinc2,c
  1881  011058  0EF3               	movlw	243
  1882  01105A  6EDE               	movwf	postinc2,c
  1883  01105C  0E6E               	movlw	110
  1884  01105E  6EDE               	movwf	postinc2,c
  1885  011060  0E3C               	movlw	60
  1886  011062  6EDD               	movwf	postdec2,c
  1887  011064                     
  1888                           ;sha256.c: 82:         context->h[3] = 0xa54ff53a;
  1889  011064  EE20 F00C          	lfsr	2,12
  1890  011068  5001               	movf	SHA256_Initialize@context^0,w,c
  1891  01106A  26D9               	addwf	fsr2l,f,c
  1892  01106C  5002               	movf	(SHA256_Initialize@context+1)^0,w,c
  1893  01106E  22DA               	addwfc	fsr2h,f,c
  1894  011070  0E3A               	movlw	58
  1895  011072  6EDE               	movwf	postinc2,c
  1896  011074  0EF5               	movlw	245
  1897  011076  6EDE               	movwf	postinc2,c
  1898  011078  0E4F               	movlw	79
  1899  01107A  6EDE               	movwf	postinc2,c
  1900  01107C  0EA5               	movlw	165
  1901  01107E  6EDD               	movwf	postdec2,c
  1902  011080                     
  1903                           ;sha256.c: 83:         context->h[4] = 0x510e527f;
  1904  011080  EE20 F010          	lfsr	2,16
  1905  011084  5001               	movf	SHA256_Initialize@context^0,w,c
  1906  011086  26D9               	addwf	fsr2l,f,c
  1907  011088  5002               	movf	(SHA256_Initialize@context+1)^0,w,c
  1908  01108A  22DA               	addwfc	fsr2h,f,c
  1909  01108C  0E7F               	movlw	127
  1910  01108E  6EDE               	movwf	postinc2,c
  1911  011090  0E52               	movlw	82
  1912  011092  6EDE               	movwf	postinc2,c
  1913  011094  0E0E               	movlw	14
  1914  011096  6EDE               	movwf	postinc2,c
  1915  011098  0E51               	movlw	81
  1916  01109A  6EDD               	movwf	postdec2,c
  1917  01109C                     
  1918                           ;sha256.c: 84:         context->h[5] = 0x9b05688c;
  1919  01109C  EE20 F014          	lfsr	2,20
  1920  0110A0  5001               	movf	SHA256_Initialize@context^0,w,c
  1921  0110A2  26D9               	addwf	fsr2l,f,c
  1922  0110A4  5002               	movf	(SHA256_Initialize@context+1)^0,w,c
  1923  0110A6  22DA               	addwfc	fsr2h,f,c
  1924  0110A8  0E8C               	movlw	140
  1925  0110AA  6EDE               	movwf	postinc2,c
  1926  0110AC  0E68               	movlw	104
  1927  0110AE  6EDE               	movwf	postinc2,c
  1928  0110B0  0E05               	movlw	5
  1929  0110B2  6EDE               	movwf	postinc2,c
  1930  0110B4  0E9B               	movlw	155
  1931  0110B6  6EDD               	movwf	postdec2,c
  1932  0110B8                     
  1933                           ;sha256.c: 85:         context->h[6] = 0x1f83d9ab;
  1934  0110B8  EE20 F018          	lfsr	2,24
  1935  0110BC  5001               	movf	SHA256_Initialize@context^0,w,c
  1936  0110BE  26D9               	addwf	fsr2l,f,c
  1937  0110C0  5002               	movf	(SHA256_Initialize@context+1)^0,w,c
  1938  0110C2  22DA               	addwfc	fsr2h,f,c
  1939  0110C4  0EAB               	movlw	171
  1940  0110C6  6EDE               	movwf	postinc2,c
  1941  0110C8  0ED9               	movlw	217
  1942  0110CA  6EDE               	movwf	postinc2,c
  1943  0110CC  0E83               	movlw	131
  1944  0110CE  6EDE               	movwf	postinc2,c
  1945  0110D0  0E1F               	movlw	31
  1946  0110D2  6EDD               	movwf	postdec2,c
  1947  0110D4                     
  1948                           ;sha256.c: 86:         context->h[7] = 0x5be0cd19;
  1949  0110D4  EE20 F01C          	lfsr	2,28
  1950  0110D8  5001               	movf	SHA256_Initialize@context^0,w,c
  1951  0110DA  26D9               	addwf	fsr2l,f,c
  1952  0110DC  5002               	movf	(SHA256_Initialize@context+1)^0,w,c
  1953  0110DE  22DA               	addwfc	fsr2h,f,c
  1954  0110E0  0E19               	movlw	25
  1955  0110E2  6EDE               	movwf	postinc2,c
  1956  0110E4  0ECD               	movlw	205
  1957  0110E6  6EDE               	movwf	postinc2,c
  1958  0110E8  0EE0               	movlw	224
  1959  0110EA  6EDE               	movwf	postinc2,c
  1960  0110EC  0E5B               	movlw	91
  1961  0110EE  6EDD               	movwf	postdec2,c
  1962                           
  1963                           ;sha256.c: 87:     }
  1964  0110F0  EFEA  F088         	goto	l1432
  1965  0110F4                     l1416:
  1966                           
  1967                           ;sha256.c: 89:     {;sha256.c: 91:         context->h[0] = 0xc1059ed8;
  1968  0110F4  0060  F007  FFD9   	movff	SHA256_Initialize@context,fsr2l
  1969  0110FA  0060  F00B  FFDA   	movff	SHA256_Initialize@context+1,fsr2h
  1970  011100  0ED8               	movlw	216
  1971  011102  6EDE               	movwf	postinc2,c
  1972  011104  0E9E               	movlw	158
  1973  011106  6EDE               	movwf	postinc2,c
  1974  011108  0E05               	movlw	5
  1975  01110A  6EDE               	movwf	postinc2,c
  1976  01110C  0EC1               	movlw	193
  1977  01110E  6EDD               	movwf	postdec2,c
  1978  011110                     
  1979                           ;sha256.c: 92:         context->h[1] = 0x367cd507;
  1980  011110  EE20 F004          	lfsr	2,4
  1981  011114  5001               	movf	SHA256_Initialize@context^0,w,c
  1982  011116  26D9               	addwf	fsr2l,f,c
  1983  011118  5002               	movf	(SHA256_Initialize@context+1)^0,w,c
  1984  01111A  22DA               	addwfc	fsr2h,f,c
  1985  01111C  0E07               	movlw	7
  1986  01111E  6EDE               	movwf	postinc2,c
  1987  011120  0ED5               	movlw	213
  1988  011122  6EDE               	movwf	postinc2,c
  1989  011124  0E7C               	movlw	124
  1990  011126  6EDE               	movwf	postinc2,c
  1991  011128  0E36               	movlw	54
  1992  01112A  6EDD               	movwf	postdec2,c
  1993  01112C                     
  1994                           ;sha256.c: 93:         context->h[2] = 0x3070dd17;
  1995  01112C  EE20 F008          	lfsr	2,8
  1996  011130  5001               	movf	SHA256_Initialize@context^0,w,c
  1997  011132  26D9               	addwf	fsr2l,f,c
  1998  011134  5002               	movf	(SHA256_Initialize@context+1)^0,w,c
  1999  011136  22DA               	addwfc	fsr2h,f,c
  2000  011138  0E17               	movlw	23
  2001  01113A  6EDE               	movwf	postinc2,c
  2002  01113C  0EDD               	movlw	221
  2003  01113E  6EDE               	movwf	postinc2,c
  2004  011140  0E70               	movlw	112
  2005  011142  6EDE               	movwf	postinc2,c
  2006  011144  0E30               	movlw	48
  2007  011146  6EDD               	movwf	postdec2,c
  2008  011148                     
  2009                           ;sha256.c: 94:         context->h[3] = 0xf70e5939;
  2010  011148  EE20 F00C          	lfsr	2,12
  2011  01114C  5001               	movf	SHA256_Initialize@context^0,w,c
  2012  01114E  26D9               	addwf	fsr2l,f,c
  2013  011150  5002               	movf	(SHA256_Initialize@context+1)^0,w,c
  2014  011152  22DA               	addwfc	fsr2h,f,c
  2015  011154  0E39               	movlw	57
  2016  011156  6EDE               	movwf	postinc2,c
  2017  011158  0E59               	movlw	89
  2018  01115A  6EDE               	movwf	postinc2,c
  2019  01115C  0E0E               	movlw	14
  2020  01115E  6EDE               	movwf	postinc2,c
  2021  011160  0EF7               	movlw	247
  2022  011162  6EDD               	movwf	postdec2,c
  2023  011164                     
  2024                           ;sha256.c: 95:         context->h[4] = 0xffc00b31;
  2025  011164  EE20 F010          	lfsr	2,16
  2026  011168  5001               	movf	SHA256_Initialize@context^0,w,c
  2027  01116A  26D9               	addwf	fsr2l,f,c
  2028  01116C  5002               	movf	(SHA256_Initialize@context+1)^0,w,c
  2029  01116E  22DA               	addwfc	fsr2h,f,c
  2030  011170  0E31               	movlw	49
  2031  011172  6EDE               	movwf	postinc2,c
  2032  011174  0E0B               	movlw	11
  2033  011176  6EDE               	movwf	postinc2,c
  2034  011178  0EC0               	movlw	192
  2035  01117A  6EDE               	movwf	postinc2,c
  2036  01117C  0EFF               	movlw	255
  2037  01117E  6EDD               	movwf	postdec2,c
  2038  011180                     
  2039                           ;sha256.c: 96:         context->h[5] = 0x68581511;
  2040  011180  EE20 F014          	lfsr	2,20
  2041  011184  5001               	movf	SHA256_Initialize@context^0,w,c
  2042  011186  26D9               	addwf	fsr2l,f,c
  2043  011188  5002               	movf	(SHA256_Initialize@context+1)^0,w,c
  2044  01118A  22DA               	addwfc	fsr2h,f,c
  2045  01118C  0E11               	movlw	17
  2046  01118E  6EDE               	movwf	postinc2,c
  2047  011190  0E15               	movlw	21
  2048  011192  6EDE               	movwf	postinc2,c
  2049  011194  0E58               	movlw	88
  2050  011196  6EDE               	movwf	postinc2,c
  2051  011198  0E68               	movlw	104
  2052  01119A  6EDD               	movwf	postdec2,c
  2053  01119C                     
  2054                           ;sha256.c: 97:         context->h[6] = 0x64f98fa7;
  2055  01119C  EE20 F018          	lfsr	2,24
  2056  0111A0  5001               	movf	SHA256_Initialize@context^0,w,c
  2057  0111A2  26D9               	addwf	fsr2l,f,c
  2058  0111A4  5002               	movf	(SHA256_Initialize@context+1)^0,w,c
  2059  0111A6  22DA               	addwfc	fsr2h,f,c
  2060  0111A8  0EA7               	movlw	167
  2061  0111AA  6EDE               	movwf	postinc2,c
  2062  0111AC  0E8F               	movlw	143
  2063  0111AE  6EDE               	movwf	postinc2,c
  2064  0111B0  0EF9               	movlw	249
  2065  0111B2  6EDE               	movwf	postinc2,c
  2066  0111B4  0E64               	movlw	100
  2067  0111B6  6EDD               	movwf	postdec2,c
  2068  0111B8                     
  2069                           ;sha256.c: 98:         context->h[7] = 0xbefa4fa4;
  2070  0111B8  EE20 F01C          	lfsr	2,28
  2071  0111BC  5001               	movf	SHA256_Initialize@context^0,w,c
  2072  0111BE  26D9               	addwf	fsr2l,f,c
  2073  0111C0  5002               	movf	(SHA256_Initialize@context+1)^0,w,c
  2074  0111C2  22DA               	addwfc	fsr2h,f,c
  2075  0111C4  0EA4               	movlw	164
  2076  0111C6  6EDE               	movwf	postinc2,c
  2077  0111C8  0E4F               	movlw	79
  2078  0111CA  6EDE               	movwf	postinc2,c
  2079  0111CC  0EFA               	movlw	250
  2080  0111CE  6EDE               	movwf	postinc2,c
  2081  0111D0  0EBE               	movlw	190
  2082  0111D2  6EDD               	movwf	postdec2,c
  2083  0111D4                     l1432:
  2084                           
  2085                           ;sha256.c: 101:     context->length = length;
  2086  0111D4  EE20 F066          	lfsr	2,102
  2087  0111D8  5001               	movf	SHA256_Initialize@context^0,w,c
  2088  0111DA  26D9               	addwf	fsr2l,f,c
  2089  0111DC  5002               	movf	(SHA256_Initialize@context+1)^0,w,c
  2090  0111DE  22DA               	addwfc	fsr2h,f,c
  2091  0111E0  0060  F00F  FFDF   	movff	SHA256_Initialize@length,indf2
  2092  0111E6                     
  2093                           ;sha256.c: 102:     context->totalBytes = 0;
  2094  0111E6  EE20 F020          	lfsr	2,32
  2095  0111EA  5001               	movf	SHA256_Initialize@context^0,w,c
  2096  0111EC  26D9               	addwf	fsr2l,f,c
  2097  0111EE  5002               	movf	(SHA256_Initialize@context+1)^0,w,c
  2098  0111F0  22DA               	addwfc	fsr2h,f,c
  2099  0111F2  6ADE               	clrf	postinc2,c
  2100  0111F4  6ADE               	clrf	postinc2,c
  2101  0111F6  6ADE               	clrf	postinc2,c
  2102  0111F8  6ADD               	clrf	postdec2,c
  2103  0111FA                     
  2104                           ;sha256.c: 103:     context->workingBuffer = workingBuffer;
  2105  0111FA  EE20 F064          	lfsr	2,100
  2106  0111FE  5001               	movf	SHA256_Initialize@context^0,w,c
  2107  011200  26D9               	addwf	fsr2l,f,c
  2108  011202  5002               	movf	(SHA256_Initialize@context+1)^0,w,c
  2109  011204  22DA               	addwfc	fsr2h,f,c
  2110  011206  0060  F013  FFDE   	movff	SHA256_Initialize@workingBuffer,postinc2
  2111  01120C  0060  F017  FFDD   	movff	SHA256_Initialize@workingBuffer+1,postdec2
  2112  011212  0012               	return		;funcret
  2113  011214                     __end_of_SHA256_Initialize:
  2114                           	opt callstack 0
  2115                           
  2116 ;; *************** function _SHA256_DataAdd *****************
  2117 ;; Defined at:
  2118 ;;		line 145 in file "sha256.c"
  2119 ;; Parameters:    Size  Location     Type
  2120 ;;  context         2   45[BANK0 ] PTR struct .
  2121 ;;		 -> contexts(103), 
  2122 ;;  data            2   47[BANK0 ] PTR unsigned char 
  2123 ;;		 -> message1(2), message0(1), 
  2124 ;;  len             4   49[BANK0 ] unsigned long 
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  blockPtr        2   57[BANK0 ] PTR unsigned char 
  2127 ;;		 -> contexts.partialBlock(64), contexts(103), 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      void 
  2130 ;; Registers used:
  2131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2137 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2138 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2139 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2140 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2141 ;;Total ram usage:       14 bytes
  2142 ;; Hardware stack levels used:    1
  2143 ;; Hardware stack levels required when called:    1
  2144 ;; This function calls:
  2145 ;;		_SHA256_HashBlock
  2146 ;; This function is called by:
  2147 ;;		_main
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           	psect	text7
  2152  011214                     __ptext7:
  2153                           	opt callstack 0
  2154  011214                     _SHA256_DataAdd:
  2155                           	opt callstack 29
  2156  011214                     
  2157                           ;sha256.c: 145: void SHA256_DataAdd (SHA256_CONTEXT * context, uint8_t * data, uint32_t 
      +                          len);sha256.c: 146: {;sha256.c: 147:     uint8_t * blockPtr;;sha256.c: 149:     blockPtr
      +                           = context->partialBlock + (context->totalBytes & 0x3f);
  2158  011214  0100               	movlb	0	; () banked
  2159  011216  EE20 F020          	lfsr	2,32
  2160  01121A  51CD               	movf	SHA256_DataAdd@context& (0+255),w,b
  2161  01121C  26D9               	addwf	fsr2l,f,c
  2162  01121E  51CE               	movf	(SHA256_DataAdd@context+1)& (0+255),w,b
  2163  011220  22DA               	addwfc	fsr2h,f,c
  2164  011222  006F FF78  F0D5    	movff	postinc2,??_SHA256_DataAdd
  2165  011228  006F FF74  F0D6    	movff	postdec2,??_SHA256_DataAdd+1
  2166  01122E  0E3F               	movlw	63
  2167  011230  17D5               	andwf	??_SHA256_DataAdd& (0+255),f,b
  2168  011232  0E00               	movlw	0
  2169  011234  17D6               	andwf	(??_SHA256_DataAdd+1)& (0+255),f,b
  2170  011236  0060  F334  F0D7   	movff	SHA256_DataAdd@context,??_SHA256_DataAdd+2
  2171  01123C  0060  F338  F0D8   	movff	SHA256_DataAdd@context+1,??_SHA256_DataAdd+3
  2172  011242  51D5               	movf	??_SHA256_DataAdd& (0+255),w,b
  2173  011244  27D7               	addwf	(??_SHA256_DataAdd+2)& (0+255),f,b
  2174  011246  51D6               	movf	(??_SHA256_DataAdd+1)& (0+255),w,b
  2175  011248  23D8               	addwfc	(??_SHA256_DataAdd+3)& (0+255),f,b
  2176  01124A  0E24               	movlw	36
  2177  01124C  25D7               	addwf	(??_SHA256_DataAdd+2)& (0+255),w,b
  2178  01124E  6FD9               	movwf	SHA256_DataAdd@blockPtr& (0+255),b
  2179  011250  0E00               	movlw	0
  2180  011252  21D8               	addwfc	(??_SHA256_DataAdd+3)& (0+255),w,b
  2181  011254  6FDA               	movwf	(SHA256_DataAdd@blockPtr+1)& (0+255),b
  2182                           
  2183                           ;sha256.c: 152:     context->totalBytes += len;
  2184  011256  EE20 F020          	lfsr	2,32
  2185  01125A  51CD               	movf	SHA256_DataAdd@context& (0+255),w,b
  2186  01125C  26D9               	addwf	fsr2l,f,c
  2187  01125E  51CE               	movf	(SHA256_DataAdd@context+1)& (0+255),w,b
  2188  011260  22DA               	addwfc	fsr2h,f,c
  2189  011262  51D1               	movf	SHA256_DataAdd@len& (0+255),w,b
  2190  011264  26DE               	addwf	postinc2,f,c
  2191  011266  51D2               	movf	(SHA256_DataAdd@len+1)& (0+255),w,b
  2192  011268  22DE               	addwfc	postinc2,f,c
  2193  01126A  51D3               	movf	(SHA256_DataAdd@len+2)& (0+255),w,b
  2194  01126C  22DE               	addwfc	postinc2,f,c
  2195  01126E  51D4               	movf	(SHA256_DataAdd@len+3)& (0+255),w,b
  2196  011270  22DE               	addwfc	postinc2,f,c
  2197                           
  2198                           ;sha256.c: 155:     while(len != 0u)
  2199  011272  EF75  F089         	goto	l1454
  2200  011276                     l1440:
  2201                           
  2202                           ; BSR set to: 0
  2203                           ;sha256.c: 156:     {;sha256.c: 157:         *blockPtr++ = *data++;
  2204  011276  0060  F33F  FFF6   	movff	SHA256_DataAdd@data,tblptrl
  2205  01127C  0060  F343  FFF7   	movff	SHA256_DataAdd@data+1,tblptrh
  2206  011282                     	if	0	;tblptru may be non-zero
  2207  011282                     	endif
  2208  011282                     	if	0	;tblptru may be non-zero
  2209  011282                     	endif
  2210  011282  0060  F367  FFD9   	movff	SHA256_DataAdd@blockPtr,fsr2l
  2211  011288  0060  F36B  FFDA   	movff	SHA256_DataAdd@blockPtr+1,fsr2h
  2212  01128E  0008               	tblrd		*
  2213  011290  006F FFD7 FFDF     	movff	tablat,indf2
  2214  011296                     
  2215                           ; BSR set to: 0
  2216  011296  4BCF               	infsnz	SHA256_DataAdd@data& (0+255),f,b
  2217  011298  2BD0               	incf	(SHA256_DataAdd@data+1)& (0+255),f,b
  2218  01129A                     
  2219                           ; BSR set to: 0
  2220  01129A  4BD9               	infsnz	SHA256_DataAdd@blockPtr& (0+255),f,b
  2221  01129C  2BDA               	incf	(SHA256_DataAdd@blockPtr+1)& (0+255),f,b
  2222  01129E                     
  2223                           ; BSR set to: 0
  2224                           ;sha256.c: 160:         if(blockPtr == context->partialBlock + 64)
  2225  01129E  0E64               	movlw	100
  2226  0112A0  25CD               	addwf	SHA256_DataAdd@context& (0+255),w,b
  2227  0112A2  6FD5               	movwf	??_SHA256_DataAdd& (0+255),b
  2228  0112A4  0E00               	movlw	0
  2229  0112A6  21CE               	addwfc	(SHA256_DataAdd@context+1)& (0+255),w,b
  2230  0112A8  6FD6               	movwf	(??_SHA256_DataAdd+1)& (0+255),b
  2231  0112AA  51D5               	movf	??_SHA256_DataAdd& (0+255),w,b
  2232  0112AC  19D9               	xorwf	SHA256_DataAdd@blockPtr& (0+255),w,b
  2233  0112AE  E107               	bnz	u671
  2234  0112B0  51D6               	movf	(??_SHA256_DataAdd+1)& (0+255),w,b
  2235  0112B2  19DA               	xorwf	(SHA256_DataAdd@blockPtr+1)& (0+255),w,b
  2236  0112B4  A4D8               	btfss	status,2,c
  2237  0112B6  EF5F  F089         	goto	u671
  2238  0112BA  EF61  F089         	goto	u670
  2239  0112BE                     u671:
  2240  0112BE  EF70  F089         	goto	l1452
  2241  0112C2                     u670:
  2242  0112C2                     
  2243                           ; BSR set to: 0
  2244                           ;sha256.c: 161:         {;sha256.c: 162:             SHA256_HashBlock (context);
  2245  0112C2  0060  F334  F001   	movff	SHA256_DataAdd@context,SHA256_HashBlock@context
  2246  0112C8  0060  F338  F002   	movff	SHA256_DataAdd@context+1,SHA256_HashBlock@context+1
  2247  0112CE  EC00  F080         	call	_SHA256_HashBlock	;wreg free
  2248  0112D2                     
  2249                           ;sha256.c: 163:             blockPtr = context->partialBlock;
  2250  0112D2  0E24               	movlw	36
  2251  0112D4  0100               	movlb	0	; () banked
  2252  0112D6  25CD               	addwf	SHA256_DataAdd@context& (0+255),w,b
  2253  0112D8  6FD9               	movwf	SHA256_DataAdd@blockPtr& (0+255),b
  2254  0112DA  0E00               	movlw	0
  2255  0112DC  21CE               	addwfc	(SHA256_DataAdd@context+1)& (0+255),w,b
  2256  0112DE  6FDA               	movwf	(SHA256_DataAdd@blockPtr+1)& (0+255),b
  2257  0112E0                     l1452:
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;sha256.c: 166:         len--;
  2261  0112E0  07D1               	decf	SHA256_DataAdd@len& (0+255),f,b
  2262  0112E2  0E00               	movlw	0
  2263  0112E4  5BD2               	subwfb	(SHA256_DataAdd@len+1)& (0+255),f,b
  2264  0112E6  5BD3               	subwfb	(SHA256_DataAdd@len+2)& (0+255),f,b
  2265  0112E8  5BD4               	subwfb	(SHA256_DataAdd@len+3)& (0+255),f,b
  2266  0112EA                     l1454:
  2267                           
  2268                           ; BSR set to: 0
  2269                           ;sha256.c: 155:     while(len != 0u)
  2270  0112EA  51D1               	movf	SHA256_DataAdd@len& (0+255),w,b
  2271  0112EC  11D2               	iorwf	(SHA256_DataAdd@len+1)& (0+255),w,b
  2272  0112EE  11D3               	iorwf	(SHA256_DataAdd@len+2)& (0+255),w,b
  2273  0112F0  11D4               	iorwf	(SHA256_DataAdd@len+3)& (0+255),w,b
  2274  0112F2  A4D8               	btfss	status,2,c
  2275  0112F4  EF7E  F089         	goto	u681
  2276  0112F8  EF80  F089         	goto	u680
  2277  0112FC                     u681:
  2278  0112FC  EF3B  F089         	goto	l1440
  2279  011300                     u680:
  2280  011300                     
  2281                           ; BSR set to: 0
  2282  011300  0012               	return		;funcret
  2283  011302                     __end_of_SHA256_DataAdd:
  2284                           	opt callstack 0
  2285                           
  2286 ;; *************** function _SHA256_Calculate *****************
  2287 ;; Defined at:
  2288 ;;		line 286 in file "sha256.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;  context         2   45[BANK0 ] PTR struct .
  2291 ;;		 -> contexts(103), 
  2292 ;;  result          2   47[BANK0 ] PTR unsigned char 
  2293 ;;		 -> digest(64), 
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;  blockPtr        2   56[BANK0 ] PTR unsigned char 
  2296 ;;		 -> contexts.partialBlock(64), contexts(103), 
  2297 ;;  endPtr          2   53[BANK0 ] PTR unsigned char 
  2298 ;;		 -> contexts.partialBlock(64), contexts(103), 
  2299 ;;  i               1   55[BANK0 ] unsigned char 
  2300 ;; Return value:  Size  Location     Type
  2301 ;;                  1    wreg      void 
  2302 ;; Registers used:
  2303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2309 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2310 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2311 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2312 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2313 ;;Total ram usage:       13 bytes
  2314 ;; Hardware stack levels used:    1
  2315 ;; Hardware stack levels required when called:    1
  2316 ;; This function calls:
  2317 ;;		_SHA256_HashBlock
  2318 ;;		_SHA256_OutputData
  2319 ;; This function is called by:
  2320 ;;		_main
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           	psect	text8
  2325  010CBE                     __ptext8:
  2326                           	opt callstack 0
  2327  010CBE                     _SHA256_Calculate:
  2328                           	opt callstack 29
  2329  010CBE                     
  2330                           ;sha256.c: 286: void SHA256_Calculate (SHA256_CONTEXT * context, uint8_t * result);sha25
      +                          6.c: 287: {;sha256.c: 288:     uint8_t * blockPtr = context->partialBlock + (context->to
      +                          talBytes & 0x3F);
  2331  010CBE  0100               	movlb	0	; () banked
  2332  010CC0  EE20 F020          	lfsr	2,32
  2333  010CC4  51CD               	movf	SHA256_Calculate@context& (0+255),w,b
  2334  010CC6  26D9               	addwf	fsr2l,f,c
  2335  010CC8  51CE               	movf	(SHA256_Calculate@context+1)& (0+255),w,b
  2336  010CCA  22DA               	addwfc	fsr2h,f,c
  2337  010CCC  006F FF78  F0D1    	movff	postinc2,??_SHA256_Calculate
  2338  010CD2  006F FF74  F0D2    	movff	postdec2,??_SHA256_Calculate+1
  2339  010CD8  0E3F               	movlw	63
  2340  010CDA  17D1               	andwf	??_SHA256_Calculate& (0+255),f,b
  2341  010CDC  0E00               	movlw	0
  2342  010CDE  17D2               	andwf	(??_SHA256_Calculate+1)& (0+255),f,b
  2343  010CE0  0060  F334  F0D3   	movff	SHA256_Calculate@context,??_SHA256_Calculate+2
  2344  010CE6  0060  F338  F0D4   	movff	SHA256_Calculate@context+1,??_SHA256_Calculate+3
  2345  010CEC  51D1               	movf	??_SHA256_Calculate& (0+255),w,b
  2346  010CEE  27D3               	addwf	(??_SHA256_Calculate+2)& (0+255),f,b
  2347  010CF0  51D2               	movf	(??_SHA256_Calculate+1)& (0+255),w,b
  2348  010CF2  23D4               	addwfc	(??_SHA256_Calculate+3)& (0+255),f,b
  2349  010CF4  0E24               	movlw	36
  2350  010CF6  25D3               	addwf	(??_SHA256_Calculate+2)& (0+255),w,b
  2351  010CF8  6FD8               	movwf	SHA256_Calculate@blockPtr& (0+255),b
  2352  010CFA  0E00               	movlw	0
  2353  010CFC  21D4               	addwfc	(??_SHA256_Calculate+3)& (0+255),w,b
  2354  010CFE  6FD9               	movwf	(SHA256_Calculate@blockPtr+1)& (0+255),b
  2355  010D00                     
  2356                           ; BSR set to: 0
  2357                           ;sha256.c: 289:     uint8_t * endPtr;;sha256.c: 290:     uint8_t i;;sha256.c: 292:     *
      +                          blockPtr++ = 0x80;
  2358  010D00  0060  F363  FFD9   	movff	SHA256_Calculate@blockPtr,fsr2l
  2359  010D06  0060  F367  FFDA   	movff	SHA256_Calculate@blockPtr+1,fsr2h
  2360  010D0C  0E80               	movlw	128
  2361  010D0E  6EDF               	movwf	indf2,c
  2362  010D10  4BD8               	infsnz	SHA256_Calculate@blockPtr& (0+255),f,b
  2363  010D12  2BD9               	incf	(SHA256_Calculate@blockPtr+1)& (0+255),f,b
  2364  010D14                     
  2365                           ; BSR set to: 0
  2366                           ;sha256.c: 294:     endPtr = context->partialBlock + 56;
  2367  010D14  0E5C               	movlw	92
  2368  010D16  25CD               	addwf	SHA256_Calculate@context& (0+255),w,b
  2369  010D18  6FD5               	movwf	SHA256_Calculate@endPtr& (0+255),b
  2370  010D1A  0E00               	movlw	0
  2371  010D1C  21CE               	addwfc	(SHA256_Calculate@context+1)& (0+255),w,b
  2372  010D1E  6FD6               	movwf	(SHA256_Calculate@endPtr+1)& (0+255),b
  2373  010D20                     
  2374                           ; BSR set to: 0
  2375                           ;sha256.c: 296:     if(blockPtr > endPtr)
  2376  010D20  51D8               	movf	SHA256_Calculate@blockPtr& (0+255),w,b
  2377  010D22  5DD5               	subwf	SHA256_Calculate@endPtr& (0+255),w,b
  2378  010D24  51D9               	movf	(SHA256_Calculate@blockPtr+1)& (0+255),w,b
  2379  010D26  59D6               	subwfb	(SHA256_Calculate@endPtr+1)& (0+255),w,b
  2380  010D28  B0D8               	btfsc	status,0,c
  2381  010D2A  EF99  F086         	goto	u691
  2382  010D2E  EF9B  F086         	goto	u690
  2383  010D32                     u691:
  2384  010D32  EFC9  F086         	goto	l1478
  2385  010D36                     u690:
  2386  010D36                     
  2387                           ; BSR set to: 0
  2388                           ;sha256.c: 297:     {;sha256.c: 298:         endPtr += 8;
  2389  010D36  0E08               	movlw	8
  2390  010D38  27D5               	addwf	SHA256_Calculate@endPtr& (0+255),f,b
  2391  010D3A  0E00               	movlw	0
  2392  010D3C  23D6               	addwfc	(SHA256_Calculate@endPtr+1)& (0+255),f,b
  2393                           
  2394                           ;sha256.c: 299:         while (blockPtr < endPtr)
  2395  010D3E  EFAB  F086         	goto	l1470
  2396  010D42                     l1466:
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;sha256.c: 300:         {;sha256.c: 301:             *blockPtr++ = 0x00;
  2400  010D42  0060  F363  FFD9   	movff	SHA256_Calculate@blockPtr,fsr2l
  2401  010D48  0060  F367  FFDA   	movff	SHA256_Calculate@blockPtr+1,fsr2h
  2402  010D4E  0E00               	movlw	0
  2403  010D50  6EDF               	movwf	indf2,c
  2404  010D52                     
  2405                           ; BSR set to: 0
  2406  010D52  4BD8               	infsnz	SHA256_Calculate@blockPtr& (0+255),f,b
  2407  010D54  2BD9               	incf	(SHA256_Calculate@blockPtr+1)& (0+255),f,b
  2408  010D56                     l1470:
  2409                           
  2410                           ; BSR set to: 0
  2411                           ;sha256.c: 299:         while (blockPtr < endPtr)
  2412  010D56  51D5               	movf	SHA256_Calculate@endPtr& (0+255),w,b
  2413  010D58  5DD8               	subwf	SHA256_Calculate@blockPtr& (0+255),w,b
  2414  010D5A  51D6               	movf	(SHA256_Calculate@endPtr+1)& (0+255),w,b
  2415  010D5C  59D9               	subwfb	(SHA256_Calculate@blockPtr+1)& (0+255),w,b
  2416  010D5E  A0D8               	btfss	status,0,c
  2417  010D60  EFB4  F086         	goto	u701
  2418  010D64  EFB6  F086         	goto	u700
  2419  010D68                     u701:
  2420  010D68  EFA1  F086         	goto	l1466
  2421  010D6C                     u700:
  2422  010D6C                     
  2423                           ; BSR set to: 0
  2424                           ;sha256.c: 303:         SHA256_HashBlock(context);
  2425  010D6C  0060  F334  F001   	movff	SHA256_Calculate@context,SHA256_HashBlock@context
  2426  010D72  0060  F338  F002   	movff	SHA256_Calculate@context+1,SHA256_HashBlock@context+1
  2427  010D78  EC00  F080         	call	_SHA256_HashBlock	;wreg free
  2428  010D7C                     
  2429                           ;sha256.c: 304:         blockPtr = context->partialBlock;
  2430  010D7C  0E24               	movlw	36
  2431  010D7E  0100               	movlb	0	; () banked
  2432  010D80  25CD               	addwf	SHA256_Calculate@context& (0+255),w,b
  2433  010D82  6FD8               	movwf	SHA256_Calculate@blockPtr& (0+255),b
  2434  010D84  0E00               	movlw	0
  2435  010D86  21CE               	addwfc	(SHA256_Calculate@context+1)& (0+255),w,b
  2436  010D88  6FD9               	movwf	(SHA256_Calculate@blockPtr+1)& (0+255),b
  2437  010D8A                     
  2438                           ; BSR set to: 0
  2439                           ;sha256.c: 305:         endPtr -= 8;
  2440  010D8A  0E08               	movlw	8
  2441  010D8C  5FD5               	subwf	SHA256_Calculate@endPtr& (0+255),f,b
  2442  010D8E  0E00               	movlw	0
  2443  010D90  5BD6               	subwfb	(SHA256_Calculate@endPtr+1)& (0+255),f,b
  2444  010D92                     l1478:
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;sha256.c: 309:     endPtr += 3;
  2448  010D92  0E03               	movlw	3
  2449  010D94  27D5               	addwf	SHA256_Calculate@endPtr& (0+255),f,b
  2450  010D96  0E00               	movlw	0
  2451  010D98  23D6               	addwfc	(SHA256_Calculate@endPtr+1)& (0+255),f,b
  2452                           
  2453                           ;sha256.c: 310:     while (blockPtr < endPtr)
  2454  010D9A  EFD9  F086         	goto	l1484
  2455  010D9E                     l1480:
  2456                           
  2457                           ; BSR set to: 0
  2458                           ;sha256.c: 311:     {;sha256.c: 312:         *blockPtr++ = 0x00;
  2459  010D9E  0060  F363  FFD9   	movff	SHA256_Calculate@blockPtr,fsr2l
  2460  010DA4  0060  F367  FFDA   	movff	SHA256_Calculate@blockPtr+1,fsr2h
  2461  010DAA  0E00               	movlw	0
  2462  010DAC  6EDF               	movwf	indf2,c
  2463  010DAE                     
  2464                           ; BSR set to: 0
  2465  010DAE  4BD8               	infsnz	SHA256_Calculate@blockPtr& (0+255),f,b
  2466  010DB0  2BD9               	incf	(SHA256_Calculate@blockPtr+1)& (0+255),f,b
  2467  010DB2                     l1484:
  2468                           
  2469                           ; BSR set to: 0
  2470                           ;sha256.c: 310:     while (blockPtr < endPtr)
  2471  010DB2  51D5               	movf	SHA256_Calculate@endPtr& (0+255),w,b
  2472  010DB4  5DD8               	subwf	SHA256_Calculate@blockPtr& (0+255),w,b
  2473  010DB6  51D6               	movf	(SHA256_Calculate@endPtr+1)& (0+255),w,b
  2474  010DB8  59D9               	subwfb	(SHA256_Calculate@blockPtr+1)& (0+255),w,b
  2475  010DBA  A0D8               	btfss	status,0,c
  2476  010DBC  EFE2  F086         	goto	u711
  2477  010DC0  EFE4  F086         	goto	u710
  2478  010DC4                     u711:
  2479  010DC4  EFCF  F086         	goto	l1480
  2480  010DC8                     u710:
  2481  010DC8                     
  2482                           ; BSR set to: 0
  2483                           ;sha256.c: 315:     *blockPtr++ = context->totalBytes >> 29;
  2484  010DC8  EE20 F020          	lfsr	2,32
  2485  010DCC  51CD               	movf	SHA256_Calculate@context& (0+255),w,b
  2486  010DCE  26D9               	addwf	fsr2l,f,c
  2487  010DD0  51CE               	movf	(SHA256_Calculate@context+1)& (0+255),w,b
  2488  010DD2  22DA               	addwfc	fsr2h,f,c
  2489  010DD4  006F FF78  F0D1    	movff	postinc2,??_SHA256_Calculate
  2490  010DDA  006F FF78  F0D2    	movff	postinc2,??_SHA256_Calculate+1
  2491  010DE0  006F FF78  F0D3    	movff	postinc2,??_SHA256_Calculate+2
  2492  010DE6  006F FF78  F0D4    	movff	postinc2,??_SHA256_Calculate+3
  2493  010DEC  0E1E               	movlw	30
  2494  010DEE  EFFE  F086         	goto	u720
  2495  010DF2                     u725:
  2496  010DF2  90D8               	bcf	status,0,c
  2497  010DF4  33D4               	rrcf	(??_SHA256_Calculate+3)& (0+255),f,b
  2498  010DF6  33D3               	rrcf	(??_SHA256_Calculate+2)& (0+255),f,b
  2499  010DF8  33D2               	rrcf	(??_SHA256_Calculate+1)& (0+255),f,b
  2500  010DFA  33D1               	rrcf	??_SHA256_Calculate& (0+255),f,b
  2501  010DFC                     u720:
  2502  010DFC  2EE8               	decfsz	wreg,f,c
  2503  010DFE  EFF9  F086         	goto	u725
  2504  010E02  51D1               	movf	??_SHA256_Calculate& (0+255),w,b
  2505  010E04  0060  F363  FFD9   	movff	SHA256_Calculate@blockPtr,fsr2l
  2506  010E0A  0060  F367  FFDA   	movff	SHA256_Calculate@blockPtr+1,fsr2h
  2507  010E10  6EDF               	movwf	indf2,c
  2508  010E12                     
  2509                           ; BSR set to: 0
  2510  010E12  4BD8               	infsnz	SHA256_Calculate@blockPtr& (0+255),f,b
  2511  010E14  2BD9               	incf	(SHA256_Calculate@blockPtr+1)& (0+255),f,b
  2512  010E16                     
  2513                           ; BSR set to: 0
  2514                           ;sha256.c: 316:     *blockPtr++ = context->totalBytes >> 21;
  2515  010E16  EE20 F020          	lfsr	2,32
  2516  010E1A  51CD               	movf	SHA256_Calculate@context& (0+255),w,b
  2517  010E1C  26D9               	addwf	fsr2l,f,c
  2518  010E1E  51CE               	movf	(SHA256_Calculate@context+1)& (0+255),w,b
  2519  010E20  22DA               	addwfc	fsr2h,f,c
  2520  010E22  006F FF78  F0D1    	movff	postinc2,??_SHA256_Calculate
  2521  010E28  006F FF78  F0D2    	movff	postinc2,??_SHA256_Calculate+1
  2522  010E2E  006F FF78  F0D3    	movff	postinc2,??_SHA256_Calculate+2
  2523  010E34  006F FF78  F0D4    	movff	postinc2,??_SHA256_Calculate+3
  2524  010E3A  0E16               	movlw	22
  2525  010E3C  EF25  F087         	goto	u730
  2526  010E40                     u735:
  2527  010E40  90D8               	bcf	status,0,c
  2528  010E42  33D4               	rrcf	(??_SHA256_Calculate+3)& (0+255),f,b
  2529  010E44  33D3               	rrcf	(??_SHA256_Calculate+2)& (0+255),f,b
  2530  010E46  33D2               	rrcf	(??_SHA256_Calculate+1)& (0+255),f,b
  2531  010E48  33D1               	rrcf	??_SHA256_Calculate& (0+255),f,b
  2532  010E4A                     u730:
  2533  010E4A  2EE8               	decfsz	wreg,f,c
  2534  010E4C  EF20  F087         	goto	u735
  2535  010E50  51D1               	movf	??_SHA256_Calculate& (0+255),w,b
  2536  010E52  0060  F363  FFD9   	movff	SHA256_Calculate@blockPtr,fsr2l
  2537  010E58  0060  F367  FFDA   	movff	SHA256_Calculate@blockPtr+1,fsr2h
  2538  010E5E  6EDF               	movwf	indf2,c
  2539  010E60  4BD8               	infsnz	SHA256_Calculate@blockPtr& (0+255),f,b
  2540  010E62  2BD9               	incf	(SHA256_Calculate@blockPtr+1)& (0+255),f,b
  2541  010E64                     
  2542                           ; BSR set to: 0
  2543                           ;sha256.c: 317:     *blockPtr++ = context->totalBytes >> 13;
  2544  010E64  EE20 F020          	lfsr	2,32
  2545  010E68  51CD               	movf	SHA256_Calculate@context& (0+255),w,b
  2546  010E6A  26D9               	addwf	fsr2l,f,c
  2547  010E6C  51CE               	movf	(SHA256_Calculate@context+1)& (0+255),w,b
  2548  010E6E  22DA               	addwfc	fsr2h,f,c
  2549  010E70  006F FF78  F0D1    	movff	postinc2,??_SHA256_Calculate
  2550  010E76  006F FF78  F0D2    	movff	postinc2,??_SHA256_Calculate+1
  2551  010E7C  006F FF78  F0D3    	movff	postinc2,??_SHA256_Calculate+2
  2552  010E82  006F FF78  F0D4    	movff	postinc2,??_SHA256_Calculate+3
  2553  010E88  0E0E               	movlw	14
  2554  010E8A  EF4C  F087         	goto	u740
  2555  010E8E                     u745:
  2556  010E8E  90D8               	bcf	status,0,c
  2557  010E90  33D4               	rrcf	(??_SHA256_Calculate+3)& (0+255),f,b
  2558  010E92  33D3               	rrcf	(??_SHA256_Calculate+2)& (0+255),f,b
  2559  010E94  33D2               	rrcf	(??_SHA256_Calculate+1)& (0+255),f,b
  2560  010E96  33D1               	rrcf	??_SHA256_Calculate& (0+255),f,b
  2561  010E98                     u740:
  2562  010E98  2EE8               	decfsz	wreg,f,c
  2563  010E9A  EF47  F087         	goto	u745
  2564  010E9E  51D1               	movf	??_SHA256_Calculate& (0+255),w,b
  2565  010EA0  0060  F363  FFD9   	movff	SHA256_Calculate@blockPtr,fsr2l
  2566  010EA6  0060  F367  FFDA   	movff	SHA256_Calculate@blockPtr+1,fsr2h
  2567  010EAC  6EDF               	movwf	indf2,c
  2568  010EAE                     
  2569                           ; BSR set to: 0
  2570  010EAE  4BD8               	infsnz	SHA256_Calculate@blockPtr& (0+255),f,b
  2571  010EB0  2BD9               	incf	(SHA256_Calculate@blockPtr+1)& (0+255),f,b
  2572                           
  2573                           ;sha256.c: 318:     *blockPtr++ = context->totalBytes >> 5;
  2574  010EB2  EE20 F020          	lfsr	2,32
  2575  010EB6  51CD               	movf	SHA256_Calculate@context& (0+255),w,b
  2576  010EB8  26D9               	addwf	fsr2l,f,c
  2577  010EBA  51CE               	movf	(SHA256_Calculate@context+1)& (0+255),w,b
  2578  010EBC  22DA               	addwfc	fsr2h,f,c
  2579  010EBE  006F FF78  F0D1    	movff	postinc2,??_SHA256_Calculate
  2580  010EC4  006F FF78  F0D2    	movff	postinc2,??_SHA256_Calculate+1
  2581  010ECA  006F FF78  F0D3    	movff	postinc2,??_SHA256_Calculate+2
  2582  010ED0  006F FF78  F0D4    	movff	postinc2,??_SHA256_Calculate+3
  2583  010ED6  0E06               	movlw	6
  2584  010ED8  EF73  F087         	goto	u750
  2585  010EDC                     u755:
  2586  010EDC  90D8               	bcf	status,0,c
  2587  010EDE  33D4               	rrcf	(??_SHA256_Calculate+3)& (0+255),f,b
  2588  010EE0  33D3               	rrcf	(??_SHA256_Calculate+2)& (0+255),f,b
  2589  010EE2  33D2               	rrcf	(??_SHA256_Calculate+1)& (0+255),f,b
  2590  010EE4  33D1               	rrcf	??_SHA256_Calculate& (0+255),f,b
  2591  010EE6                     u750:
  2592  010EE6  2EE8               	decfsz	wreg,f,c
  2593  010EE8  EF6E  F087         	goto	u755
  2594  010EEC  51D1               	movf	??_SHA256_Calculate& (0+255),w,b
  2595  010EEE  0060  F363  FFD9   	movff	SHA256_Calculate@blockPtr,fsr2l
  2596  010EF4  0060  F367  FFDA   	movff	SHA256_Calculate@blockPtr+1,fsr2h
  2597  010EFA  6EDF               	movwf	indf2,c
  2598  010EFC                     
  2599                           ; BSR set to: 0
  2600  010EFC  4BD8               	infsnz	SHA256_Calculate@blockPtr& (0+255),f,b
  2601  010EFE  2BD9               	incf	(SHA256_Calculate@blockPtr+1)& (0+255),f,b
  2602  010F00                     
  2603                           ; BSR set to: 0
  2604                           ;sha256.c: 319:     *blockPtr++ = context->totalBytes << 3;
  2605  010F00  EE20 F020          	lfsr	2,32
  2606  010F04  51CD               	movf	SHA256_Calculate@context& (0+255),w,b
  2607  010F06  26D9               	addwf	fsr2l,f,c
  2608  010F08  51CE               	movf	(SHA256_Calculate@context+1)& (0+255),w,b
  2609  010F0A  22DA               	addwfc	fsr2h,f,c
  2610  010F0C  50DF               	movf	indf2,w,c
  2611  010F0E  6FD1               	movwf	??_SHA256_Calculate& (0+255),b
  2612  010F10  90D8               	bcf	status,0,c
  2613  010F12  37D1               	rlcf	??_SHA256_Calculate& (0+255),f,b
  2614  010F14  90D8               	bcf	status,0,c
  2615  010F16  37D1               	rlcf	??_SHA256_Calculate& (0+255),f,b
  2616  010F18  90D8               	bcf	status,0,c
  2617  010F1A  35D1               	rlcf	??_SHA256_Calculate& (0+255),w,b
  2618  010F1C  0060  F363  FFD9   	movff	SHA256_Calculate@blockPtr,fsr2l
  2619  010F22  0060  F367  FFDA   	movff	SHA256_Calculate@blockPtr+1,fsr2h
  2620  010F28  6EDF               	movwf	indf2,c
  2621  010F2A  4BD8               	infsnz	SHA256_Calculate@blockPtr& (0+255),f,b
  2622  010F2C  2BD9               	incf	(SHA256_Calculate@blockPtr+1)& (0+255),f,b
  2623  010F2E                     
  2624                           ; BSR set to: 0
  2625                           ;sha256.c: 322:     SHA256_HashBlock(context);
  2626  010F2E  0060  F334  F001   	movff	SHA256_Calculate@context,SHA256_HashBlock@context
  2627  010F34  0060  F338  F002   	movff	SHA256_Calculate@context+1,SHA256_HashBlock@context+1
  2628  010F3A  EC00  F080         	call	_SHA256_HashBlock	;wreg free
  2629  010F3E                     
  2630                           ;sha256.c: 325:     for (i = 0; i < 7; i++)
  2631  010F3E  0E00               	movlw	0
  2632  010F40  0100               	movlb	0	; () banked
  2633  010F42  6FD7               	movwf	SHA256_Calculate@i& (0+255),b
  2634  010F44                     l1508:
  2635                           
  2636                           ; BSR set to: 0
  2637                           ;sha256.c: 326:     {;sha256.c: 327:         SHA256_OutputData (result + (i << 2), conte
      +                          xt->h[i]);
  2638  010F44  51D7               	movf	SHA256_Calculate@i& (0+255),w,b
  2639  010F46  6FD1               	movwf	??_SHA256_Calculate& (0+255),b
  2640  010F48  6BD2               	clrf	(??_SHA256_Calculate+1)& (0+255),b
  2641  010F4A  90D8               	bcf	status,0,c
  2642  010F4C  37D1               	rlcf	??_SHA256_Calculate& (0+255),f,b
  2643  010F4E  37D2               	rlcf	(??_SHA256_Calculate+1)& (0+255),f,b
  2644  010F50  90D8               	bcf	status,0,c
  2645  010F52  37D1               	rlcf	??_SHA256_Calculate& (0+255),f,b
  2646  010F54  37D2               	rlcf	(??_SHA256_Calculate+1)& (0+255),f,b
  2647  010F56  51D1               	movf	??_SHA256_Calculate& (0+255),w,b
  2648  010F58  25CF               	addwf	SHA256_Calculate@result& (0+255),w,b
  2649  010F5A  6E01               	movwf	SHA256_OutputData@output^0,c
  2650  010F5C  51D2               	movf	(??_SHA256_Calculate+1)& (0+255),w,b
  2651  010F5E  21D0               	addwfc	(SHA256_Calculate@result+1)& (0+255),w,b
  2652  010F60  6E02               	movwf	(SHA256_OutputData@output+1)^0,c
  2653  010F62  51D7               	movf	SHA256_Calculate@i& (0+255),w,b
  2654  010F64  0D04               	mullw	4
  2655  010F66  006F FFCC  F0D3    	movff	prodl,??_SHA256_Calculate+2
  2656  010F6C  006F FFD0  F0D4    	movff	prodh,??_SHA256_Calculate+3
  2657  010F72  51D3               	movf	(??_SHA256_Calculate+2)& (0+255),w,b
  2658  010F74  25CD               	addwf	SHA256_Calculate@context& (0+255),w,b
  2659  010F76  6ED9               	movwf	fsr2l,c
  2660  010F78  51D4               	movf	(??_SHA256_Calculate+3)& (0+255),w,b
  2661  010F7A  21CE               	addwfc	(SHA256_Calculate@context+1)& (0+255),w,b
  2662  010F7C  6EDA               	movwf	fsr2h,c
  2663  010F7E  006F FF78  F003    	movff	postinc2,SHA256_OutputData@value
  2664  010F84  006F FF78  F004    	movff	postinc2,SHA256_OutputData@value+1
  2665  010F8A  006F FF78  F005    	movff	postinc2,SHA256_OutputData@value+2
  2666  010F90  006F FF78  F006    	movff	postinc2,SHA256_OutputData@value+3
  2667  010F96  EC96  F08A         	call	_SHA256_OutputData	;wreg free
  2668  010F9A                     
  2669                           ;sha256.c: 328:     }
  2670  010F9A  0100               	movlb	0	; () banked
  2671  010F9C  2BD7               	incf	SHA256_Calculate@i& (0+255),f,b
  2672  010F9E                     
  2673                           ; BSR set to: 0
  2674  010F9E  0E06               	movlw	6
  2675  010FA0  65D7               	cpfsgt	SHA256_Calculate@i& (0+255),b
  2676  010FA2  EFD5  F087         	goto	u761
  2677  010FA6  EFD7  F087         	goto	u760
  2678  010FAA                     u761:
  2679  010FAA  EFA2  F087         	goto	l1508
  2680  010FAE                     u760:
  2681  010FAE                     
  2682                           ; BSR set to: 0
  2683                           ;sha256.c: 330:     if (context->length == SHA2_256)
  2684  010FAE  EE20 F066          	lfsr	2,102
  2685  010FB2  51CD               	movf	SHA256_Calculate@context& (0+255),w,b
  2686  010FB4  26D9               	addwf	fsr2l,f,c
  2687  010FB6  51CE               	movf	(SHA256_Calculate@context+1)& (0+255),w,b
  2688  010FB8  22DA               	addwfc	fsr2h,f,c
  2689  010FBA  04DE               	decf	postinc2,w,c
  2690  010FBC  A4D8               	btfss	status,2,c
  2691  010FBE  EFE3  F087         	goto	u771
  2692  010FC2  EFE5  F087         	goto	u770
  2693  010FC6                     u771:
  2694  010FC6  EFFF  F087         	goto	l40
  2695  010FCA                     u770:
  2696  010FCA                     
  2697                           ; BSR set to: 0
  2698                           ;sha256.c: 331:     {;sha256.c: 332:         SHA256_OutputData (result + 28, context->h[
      +                          7]);
  2699  010FCA  0E1C               	movlw	28
  2700  010FCC  25CF               	addwf	SHA256_Calculate@result& (0+255),w,b
  2701  010FCE  6E01               	movwf	SHA256_OutputData@output^0,c
  2702  010FD0  0E00               	movlw	0
  2703  010FD2  21D0               	addwfc	(SHA256_Calculate@result+1)& (0+255),w,b
  2704  010FD4  6E02               	movwf	(SHA256_OutputData@output+1)^0,c
  2705  010FD6  EE20 F01C          	lfsr	2,28
  2706  010FDA  51CD               	movf	SHA256_Calculate@context& (0+255),w,b
  2707  010FDC  26D9               	addwf	fsr2l,f,c
  2708  010FDE  51CE               	movf	(SHA256_Calculate@context+1)& (0+255),w,b
  2709  010FE0  22DA               	addwfc	fsr2h,f,c
  2710  010FE2  006F FF78  F003    	movff	postinc2,SHA256_OutputData@value
  2711  010FE8  006F FF78  F004    	movff	postinc2,SHA256_OutputData@value+1
  2712  010FEE  006F FF78  F005    	movff	postinc2,SHA256_OutputData@value+2
  2713  010FF4  006F FF78  F006    	movff	postinc2,SHA256_OutputData@value+3
  2714  010FFA  EC96  F08A         	call	_SHA256_OutputData	;wreg free
  2715  010FFE                     l40:
  2716  010FFE  0012               	return		;funcret
  2717  011000                     __end_of_SHA256_Calculate:
  2718                           	opt callstack 0
  2719                           
  2720 ;; *************** function _SHA256_OutputData *****************
  2721 ;; Defined at:
  2722 ;;		line 336 in file "sha256.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;  output          2    0[COMRAM] PTR unsigned char 
  2725 ;;		 -> digest(64), 
  2726 ;;  value           4    2[COMRAM] unsigned long 
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;		None
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  1    wreg      void 
  2731 ;; Registers used:
  2732 ;;		fsr2l, fsr2h, status,2, status,0
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2738 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2741 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2742 ;;Total ram usage:        6 bytes
  2743 ;; Hardware stack levels used:    1
  2744 ;; This function calls:
  2745 ;;		Nothing
  2746 ;; This function is called by:
  2747 ;;		_SHA256_Calculate
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           	psect	text9
  2752  01152C                     __ptext9:
  2753                           	opt callstack 0
  2754  01152C                     _SHA256_OutputData:
  2755                           	opt callstack 29
  2756  01152C                     
  2757                           ;sha256.c: 336: void SHA256_OutputData (uint8_t * output, uint32_t value);sha256.c: 337:
      +                           {;sha256.c: 338:     *(output++) = (uint8_t)(value >> 24);
  2758  01152C  0060  F007  FFD9   	movff	SHA256_OutputData@output,fsr2l
  2759  011532  0060  F00B  FFDA   	movff	SHA256_OutputData@output+1,fsr2h
  2760  011538  0060  F01B  FFDF   	movff	SHA256_OutputData@value+3,indf2
  2761  01153E  4A01               	infsnz	SHA256_OutputData@output^0,f,c
  2762  011540  2A02               	incf	(SHA256_OutputData@output+1)^0,f,c
  2763  011542                     
  2764                           ;sha256.c: 339:     *(output++) = (uint8_t)(value >> 16);
  2765  011542  0060  F007  FFD9   	movff	SHA256_OutputData@output,fsr2l
  2766  011548  0060  F00B  FFDA   	movff	SHA256_OutputData@output+1,fsr2h
  2767  01154E  0060  F017  FFDF   	movff	SHA256_OutputData@value+2,indf2
  2768  011554  4A01               	infsnz	SHA256_OutputData@output^0,f,c
  2769  011556  2A02               	incf	(SHA256_OutputData@output+1)^0,f,c
  2770  011558                     
  2771                           ;sha256.c: 340:     *(output++) = (uint8_t)(value >> 8);
  2772  011558  0060  F007  FFD9   	movff	SHA256_OutputData@output,fsr2l
  2773  01155E  0060  F00B  FFDA   	movff	SHA256_OutputData@output+1,fsr2h
  2774  011564  0060  F013  FFDF   	movff	SHA256_OutputData@value+1,indf2
  2775  01156A  4A01               	infsnz	SHA256_OutputData@output^0,f,c
  2776  01156C  2A02               	incf	(SHA256_OutputData@output+1)^0,f,c
  2777                           
  2778                           ;sha256.c: 341:     *(output++) = (uint8_t)value;
  2779  01156E  0060  F007  FFD9   	movff	SHA256_OutputData@output,fsr2l
  2780  011574  0060  F00B  FFDA   	movff	SHA256_OutputData@output+1,fsr2h
  2781  01157A  0060  F00F  FFDF   	movff	SHA256_OutputData@value,indf2
  2782  011580  4A01               	infsnz	SHA256_OutputData@output^0,f,c
  2783  011582  2A02               	incf	(SHA256_OutputData@output+1)^0,f,c
  2784  011584  0012               	return		;funcret
  2785  011586                     __end_of_SHA256_OutputData:
  2786                           	opt callstack 0
  2787                           
  2788 ;; *************** function _SHA256_HashBlock *****************
  2789 ;; Defined at:
  2790 ;;		line 171 in file "sha256.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  context         2    0[COMRAM] PTR struct .
  2793 ;;		 -> contexts(103), 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;  e               4   38[BANK0 ] unsigned long 
  2796 ;;  a               4   34[BANK0 ] unsigned long 
  2797 ;;  t1              4   28[BANK0 ] unsigned long 
  2798 ;;  c               4   24[BANK0 ] unsigned long 
  2799 ;;  b               4   20[BANK0 ] unsigned long 
  2800 ;;  g               4   16[BANK0 ] unsigned long 
  2801 ;;  f               4   12[BANK0 ] unsigned long 
  2802 ;;  h               4    8[BANK0 ] unsigned long 
  2803 ;;  d               4    4[BANK0 ] unsigned long 
  2804 ;;  t2              4    0[BANK0 ] unsigned long 
  2805 ;;  schedulePtr     2   43[BANK0 ] PTR unsigned long 
  2806 ;;		 -> workingBuffer(320), 
  2807 ;;  dataPtr         2   32[BANK0 ] PTR unsigned char 
  2808 ;;		 -> contexts.partialBlock(64), contexts(103), 
  2809 ;;  i               1   42[BANK0 ] unsigned char 
  2810 ;; Return value:  Size  Location     Type
  2811 ;;                  1    wreg      void 
  2812 ;; Registers used:
  2813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2814 ;; Tracked objects:
  2815 ;;		On entry : 0/0
  2816 ;;		On exit  : 0/0
  2817 ;;		Unchanged: 0/0
  2818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2819 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2820 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2821 ;;      Temps:         92       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2822 ;;      Totals:        94      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2823 ;;Total ram usage:      139 bytes
  2824 ;; Hardware stack levels used:    1
  2825 ;; This function calls:
  2826 ;;		Nothing
  2827 ;; This function is called by:
  2828 ;;		_SHA256_DataAdd
  2829 ;;		_SHA256_Calculate
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           	psect	text10
  2834  010000                     __ptext10:
  2835                           	opt callstack 0
  2836  010000                     _SHA256_HashBlock:
  2837                           	opt callstack 29
  2838  010000                     
  2839                           ;sha256.c: 171: void SHA256_HashBlock (SHA256_CONTEXT * context);sha256.c: 172: {;sha256
      +                          .c: 173:     uint32_t a, b, c, d, e, f, g, h;;sha256.c: 174:     uint8_t i;;sha256.c: 17
      +                          5:     uint32_t t1, t2;;sha256.c: 176:     uint8_t * dataPtr = context->partialBlock;;
  2840  010000  0E24               	movlw	36
  2841  010002  2401               	addwf	SHA256_HashBlock@context^0,w,c
  2842  010004  0100               	movlb	0	; () banked
  2843  010006  6FC0               	movwf	SHA256_HashBlock@dataPtr& (0+255),b
  2844  010008  0E00               	movlw	0
  2845  01000A  2002               	addwfc	(SHA256_HashBlock@context+1)^0,w,c
  2846  01000C  6FC1               	movwf	(SHA256_HashBlock@dataPtr+1)& (0+255),b
  2847  01000E                     
  2848                           ; BSR set to: 0
  2849                           ;sha256.c: 177:     uint32_t * schedulePtr;;sha256.c: 182:     schedulePtr = context->wo
      +                          rkingBuffer;
  2850  01000E  EE20 F064          	lfsr	2,100
  2851  010012  5001               	movf	SHA256_HashBlock@context^0,w,c
  2852  010014  26D9               	addwf	fsr2l,f,c
  2853  010016  5002               	movf	(SHA256_HashBlock@context+1)^0,w,c
  2854  010018  22DA               	addwfc	fsr2h,f,c
  2855  01001A  006F FF78  F0CB    	movff	postinc2,SHA256_HashBlock@schedulePtr
  2856  010020  006F FF74  F0CC    	movff	postdec2,SHA256_HashBlock@schedulePtr+1
  2857  010026                     
  2858                           ; BSR set to: 0
  2859                           ;sha256.c: 183:     for (i = 0; i < 16; i++)
  2860  010026  0E00               	movlw	0
  2861  010028  6FCA               	movwf	SHA256_HashBlock@i& (0+255),b
  2862  01002A                     l1248:
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;sha256.c: 184:     {;sha256.c: 185:         t1 = *dataPtr++;
  2866  01002A  0060  F303  FFD9   	movff	SHA256_HashBlock@dataPtr,fsr2l
  2867  010030  0060  F307  FFDA   	movff	SHA256_HashBlock@dataPtr+1,fsr2h
  2868  010036  50DF               	movf	indf2,w,c
  2869  010038  6E03               	movwf	??_SHA256_HashBlock^0,c
  2870  01003A  5003               	movf	??_SHA256_HashBlock^0,w,c
  2871  01003C  6FBC               	movwf	SHA256_HashBlock@t1& (0+255),b
  2872  01003E  6BBD               	clrf	(SHA256_HashBlock@t1+1)& (0+255),b
  2873  010040  6BBE               	clrf	(SHA256_HashBlock@t1+2)& (0+255),b
  2874  010042  6BBF               	clrf	(SHA256_HashBlock@t1+3)& (0+255),b
  2875  010044                     
  2876                           ; BSR set to: 0
  2877  010044  4BC0               	infsnz	SHA256_HashBlock@dataPtr& (0+255),f,b
  2878  010046  2BC1               	incf	(SHA256_HashBlock@dataPtr+1)& (0+255),f,b
  2879  010048                     
  2880                           ; BSR set to: 0
  2881                           ;sha256.c: 186:         t1 <<= 8;
  2882  010048  0060  F2F8  F0BF   	movff	SHA256_HashBlock@t1+2,SHA256_HashBlock@t1+3
  2883  01004E  0060  F2F4  F0BE   	movff	SHA256_HashBlock@t1+1,SHA256_HashBlock@t1+2
  2884  010054  0060  F2F0  F0BD   	movff	SHA256_HashBlock@t1,SHA256_HashBlock@t1+1
  2885  01005A  6BBC               	clrf	SHA256_HashBlock@t1& (0+255),b
  2886  01005C                     
  2887                           ; BSR set to: 0
  2888                           ;sha256.c: 187:         t1 += *dataPtr++;
  2889  01005C  0060  F303  FFD9   	movff	SHA256_HashBlock@dataPtr,fsr2l
  2890  010062  0060  F307  FFDA   	movff	SHA256_HashBlock@dataPtr+1,fsr2h
  2891  010068  50DF               	movf	indf2,w,c
  2892  01006A  6E03               	movwf	??_SHA256_HashBlock^0,c
  2893  01006C  5003               	movf	??_SHA256_HashBlock^0,w,c
  2894  01006E  27BC               	addwf	SHA256_HashBlock@t1& (0+255),f,b
  2895  010070  0E00               	movlw	0
  2896  010072  23BD               	addwfc	(SHA256_HashBlock@t1+1)& (0+255),f,b
  2897  010074  23BE               	addwfc	(SHA256_HashBlock@t1+2)& (0+255),f,b
  2898  010076  23BF               	addwfc	(SHA256_HashBlock@t1+3)& (0+255),f,b
  2899  010078                     
  2900                           ; BSR set to: 0
  2901  010078  4BC0               	infsnz	SHA256_HashBlock@dataPtr& (0+255),f,b
  2902  01007A  2BC1               	incf	(SHA256_HashBlock@dataPtr+1)& (0+255),f,b
  2903                           
  2904                           ;sha256.c: 188:         t1 <<= 8;
  2905  01007C  0060  F2F8  F0BF   	movff	SHA256_HashBlock@t1+2,SHA256_HashBlock@t1+3
  2906  010082  0060  F2F4  F0BE   	movff	SHA256_HashBlock@t1+1,SHA256_HashBlock@t1+2
  2907  010088  0060  F2F0  F0BD   	movff	SHA256_HashBlock@t1,SHA256_HashBlock@t1+1
  2908  01008E  6BBC               	clrf	SHA256_HashBlock@t1& (0+255),b
  2909  010090                     
  2910                           ; BSR set to: 0
  2911                           ;sha256.c: 189:         t1 += *dataPtr++;
  2912  010090  0060  F303  FFD9   	movff	SHA256_HashBlock@dataPtr,fsr2l
  2913  010096  0060  F307  FFDA   	movff	SHA256_HashBlock@dataPtr+1,fsr2h
  2914  01009C  50DF               	movf	indf2,w,c
  2915  01009E  6E03               	movwf	??_SHA256_HashBlock^0,c
  2916  0100A0  5003               	movf	??_SHA256_HashBlock^0,w,c
  2917  0100A2  27BC               	addwf	SHA256_HashBlock@t1& (0+255),f,b
  2918  0100A4  0E00               	movlw	0
  2919  0100A6  23BD               	addwfc	(SHA256_HashBlock@t1+1)& (0+255),f,b
  2920  0100A8  23BE               	addwfc	(SHA256_HashBlock@t1+2)& (0+255),f,b
  2921  0100AA  23BF               	addwfc	(SHA256_HashBlock@t1+3)& (0+255),f,b
  2922  0100AC                     
  2923                           ; BSR set to: 0
  2924  0100AC  4BC0               	infsnz	SHA256_HashBlock@dataPtr& (0+255),f,b
  2925  0100AE  2BC1               	incf	(SHA256_HashBlock@dataPtr+1)& (0+255),f,b
  2926  0100B0                     
  2927                           ; BSR set to: 0
  2928                           ;sha256.c: 190:         t1 <<= 8;
  2929  0100B0  0060  F2F8  F0BF   	movff	SHA256_HashBlock@t1+2,SHA256_HashBlock@t1+3
  2930  0100B6  0060  F2F4  F0BE   	movff	SHA256_HashBlock@t1+1,SHA256_HashBlock@t1+2
  2931  0100BC  0060  F2F0  F0BD   	movff	SHA256_HashBlock@t1,SHA256_HashBlock@t1+1
  2932  0100C2  6BBC               	clrf	SHA256_HashBlock@t1& (0+255),b
  2933  0100C4                     
  2934                           ; BSR set to: 0
  2935                           ;sha256.c: 191:         t1 += *dataPtr++;
  2936  0100C4  0060  F303  FFD9   	movff	SHA256_HashBlock@dataPtr,fsr2l
  2937  0100CA  0060  F307  FFDA   	movff	SHA256_HashBlock@dataPtr+1,fsr2h
  2938  0100D0  50DF               	movf	indf2,w,c
  2939  0100D2  6E03               	movwf	??_SHA256_HashBlock^0,c
  2940  0100D4  5003               	movf	??_SHA256_HashBlock^0,w,c
  2941  0100D6  27BC               	addwf	SHA256_HashBlock@t1& (0+255),f,b
  2942  0100D8  0E00               	movlw	0
  2943  0100DA  23BD               	addwfc	(SHA256_HashBlock@t1+1)& (0+255),f,b
  2944  0100DC  23BE               	addwfc	(SHA256_HashBlock@t1+2)& (0+255),f,b
  2945  0100DE  23BF               	addwfc	(SHA256_HashBlock@t1+3)& (0+255),f,b
  2946  0100E0  4BC0               	infsnz	SHA256_HashBlock@dataPtr& (0+255),f,b
  2947  0100E2  2BC1               	incf	(SHA256_HashBlock@dataPtr+1)& (0+255),f,b
  2948  0100E4                     
  2949                           ; BSR set to: 0
  2950                           ;sha256.c: 192:         *(schedulePtr + i) = t1;
  2951  0100E4  51CA               	movf	SHA256_HashBlock@i& (0+255),w,b
  2952  0100E6  6E03               	movwf	??_SHA256_HashBlock^0,c
  2953  0100E8  6A04               	clrf	(??_SHA256_HashBlock+1)^0,c
  2954  0100EA  90D8               	bcf	status,0,c
  2955  0100EC  3603               	rlcf	??_SHA256_HashBlock^0,f,c
  2956  0100EE  3604               	rlcf	(??_SHA256_HashBlock+1)^0,f,c
  2957  0100F0  90D8               	bcf	status,0,c
  2958  0100F2  3603               	rlcf	??_SHA256_HashBlock^0,f,c
  2959  0100F4  3604               	rlcf	(??_SHA256_HashBlock+1)^0,f,c
  2960  0100F6  5003               	movf	??_SHA256_HashBlock^0,w,c
  2961  0100F8  25CB               	addwf	SHA256_HashBlock@schedulePtr& (0+255),w,b
  2962  0100FA  6ED9               	movwf	fsr2l,c
  2963  0100FC  5004               	movf	(??_SHA256_HashBlock+1)^0,w,c
  2964  0100FE  21CC               	addwfc	(SHA256_HashBlock@schedulePtr+1)& (0+255),w,b
  2965  010100  6EDA               	movwf	fsr2h,c
  2966  010102  0060  F2F3  FFDE   	movff	SHA256_HashBlock@t1,postinc2
  2967  010108  0060  F2F7  FFDE   	movff	SHA256_HashBlock@t1+1,postinc2
  2968  01010E  0060  F2FB  FFDE   	movff	SHA256_HashBlock@t1+2,postinc2
  2969  010114  0060  F2FF  FFDE   	movff	SHA256_HashBlock@t1+3,postinc2
  2970  01011A                     
  2971                           ; BSR set to: 0
  2972                           ;sha256.c: 193:     }
  2973  01011A  2BCA               	incf	SHA256_HashBlock@i& (0+255),f,b
  2974  01011C                     
  2975                           ; BSR set to: 0
  2976  01011C  0E0F               	movlw	15
  2977  01011E  65CA               	cpfsgt	SHA256_HashBlock@i& (0+255),b
  2978  010120  EF94  F080         	goto	u411
  2979  010124  EF96  F080         	goto	u410
  2980  010128                     u411:
  2981  010128  EF15  F080         	goto	l1248
  2982  01012C                     u410:
  2983  01012C                     
  2984                           ; BSR set to: 0
  2985                           ;sha256.c: 196:     for (i = 16; i < 64; i++)
  2986  01012C  0E10               	movlw	16
  2987  01012E  6FCA               	movwf	SHA256_HashBlock@i& (0+255),b
  2988  010130                     l1278:
  2989                           
  2990                           ; BSR set to: 0
  2991                           ;sha256.c: 197:     {;sha256.c: 198:         schedulePtr = context->workingBuffer + i;
  2992  010130  51CA               	movf	SHA256_HashBlock@i& (0+255),w,b
  2993  010132  6E03               	movwf	??_SHA256_HashBlock^0,c
  2994  010134  6A04               	clrf	(??_SHA256_HashBlock+1)^0,c
  2995  010136  90D8               	bcf	status,0,c
  2996  010138  3603               	rlcf	??_SHA256_HashBlock^0,f,c
  2997  01013A  3604               	rlcf	(??_SHA256_HashBlock+1)^0,f,c
  2998  01013C  90D8               	bcf	status,0,c
  2999  01013E  3603               	rlcf	??_SHA256_HashBlock^0,f,c
  3000  010140  3604               	rlcf	(??_SHA256_HashBlock+1)^0,f,c
  3001  010142  EE20 F064          	lfsr	2,100
  3002  010146  5001               	movf	SHA256_HashBlock@context^0,w,c
  3003  010148  26D9               	addwf	fsr2l,f,c
  3004  01014A  5002               	movf	(SHA256_HashBlock@context+1)^0,w,c
  3005  01014C  22DA               	addwfc	fsr2h,f,c
  3006  01014E  006F FF78  F005    	movff	postinc2,??_SHA256_HashBlock+2
  3007  010154  006F FF74  F006    	movff	postdec2,??_SHA256_HashBlock+3
  3008  01015A  5003               	movf	??_SHA256_HashBlock^0,w,c
  3009  01015C  2405               	addwf	(??_SHA256_HashBlock+2)^0,w,c
  3010  01015E  6FCB               	movwf	SHA256_HashBlock@schedulePtr& (0+255),b
  3011  010160  5004               	movf	(??_SHA256_HashBlock+1)^0,w,c
  3012  010162  2006               	addwfc	(??_SHA256_HashBlock+3)^0,w,c
  3013  010164  6FCC               	movwf	(SHA256_HashBlock@schedulePtr+1)& (0+255),b
  3014                           
  3015                           ;sha256.c: 199:         *schedulePtr = (((*(schedulePtr - 2) >> 17) | (*(schedulePtr - 2
      +                          ) << (32-17))) ^ ((*(schedulePtr - 2) >> 19) | (*(schedulePtr - 2) << (32-19))) ^ (*(sch
      +                          edulePtr - 2) >> 10)) + *(schedulePtr - 7) + (((*(schedulePtr - 15) >> 7) | (*(scheduleP
      +                          tr - 15) << (32-7))) ^ ((*(schedulePtr - 15) >> 18) | (*(schedulePtr - 15) << (32-18))) 
      +                          ^ (*(schedulePtr - 15) >> 3)) + *(schedulePtr - 16);
  3016  010166  EE2F F3C0          	lfsr	2,-64
  3017  01016A  51CB               	movf	SHA256_HashBlock@schedulePtr& (0+255),w,b
  3018  01016C  26D9               	addwf	fsr2l,f,c
  3019  01016E  51CC               	movf	(SHA256_HashBlock@schedulePtr+1)& (0+255),w,b
  3020  010170  22DA               	addwfc	fsr2h,f,c
  3021  010172  006F FF78  F003    	movff	postinc2,??_SHA256_HashBlock
  3022  010178  006F FF78  F004    	movff	postinc2,??_SHA256_HashBlock+1
  3023  01017E  006F FF78  F005    	movff	postinc2,??_SHA256_HashBlock+2
  3024  010184  006F FF78  F006    	movff	postinc2,??_SHA256_HashBlock+3
  3025  01018A  EE2F F3E4          	lfsr	2,-28
  3026  01018E  51CB               	movf	SHA256_HashBlock@schedulePtr& (0+255),w,b
  3027  010190  26D9               	addwf	fsr2l,f,c
  3028  010192  51CC               	movf	(SHA256_HashBlock@schedulePtr+1)& (0+255),w,b
  3029  010194  22DA               	addwfc	fsr2h,f,c
  3030  010196  006F FF78  F007    	movff	postinc2,??_SHA256_HashBlock+4
  3031  01019C  006F FF78  F008    	movff	postinc2,??_SHA256_HashBlock+5
  3032  0101A2  006F FF78  F009    	movff	postinc2,??_SHA256_HashBlock+6
  3033  0101A8  006F FF78  F00A    	movff	postinc2,??_SHA256_HashBlock+7
  3034  0101AE  EE2F F3C4          	lfsr	2,-60
  3035  0101B2  51CB               	movf	SHA256_HashBlock@schedulePtr& (0+255),w,b
  3036  0101B4  26D9               	addwf	fsr2l,f,c
  3037  0101B6  51CC               	movf	(SHA256_HashBlock@schedulePtr+1)& (0+255),w,b
  3038  0101B8  22DA               	addwfc	fsr2h,f,c
  3039  0101BA  006F FF78  F00B    	movff	postinc2,??_SHA256_HashBlock+8
  3040  0101C0  006F FF78  F00C    	movff	postinc2,??_SHA256_HashBlock+9
  3041  0101C6  006F FF78  F00D    	movff	postinc2,??_SHA256_HashBlock+10
  3042  0101CC  006F FF78  F00E    	movff	postinc2,??_SHA256_HashBlock+11
  3043  0101D2  0E04               	movlw	4
  3044  0101D4  EFF1  F080         	goto	u420
  3045  0101D8                     u425:
  3046  0101D8  90D8               	bcf	status,0,c
  3047  0101DA  320E               	rrcf	(??_SHA256_HashBlock+11)^0,f,c
  3048  0101DC  320D               	rrcf	(??_SHA256_HashBlock+10)^0,f,c
  3049  0101DE  320C               	rrcf	(??_SHA256_HashBlock+9)^0,f,c
  3050  0101E0  320B               	rrcf	(??_SHA256_HashBlock+8)^0,f,c
  3051  0101E2                     u420:
  3052  0101E2  2EE8               	decfsz	wreg,f,c
  3053  0101E4  EFEC  F080         	goto	u425
  3054  0101E8  EE2F F3C4          	lfsr	2,-60
  3055  0101EC  51CB               	movf	SHA256_HashBlock@schedulePtr& (0+255),w,b
  3056  0101EE  26D9               	addwf	fsr2l,f,c
  3057  0101F0  51CC               	movf	(SHA256_HashBlock@schedulePtr+1)& (0+255),w,b
  3058  0101F2  22DA               	addwfc	fsr2h,f,c
  3059  0101F4  006F FF78  F00F    	movff	postinc2,??_SHA256_HashBlock+12
  3060  0101FA  006F FF78  F010    	movff	postinc2,??_SHA256_HashBlock+13
  3061  010200  006F FF78  F011    	movff	postinc2,??_SHA256_HashBlock+14
  3062  010206  006F FF78  F012    	movff	postinc2,??_SHA256_HashBlock+15
  3063  01020C  0E0E               	movlw	14
  3064  01020E                     u435:
  3065  01020E  90D8               	bcf	status,0,c
  3066  010210  360F               	rlcf	(??_SHA256_HashBlock+12)^0,f,c
  3067  010212  3610               	rlcf	(??_SHA256_HashBlock+13)^0,f,c
  3068  010214  3611               	rlcf	(??_SHA256_HashBlock+14)^0,f,c
  3069  010216  3612               	rlcf	(??_SHA256_HashBlock+15)^0,f,c
  3070  010218  2EE8               	decfsz	wreg,f,c
  3071  01021A  EF07  F081         	goto	u435
  3072  01021E  EE2F F3C4          	lfsr	2,-60
  3073  010222  51CB               	movf	SHA256_HashBlock@schedulePtr& (0+255),w,b
  3074  010224  26D9               	addwf	fsr2l,f,c
  3075  010226  51CC               	movf	(SHA256_HashBlock@schedulePtr+1)& (0+255),w,b
  3076  010228  22DA               	addwfc	fsr2h,f,c
  3077  01022A  006F FF78  F013    	movff	postinc2,??_SHA256_HashBlock+16
  3078  010230  006F FF78  F014    	movff	postinc2,??_SHA256_HashBlock+17
  3079  010236  006F FF78  F015    	movff	postinc2,??_SHA256_HashBlock+18
  3080  01023C  006F FF78  F016    	movff	postinc2,??_SHA256_HashBlock+19
  3081  010242  0E13               	movlw	19
  3082  010244  EF29  F081         	goto	u440
  3083  010248                     u445:
  3084  010248  90D8               	bcf	status,0,c
  3085  01024A  3216               	rrcf	(??_SHA256_HashBlock+19)^0,f,c
  3086  01024C  3215               	rrcf	(??_SHA256_HashBlock+18)^0,f,c
  3087  01024E  3214               	rrcf	(??_SHA256_HashBlock+17)^0,f,c
  3088  010250  3213               	rrcf	(??_SHA256_HashBlock+16)^0,f,c
  3089  010252                     u440:
  3090  010252  2EE8               	decfsz	wreg,f,c
  3091  010254  EF24  F081         	goto	u445
  3092  010258  500F               	movf	(??_SHA256_HashBlock+12)^0,w,c
  3093  01025A  1013               	iorwf	(??_SHA256_HashBlock+16)^0,w,c
  3094  01025C  6E17               	movwf	(??_SHA256_HashBlock+20)^0,c
  3095  01025E  5010               	movf	(??_SHA256_HashBlock+13)^0,w,c
  3096  010260  1014               	iorwf	(??_SHA256_HashBlock+17)^0,w,c
  3097  010262  6E18               	movwf	(??_SHA256_HashBlock+21)^0,c
  3098  010264  5011               	movf	(??_SHA256_HashBlock+14)^0,w,c
  3099  010266  1015               	iorwf	(??_SHA256_HashBlock+18)^0,w,c
  3100  010268  6E19               	movwf	(??_SHA256_HashBlock+22)^0,c
  3101  01026A  5012               	movf	(??_SHA256_HashBlock+15)^0,w,c
  3102  01026C  1016               	iorwf	(??_SHA256_HashBlock+19)^0,w,c
  3103  01026E  6E1A               	movwf	(??_SHA256_HashBlock+23)^0,c
  3104  010270  EE2F F3C4          	lfsr	2,-60
  3105  010274  51CB               	movf	SHA256_HashBlock@schedulePtr& (0+255),w,b
  3106  010276  26D9               	addwf	fsr2l,f,c
  3107  010278  51CC               	movf	(SHA256_HashBlock@schedulePtr+1)& (0+255),w,b
  3108  01027A  22DA               	addwfc	fsr2h,f,c
  3109  01027C  006F FF78  F01B    	movff	postinc2,??_SHA256_HashBlock+24
  3110  010282  006F FF78  F01C    	movff	postinc2,??_SHA256_HashBlock+25
  3111  010288  006F FF78  F01D    	movff	postinc2,??_SHA256_HashBlock+26
  3112  01028E  006F FF78  F01E    	movff	postinc2,??_SHA256_HashBlock+27
  3113  010294  0E19               	movlw	25
  3114  010296                     u455:
  3115  010296  90D8               	bcf	status,0,c
  3116  010298  361B               	rlcf	(??_SHA256_HashBlock+24)^0,f,c
  3117  01029A  361C               	rlcf	(??_SHA256_HashBlock+25)^0,f,c
  3118  01029C  361D               	rlcf	(??_SHA256_HashBlock+26)^0,f,c
  3119  01029E  361E               	rlcf	(??_SHA256_HashBlock+27)^0,f,c
  3120  0102A0  2EE8               	decfsz	wreg,f,c
  3121  0102A2  EF4B  F081         	goto	u455
  3122  0102A6  EE2F F3C4          	lfsr	2,-60
  3123  0102AA  51CB               	movf	SHA256_HashBlock@schedulePtr& (0+255),w,b
  3124  0102AC  26D9               	addwf	fsr2l,f,c
  3125  0102AE  51CC               	movf	(SHA256_HashBlock@schedulePtr+1)& (0+255),w,b
  3126  0102B0  22DA               	addwfc	fsr2h,f,c
  3127  0102B2  006F FF78  F01F    	movff	postinc2,??_SHA256_HashBlock+28
  3128  0102B8  006F FF78  F020    	movff	postinc2,??_SHA256_HashBlock+29
  3129  0102BE  006F FF78  F021    	movff	postinc2,??_SHA256_HashBlock+30
  3130  0102C4  006F FF78  F022    	movff	postinc2,??_SHA256_HashBlock+31
  3131  0102CA  0E08               	movlw	8
  3132  0102CC  EF6D  F081         	goto	u460
  3133  0102D0                     u465:
  3134  0102D0  90D8               	bcf	status,0,c
  3135  0102D2  3222               	rrcf	(??_SHA256_HashBlock+31)^0,f,c
  3136  0102D4  3221               	rrcf	(??_SHA256_HashBlock+30)^0,f,c
  3137  0102D6  3220               	rrcf	(??_SHA256_HashBlock+29)^0,f,c
  3138  0102D8  321F               	rrcf	(??_SHA256_HashBlock+28)^0,f,c
  3139  0102DA                     u460:
  3140  0102DA  2EE8               	decfsz	wreg,f,c
  3141  0102DC  EF68  F081         	goto	u465
  3142  0102E0  501B               	movf	(??_SHA256_HashBlock+24)^0,w,c
  3143  0102E2  101F               	iorwf	(??_SHA256_HashBlock+28)^0,w,c
  3144  0102E4  6E23               	movwf	(??_SHA256_HashBlock+32)^0,c
  3145  0102E6  501C               	movf	(??_SHA256_HashBlock+25)^0,w,c
  3146  0102E8  1020               	iorwf	(??_SHA256_HashBlock+29)^0,w,c
  3147  0102EA  6E24               	movwf	(??_SHA256_HashBlock+33)^0,c
  3148  0102EC  501D               	movf	(??_SHA256_HashBlock+26)^0,w,c
  3149  0102EE  1021               	iorwf	(??_SHA256_HashBlock+30)^0,w,c
  3150  0102F0  6E25               	movwf	(??_SHA256_HashBlock+34)^0,c
  3151  0102F2  501E               	movf	(??_SHA256_HashBlock+27)^0,w,c
  3152  0102F4  1022               	iorwf	(??_SHA256_HashBlock+31)^0,w,c
  3153  0102F6  6E26               	movwf	(??_SHA256_HashBlock+35)^0,c
  3154  0102F8  5017               	movf	(??_SHA256_HashBlock+20)^0,w,c
  3155  0102FA  1823               	xorwf	(??_SHA256_HashBlock+32)^0,w,c
  3156  0102FC  6E27               	movwf	(??_SHA256_HashBlock+36)^0,c
  3157  0102FE  5018               	movf	(??_SHA256_HashBlock+21)^0,w,c
  3158  010300  1824               	xorwf	(??_SHA256_HashBlock+33)^0,w,c
  3159  010302  6E28               	movwf	(??_SHA256_HashBlock+37)^0,c
  3160  010304  5019               	movf	(??_SHA256_HashBlock+22)^0,w,c
  3161  010306  1825               	xorwf	(??_SHA256_HashBlock+34)^0,w,c
  3162  010308  6E29               	movwf	(??_SHA256_HashBlock+38)^0,c
  3163  01030A  501A               	movf	(??_SHA256_HashBlock+23)^0,w,c
  3164  01030C  1826               	xorwf	(??_SHA256_HashBlock+35)^0,w,c
  3165  01030E  6E2A               	movwf	(??_SHA256_HashBlock+39)^0,c
  3166  010310  500B               	movf	(??_SHA256_HashBlock+8)^0,w,c
  3167  010312  1827               	xorwf	(??_SHA256_HashBlock+36)^0,w,c
  3168  010314  6E2B               	movwf	(??_SHA256_HashBlock+40)^0,c
  3169  010316  500C               	movf	(??_SHA256_HashBlock+9)^0,w,c
  3170  010318  1828               	xorwf	(??_SHA256_HashBlock+37)^0,w,c
  3171  01031A  6E2C               	movwf	(??_SHA256_HashBlock+41)^0,c
  3172  01031C  500D               	movf	(??_SHA256_HashBlock+10)^0,w,c
  3173  01031E  1829               	xorwf	(??_SHA256_HashBlock+38)^0,w,c
  3174  010320  6E2D               	movwf	(??_SHA256_HashBlock+42)^0,c
  3175  010322  500E               	movf	(??_SHA256_HashBlock+11)^0,w,c
  3176  010324  182A               	xorwf	(??_SHA256_HashBlock+39)^0,w,c
  3177  010326  6E2E               	movwf	(??_SHA256_HashBlock+43)^0,c
  3178  010328  EE2F F3F8          	lfsr	2,-8
  3179  01032C  51CB               	movf	SHA256_HashBlock@schedulePtr& (0+255),w,b
  3180  01032E  26D9               	addwf	fsr2l,f,c
  3181  010330  51CC               	movf	(SHA256_HashBlock@schedulePtr+1)& (0+255),w,b
  3182  010332  22DA               	addwfc	fsr2h,f,c
  3183  010334  006F FF78  F02F    	movff	postinc2,??_SHA256_HashBlock+44
  3184  01033A  006F FF78  F030    	movff	postinc2,??_SHA256_HashBlock+45
  3185  010340  006F FF78  F031    	movff	postinc2,??_SHA256_HashBlock+46
  3186  010346  006F FF78  F032    	movff	postinc2,??_SHA256_HashBlock+47
  3187  01034C  0E0B               	movlw	11
  3188  01034E  EFAE  F081         	goto	u470
  3189  010352                     u475:
  3190  010352  90D8               	bcf	status,0,c
  3191  010354  3232               	rrcf	(??_SHA256_HashBlock+47)^0,f,c
  3192  010356  3231               	rrcf	(??_SHA256_HashBlock+46)^0,f,c
  3193  010358  3230               	rrcf	(??_SHA256_HashBlock+45)^0,f,c
  3194  01035A  322F               	rrcf	(??_SHA256_HashBlock+44)^0,f,c
  3195  01035C                     u470:
  3196  01035C  2EE8               	decfsz	wreg,f,c
  3197  01035E  EFA9  F081         	goto	u475
  3198  010362  EE2F F3F8          	lfsr	2,-8
  3199  010366  51CB               	movf	SHA256_HashBlock@schedulePtr& (0+255),w,b
  3200  010368  26D9               	addwf	fsr2l,f,c
  3201  01036A  51CC               	movf	(SHA256_HashBlock@schedulePtr+1)& (0+255),w,b
  3202  01036C  22DA               	addwfc	fsr2h,f,c
  3203  01036E  006F FF78  F033    	movff	postinc2,??_SHA256_HashBlock+48
  3204  010374  006F FF78  F034    	movff	postinc2,??_SHA256_HashBlock+49
  3205  01037A  006F FF78  F035    	movff	postinc2,??_SHA256_HashBlock+50
  3206  010380  006F FF78  F036    	movff	postinc2,??_SHA256_HashBlock+51
  3207  010386  0E0D               	movlw	13
  3208  010388                     u485:
  3209  010388  90D8               	bcf	status,0,c
  3210  01038A  3633               	rlcf	(??_SHA256_HashBlock+48)^0,f,c
  3211  01038C  3634               	rlcf	(??_SHA256_HashBlock+49)^0,f,c
  3212  01038E  3635               	rlcf	(??_SHA256_HashBlock+50)^0,f,c
  3213  010390  3636               	rlcf	(??_SHA256_HashBlock+51)^0,f,c
  3214  010392  2EE8               	decfsz	wreg,f,c
  3215  010394  EFC4  F081         	goto	u485
  3216  010398  EE2F F3F8          	lfsr	2,-8
  3217  01039C  51CB               	movf	SHA256_HashBlock@schedulePtr& (0+255),w,b
  3218  01039E  26D9               	addwf	fsr2l,f,c
  3219  0103A0  51CC               	movf	(SHA256_HashBlock@schedulePtr+1)& (0+255),w,b
  3220  0103A2  22DA               	addwfc	fsr2h,f,c
  3221  0103A4  006F FF78  F037    	movff	postinc2,??_SHA256_HashBlock+52
  3222  0103AA  006F FF78  F038    	movff	postinc2,??_SHA256_HashBlock+53
  3223  0103B0  006F FF78  F039    	movff	postinc2,??_SHA256_HashBlock+54
  3224  0103B6  006F FF78  F03A    	movff	postinc2,??_SHA256_HashBlock+55
  3225  0103BC  0E14               	movlw	20
  3226  0103BE  EFE6  F081         	goto	u490
  3227  0103C2                     u495:
  3228  0103C2  90D8               	bcf	status,0,c
  3229  0103C4  323A               	rrcf	(??_SHA256_HashBlock+55)^0,f,c
  3230  0103C6  3239               	rrcf	(??_SHA256_HashBlock+54)^0,f,c
  3231  0103C8  3238               	rrcf	(??_SHA256_HashBlock+53)^0,f,c
  3232  0103CA  3237               	rrcf	(??_SHA256_HashBlock+52)^0,f,c
  3233  0103CC                     u490:
  3234  0103CC  2EE8               	decfsz	wreg,f,c
  3235  0103CE  EFE1  F081         	goto	u495
  3236  0103D2  5033               	movf	(??_SHA256_HashBlock+48)^0,w,c
  3237  0103D4  1037               	iorwf	(??_SHA256_HashBlock+52)^0,w,c
  3238  0103D6  6E3B               	movwf	(??_SHA256_HashBlock+56)^0,c
  3239  0103D8  5034               	movf	(??_SHA256_HashBlock+49)^0,w,c
  3240  0103DA  1038               	iorwf	(??_SHA256_HashBlock+53)^0,w,c
  3241  0103DC  6E3C               	movwf	(??_SHA256_HashBlock+57)^0,c
  3242  0103DE  5035               	movf	(??_SHA256_HashBlock+50)^0,w,c
  3243  0103E0  1039               	iorwf	(??_SHA256_HashBlock+54)^0,w,c
  3244  0103E2  6E3D               	movwf	(??_SHA256_HashBlock+58)^0,c
  3245  0103E4  5036               	movf	(??_SHA256_HashBlock+51)^0,w,c
  3246  0103E6  103A               	iorwf	(??_SHA256_HashBlock+55)^0,w,c
  3247  0103E8  6E3E               	movwf	(??_SHA256_HashBlock+59)^0,c
  3248  0103EA  EE2F F3F8          	lfsr	2,-8
  3249  0103EE  51CB               	movf	SHA256_HashBlock@schedulePtr& (0+255),w,b
  3250  0103F0  26D9               	addwf	fsr2l,f,c
  3251  0103F2  51CC               	movf	(SHA256_HashBlock@schedulePtr+1)& (0+255),w,b
  3252  0103F4  22DA               	addwfc	fsr2h,f,c
  3253  0103F6  006F FF78  F03F    	movff	postinc2,??_SHA256_HashBlock+60
  3254  0103FC  006F FF78  F040    	movff	postinc2,??_SHA256_HashBlock+61
  3255  010402  006F FF78  F041    	movff	postinc2,??_SHA256_HashBlock+62
  3256  010408  006F FF78  F042    	movff	postinc2,??_SHA256_HashBlock+63
  3257  01040E  0E0F               	movlw	15
  3258  010410                     u505:
  3259  010410  90D8               	bcf	status,0,c
  3260  010412  363F               	rlcf	(??_SHA256_HashBlock+60)^0,f,c
  3261  010414  3640               	rlcf	(??_SHA256_HashBlock+61)^0,f,c
  3262  010416  3641               	rlcf	(??_SHA256_HashBlock+62)^0,f,c
  3263  010418  3642               	rlcf	(??_SHA256_HashBlock+63)^0,f,c
  3264  01041A  2EE8               	decfsz	wreg,f,c
  3265  01041C  EF08  F082         	goto	u505
  3266  010420  EE2F F3F8          	lfsr	2,-8
  3267  010424  51CB               	movf	SHA256_HashBlock@schedulePtr& (0+255),w,b
  3268  010426  26D9               	addwf	fsr2l,f,c
  3269  010428  51CC               	movf	(SHA256_HashBlock@schedulePtr+1)& (0+255),w,b
  3270  01042A  22DA               	addwfc	fsr2h,f,c
  3271  01042C  006F FF78  F043    	movff	postinc2,??_SHA256_HashBlock+64
  3272  010432  006F FF78  F044    	movff	postinc2,??_SHA256_HashBlock+65
  3273  010438  006F FF78  F045    	movff	postinc2,??_SHA256_HashBlock+66
  3274  01043E  006F FF78  F046    	movff	postinc2,??_SHA256_HashBlock+67
  3275  010444  0E12               	movlw	18
  3276  010446  EF2A  F082         	goto	u510
  3277  01044A                     u515:
  3278  01044A  90D8               	bcf	status,0,c
  3279  01044C  3246               	rrcf	(??_SHA256_HashBlock+67)^0,f,c
  3280  01044E  3245               	rrcf	(??_SHA256_HashBlock+66)^0,f,c
  3281  010450  3244               	rrcf	(??_SHA256_HashBlock+65)^0,f,c
  3282  010452  3243               	rrcf	(??_SHA256_HashBlock+64)^0,f,c
  3283  010454                     u510:
  3284  010454  2EE8               	decfsz	wreg,f,c
  3285  010456  EF25  F082         	goto	u515
  3286  01045A  503F               	movf	(??_SHA256_HashBlock+60)^0,w,c
  3287  01045C  1043               	iorwf	(??_SHA256_HashBlock+64)^0,w,c
  3288  01045E  6E47               	movwf	(??_SHA256_HashBlock+68)^0,c
  3289  010460  5040               	movf	(??_SHA256_HashBlock+61)^0,w,c
  3290  010462  1044               	iorwf	(??_SHA256_HashBlock+65)^0,w,c
  3291  010464  6E48               	movwf	(??_SHA256_HashBlock+69)^0,c
  3292  010466  5041               	movf	(??_SHA256_HashBlock+62)^0,w,c
  3293  010468  1045               	iorwf	(??_SHA256_HashBlock+66)^0,w,c
  3294  01046A  6E49               	movwf	(??_SHA256_HashBlock+70)^0,c
  3295  01046C  5042               	movf	(??_SHA256_HashBlock+63)^0,w,c
  3296  01046E  1046               	iorwf	(??_SHA256_HashBlock+67)^0,w,c
  3297  010470  6E4A               	movwf	(??_SHA256_HashBlock+71)^0,c
  3298  010472  503B               	movf	(??_SHA256_HashBlock+56)^0,w,c
  3299  010474  1847               	xorwf	(??_SHA256_HashBlock+68)^0,w,c
  3300  010476  6E4B               	movwf	(??_SHA256_HashBlock+72)^0,c
  3301  010478  503C               	movf	(??_SHA256_HashBlock+57)^0,w,c
  3302  01047A  1848               	xorwf	(??_SHA256_HashBlock+69)^0,w,c
  3303  01047C  6E4C               	movwf	(??_SHA256_HashBlock+73)^0,c
  3304  01047E  503D               	movf	(??_SHA256_HashBlock+58)^0,w,c
  3305  010480  1849               	xorwf	(??_SHA256_HashBlock+70)^0,w,c
  3306  010482  6E4D               	movwf	(??_SHA256_HashBlock+74)^0,c
  3307  010484  503E               	movf	(??_SHA256_HashBlock+59)^0,w,c
  3308  010486  184A               	xorwf	(??_SHA256_HashBlock+71)^0,w,c
  3309  010488  6E4E               	movwf	(??_SHA256_HashBlock+75)^0,c
  3310  01048A  502F               	movf	(??_SHA256_HashBlock+44)^0,w,c
  3311  01048C  184B               	xorwf	(??_SHA256_HashBlock+72)^0,w,c
  3312  01048E  6E4F               	movwf	(??_SHA256_HashBlock+76)^0,c
  3313  010490  5030               	movf	(??_SHA256_HashBlock+45)^0,w,c
  3314  010492  184C               	xorwf	(??_SHA256_HashBlock+73)^0,w,c
  3315  010494  6E50               	movwf	(??_SHA256_HashBlock+77)^0,c
  3316  010496  5031               	movf	(??_SHA256_HashBlock+46)^0,w,c
  3317  010498  184D               	xorwf	(??_SHA256_HashBlock+74)^0,w,c
  3318  01049A  6E51               	movwf	(??_SHA256_HashBlock+78)^0,c
  3319  01049C  5032               	movf	(??_SHA256_HashBlock+47)^0,w,c
  3320  01049E  184E               	xorwf	(??_SHA256_HashBlock+75)^0,w,c
  3321  0104A0  6E52               	movwf	(??_SHA256_HashBlock+79)^0,c
  3322  0104A2  502B               	movf	(??_SHA256_HashBlock+40)^0,w,c
  3323  0104A4  244F               	addwf	(??_SHA256_HashBlock+76)^0,w,c
  3324  0104A6  6E53               	movwf	(??_SHA256_HashBlock+80)^0,c
  3325  0104A8  502C               	movf	(??_SHA256_HashBlock+41)^0,w,c
  3326  0104AA  2050               	addwfc	(??_SHA256_HashBlock+77)^0,w,c
  3327  0104AC  6E54               	movwf	(??_SHA256_HashBlock+81)^0,c
  3328  0104AE  502D               	movf	(??_SHA256_HashBlock+42)^0,w,c
  3329  0104B0  2051               	addwfc	(??_SHA256_HashBlock+78)^0,w,c
  3330  0104B2  6E55               	movwf	(??_SHA256_HashBlock+82)^0,c
  3331  0104B4  502E               	movf	(??_SHA256_HashBlock+43)^0,w,c
  3332  0104B6  2052               	addwfc	(??_SHA256_HashBlock+79)^0,w,c
  3333  0104B8  6E56               	movwf	(??_SHA256_HashBlock+83)^0,c
  3334  0104BA  5007               	movf	(??_SHA256_HashBlock+4)^0,w,c
  3335  0104BC  2453               	addwf	(??_SHA256_HashBlock+80)^0,w,c
  3336  0104BE  6E57               	movwf	(??_SHA256_HashBlock+84)^0,c
  3337  0104C0  5008               	movf	(??_SHA256_HashBlock+5)^0,w,c
  3338  0104C2  2054               	addwfc	(??_SHA256_HashBlock+81)^0,w,c
  3339  0104C4  6E58               	movwf	(??_SHA256_HashBlock+85)^0,c
  3340  0104C6  5009               	movf	(??_SHA256_HashBlock+6)^0,w,c
  3341  0104C8  2055               	addwfc	(??_SHA256_HashBlock+82)^0,w,c
  3342  0104CA  6E59               	movwf	(??_SHA256_HashBlock+86)^0,c
  3343  0104CC  500A               	movf	(??_SHA256_HashBlock+7)^0,w,c
  3344  0104CE  2056               	addwfc	(??_SHA256_HashBlock+83)^0,w,c
  3345  0104D0  6E5A               	movwf	(??_SHA256_HashBlock+87)^0,c
  3346  0104D2  5003               	movf	??_SHA256_HashBlock^0,w,c
  3347  0104D4  2457               	addwf	(??_SHA256_HashBlock+84)^0,w,c
  3348  0104D6  6E5B               	movwf	(??_SHA256_HashBlock+88)^0,c
  3349  0104D8  5004               	movf	(??_SHA256_HashBlock+1)^0,w,c
  3350  0104DA  2058               	addwfc	(??_SHA256_HashBlock+85)^0,w,c
  3351  0104DC  6E5C               	movwf	(??_SHA256_HashBlock+89)^0,c
  3352  0104DE  5005               	movf	(??_SHA256_HashBlock+2)^0,w,c
  3353  0104E0  2059               	addwfc	(??_SHA256_HashBlock+86)^0,w,c
  3354  0104E2  6E5D               	movwf	(??_SHA256_HashBlock+90)^0,c
  3355  0104E4  5006               	movf	(??_SHA256_HashBlock+3)^0,w,c
  3356  0104E6  205A               	addwfc	(??_SHA256_HashBlock+87)^0,w,c
  3357  0104E8  6E5E               	movwf	(??_SHA256_HashBlock+91)^0,c
  3358  0104EA  0060  F32F  FFD9   	movff	SHA256_HashBlock@schedulePtr,fsr2l
  3359  0104F0  0060  F333  FFDA   	movff	SHA256_HashBlock@schedulePtr+1,fsr2h
  3360  0104F6  0060  F16F  FFDE   	movff	??_SHA256_HashBlock+88,postinc2
  3361  0104FC  0060  F173  FFDE   	movff	??_SHA256_HashBlock+89,postinc2
  3362  010502  0060  F177  FFDE   	movff	??_SHA256_HashBlock+90,postinc2
  3363  010508  0060  F17B  FFDE   	movff	??_SHA256_HashBlock+91,postinc2
  3364  01050E                     
  3365                           ; BSR set to: 0
  3366                           ;sha256.c: 200:     }
  3367  01050E  2BCA               	incf	SHA256_HashBlock@i& (0+255),f,b
  3368  010510                     
  3369                           ; BSR set to: 0
  3370  010510  0E3F               	movlw	63
  3371  010512  65CA               	cpfsgt	SHA256_HashBlock@i& (0+255),b
  3372  010514  EF8E  F082         	goto	u521
  3373  010518  EF90  F082         	goto	u520
  3374  01051C                     u521:
  3375  01051C  EF98  F080         	goto	l1278
  3376  010520                     u520:
  3377  010520                     
  3378                           ; BSR set to: 0
  3379                           ;sha256.c: 203:     a = context->h[0];
  3380  010520  0060  F007  FFD9   	movff	SHA256_HashBlock@context,fsr2l
  3381  010526  0060  F00B  FFDA   	movff	SHA256_HashBlock@context+1,fsr2h
  3382  01052C  006F FF78  F0C2    	movff	postinc2,SHA256_HashBlock@a
  3383  010532  006F FF78  F0C3    	movff	postinc2,SHA256_HashBlock@a+1
  3384  010538  006F FF78  F0C4    	movff	postinc2,SHA256_HashBlock@a+2
  3385  01053E  006F FF78  F0C5    	movff	postinc2,SHA256_HashBlock@a+3
  3386  010544                     
  3387                           ; BSR set to: 0
  3388                           ;sha256.c: 204:     b = context->h[1];
  3389  010544  EE20 F004          	lfsr	2,4
  3390  010548  5001               	movf	SHA256_HashBlock@context^0,w,c
  3391  01054A  26D9               	addwf	fsr2l,f,c
  3392  01054C  5002               	movf	(SHA256_HashBlock@context+1)^0,w,c
  3393  01054E  22DA               	addwfc	fsr2h,f,c
  3394  010550  006F FF78  F0B4    	movff	postinc2,SHA256_HashBlock@b
  3395  010556  006F FF78  F0B5    	movff	postinc2,SHA256_HashBlock@b+1
  3396  01055C  006F FF78  F0B6    	movff	postinc2,SHA256_HashBlock@b+2
  3397  010562  006F FF78  F0B7    	movff	postinc2,SHA256_HashBlock@b+3
  3398  010568                     
  3399                           ; BSR set to: 0
  3400                           ;sha256.c: 205:     c = context->h[2];
  3401  010568  EE20 F008          	lfsr	2,8
  3402  01056C  5001               	movf	SHA256_HashBlock@context^0,w,c
  3403  01056E  26D9               	addwf	fsr2l,f,c
  3404  010570  5002               	movf	(SHA256_HashBlock@context+1)^0,w,c
  3405  010572  22DA               	addwfc	fsr2h,f,c
  3406  010574  006F FF78  F0B8    	movff	postinc2,SHA256_HashBlock@c
  3407  01057A  006F FF78  F0B9    	movff	postinc2,SHA256_HashBlock@c+1
  3408  010580  006F FF78  F0BA    	movff	postinc2,SHA256_HashBlock@c+2
  3409  010586  006F FF78  F0BB    	movff	postinc2,SHA256_HashBlock@c+3
  3410  01058C                     
  3411                           ; BSR set to: 0
  3412                           ;sha256.c: 206:     d = context->h[3];
  3413  01058C  EE20 F00C          	lfsr	2,12
  3414  010590  5001               	movf	SHA256_HashBlock@context^0,w,c
  3415  010592  26D9               	addwf	fsr2l,f,c
  3416  010594  5002               	movf	(SHA256_HashBlock@context+1)^0,w,c
  3417  010596  22DA               	addwfc	fsr2h,f,c
  3418  010598  006F FF78  F0A4    	movff	postinc2,SHA256_HashBlock@d
  3419  01059E  006F FF78  F0A5    	movff	postinc2,SHA256_HashBlock@d+1
  3420  0105A4  006F FF78  F0A6    	movff	postinc2,SHA256_HashBlock@d+2
  3421  0105AA  006F FF78  F0A7    	movff	postinc2,SHA256_HashBlock@d+3
  3422  0105B0                     
  3423                           ; BSR set to: 0
  3424                           ;sha256.c: 207:     e = context->h[4];
  3425  0105B0  EE20 F010          	lfsr	2,16
  3426  0105B4  5001               	movf	SHA256_HashBlock@context^0,w,c
  3427  0105B6  26D9               	addwf	fsr2l,f,c
  3428  0105B8  5002               	movf	(SHA256_HashBlock@context+1)^0,w,c
  3429  0105BA  22DA               	addwfc	fsr2h,f,c
  3430  0105BC  006F FF78  F0C6    	movff	postinc2,SHA256_HashBlock@e
  3431  0105C2  006F FF78  F0C7    	movff	postinc2,SHA256_HashBlock@e+1
  3432  0105C8  006F FF78  F0C8    	movff	postinc2,SHA256_HashBlock@e+2
  3433  0105CE  006F FF78  F0C9    	movff	postinc2,SHA256_HashBlock@e+3
  3434  0105D4                     
  3435                           ; BSR set to: 0
  3436                           ;sha256.c: 208:     f = context->h[5];
  3437  0105D4  EE20 F014          	lfsr	2,20
  3438  0105D8  5001               	movf	SHA256_HashBlock@context^0,w,c
  3439  0105DA  26D9               	addwf	fsr2l,f,c
  3440  0105DC  5002               	movf	(SHA256_HashBlock@context+1)^0,w,c
  3441  0105DE  22DA               	addwfc	fsr2h,f,c
  3442  0105E0  006F FF78  F0AC    	movff	postinc2,SHA256_HashBlock@f
  3443  0105E6  006F FF78  F0AD    	movff	postinc2,SHA256_HashBlock@f+1
  3444  0105EC  006F FF78  F0AE    	movff	postinc2,SHA256_HashBlock@f+2
  3445  0105F2  006F FF78  F0AF    	movff	postinc2,SHA256_HashBlock@f+3
  3446  0105F8                     
  3447                           ; BSR set to: 0
  3448                           ;sha256.c: 209:     g = context->h[6];
  3449  0105F8  EE20 F018          	lfsr	2,24
  3450  0105FC  5001               	movf	SHA256_HashBlock@context^0,w,c
  3451  0105FE  26D9               	addwf	fsr2l,f,c
  3452  010600  5002               	movf	(SHA256_HashBlock@context+1)^0,w,c
  3453  010602  22DA               	addwfc	fsr2h,f,c
  3454  010604  006F FF78  F0B0    	movff	postinc2,SHA256_HashBlock@g
  3455  01060A  006F FF78  F0B1    	movff	postinc2,SHA256_HashBlock@g+1
  3456  010610  006F FF78  F0B2    	movff	postinc2,SHA256_HashBlock@g+2
  3457  010616  006F FF78  F0B3    	movff	postinc2,SHA256_HashBlock@g+3
  3458  01061C                     
  3459                           ; BSR set to: 0
  3460                           ;sha256.c: 210:     h = context->h[7];
  3461  01061C  EE20 F01C          	lfsr	2,28
  3462  010620  5001               	movf	SHA256_HashBlock@context^0,w,c
  3463  010622  26D9               	addwf	fsr2l,f,c
  3464  010624  5002               	movf	(SHA256_HashBlock@context+1)^0,w,c
  3465  010626  22DA               	addwfc	fsr2h,f,c
  3466  010628  006F FF78  F0A8    	movff	postinc2,SHA256_HashBlock@h
  3467  01062E  006F FF78  F0A9    	movff	postinc2,SHA256_HashBlock@h+1
  3468  010634  006F FF78  F0AA    	movff	postinc2,SHA256_HashBlock@h+2
  3469  01063A  006F FF78  F0AB    	movff	postinc2,SHA256_HashBlock@h+3
  3470  010640                     
  3471                           ; BSR set to: 0
  3472                           ;sha256.c: 212:     schedulePtr = context->workingBuffer;
  3473  010640  EE20 F064          	lfsr	2,100
  3474  010644  5001               	movf	SHA256_HashBlock@context^0,w,c
  3475  010646  26D9               	addwf	fsr2l,f,c
  3476  010648  5002               	movf	(SHA256_HashBlock@context+1)^0,w,c
  3477  01064A  22DA               	addwfc	fsr2h,f,c
  3478  01064C  006F FF78  F0CB    	movff	postinc2,SHA256_HashBlock@schedulePtr
  3479  010652  006F FF74  F0CC    	movff	postdec2,SHA256_HashBlock@schedulePtr+1
  3480  010658                     
  3481                           ; BSR set to: 0
  3482                           ;sha256.c: 213:     for (i = 0; i < 64; i++)
  3483  010658  0E00               	movlw	0
  3484  01065A  6FCA               	movwf	SHA256_HashBlock@i& (0+255),b
  3485  01065C                     l1308:
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;sha256.c: 214:     {;sha256.c: 223:         t1 = h + (((e >> 6) | (e << (32-6))) ^ ((e 
      +                          >> 11) | (e << (32-11))) ^ ((e >> 25) | (e << (32-25)))) + ((e & f) ^ ((~e) & g)) + SHA2
      +                          56_K[i] + *(schedulePtr + i);
  3489  01065C  51CA               	movf	SHA256_HashBlock@i& (0+255),w,b
  3490  01065E  6E03               	movwf	??_SHA256_HashBlock^0,c
  3491  010660  6A04               	clrf	(??_SHA256_HashBlock+1)^0,c
  3492  010662  90D8               	bcf	status,0,c
  3493  010664  3603               	rlcf	??_SHA256_HashBlock^0,f,c
  3494  010666  3604               	rlcf	(??_SHA256_HashBlock+1)^0,f,c
  3495  010668  90D8               	bcf	status,0,c
  3496  01066A  3603               	rlcf	??_SHA256_HashBlock^0,f,c
  3497  01066C  3604               	rlcf	(??_SHA256_HashBlock+1)^0,f,c
  3498  01066E  5003               	movf	??_SHA256_HashBlock^0,w,c
  3499  010670  25CB               	addwf	SHA256_HashBlock@schedulePtr& (0+255),w,b
  3500  010672  6ED9               	movwf	fsr2l,c
  3501  010674  5004               	movf	(??_SHA256_HashBlock+1)^0,w,c
  3502  010676  21CC               	addwfc	(SHA256_HashBlock@schedulePtr+1)& (0+255),w,b
  3503  010678  6EDA               	movwf	fsr2h,c
  3504  01067A  006F FF78  F005    	movff	postinc2,??_SHA256_HashBlock+2
  3505  010680  006F FF78  F006    	movff	postinc2,??_SHA256_HashBlock+3
  3506  010686  006F FF78  F007    	movff	postinc2,??_SHA256_HashBlock+4
  3507  01068C  006F FF78  F008    	movff	postinc2,??_SHA256_HashBlock+5
  3508  010692  51CA               	movf	SHA256_HashBlock@i& (0+255),w,b
  3509  010694  0D04               	mullw	4
  3510  010696  0EC5               	movlw	low _SHA256_K
  3511  010698  24F3               	addwf	243,w,c
  3512  01069A  6EF6               	movwf	tblptrl,c
  3513  01069C  0EFC               	movlw	high _SHA256_K
  3514  01069E  20F4               	addwfc	244,w,c
  3515  0106A0  6EF7               	movwf	tblptrh,c
  3516  0106A2                     	if	0	;There are less than 3 active tblptr bytes
  3517  0106A2                     	endif
  3518  0106A2  0009               	tblrd		*+
  3519  0106A4  006F FFD4  F009    	movff	tablat,??_SHA256_HashBlock+6
  3520  0106AA  0009               	tblrd		*+
  3521  0106AC  006F FFD4  F00A    	movff	tablat,??_SHA256_HashBlock+7
  3522  0106B2  0009               	tblrd		*+
  3523  0106B4  006F FFD4  F00B    	movff	tablat,??_SHA256_HashBlock+8
  3524  0106BA  0009               	tblrd		*+
  3525  0106BC  006F FFD4  F00C    	movff	tablat,??_SHA256_HashBlock+9
  3526  0106C2  1DC6               	comf	SHA256_HashBlock@e& (0+255),w,b
  3527  0106C4  6E0D               	movwf	(??_SHA256_HashBlock+10)^0,c
  3528  0106C6  1DC7               	comf	(SHA256_HashBlock@e+1)& (0+255),w,b
  3529  0106C8  6E0E               	movwf	(??_SHA256_HashBlock+11)^0,c
  3530  0106CA  1DC8               	comf	(SHA256_HashBlock@e+2)& (0+255),w,b
  3531  0106CC  6E0F               	movwf	(??_SHA256_HashBlock+12)^0,c
  3532  0106CE  1DC9               	comf	(SHA256_HashBlock@e+3)& (0+255),w,b
  3533  0106D0  6E10               	movwf	(??_SHA256_HashBlock+13)^0,c
  3534  0106D2  51B0               	movf	SHA256_HashBlock@g& (0+255),w,b
  3535  0106D4  140D               	andwf	(??_SHA256_HashBlock+10)^0,w,c
  3536  0106D6  6E11               	movwf	(??_SHA256_HashBlock+14)^0,c
  3537  0106D8  51B1               	movf	(SHA256_HashBlock@g+1)& (0+255),w,b
  3538  0106DA  140E               	andwf	(??_SHA256_HashBlock+11)^0,w,c
  3539  0106DC  6E12               	movwf	(??_SHA256_HashBlock+15)^0,c
  3540  0106DE  51B2               	movf	(SHA256_HashBlock@g+2)& (0+255),w,b
  3541  0106E0  140F               	andwf	(??_SHA256_HashBlock+12)^0,w,c
  3542  0106E2  6E13               	movwf	(??_SHA256_HashBlock+16)^0,c
  3543  0106E4  51B3               	movf	(SHA256_HashBlock@g+3)& (0+255),w,b
  3544  0106E6  1410               	andwf	(??_SHA256_HashBlock+13)^0,w,c
  3545  0106E8  6E14               	movwf	(??_SHA256_HashBlock+17)^0,c
  3546  0106EA  51AC               	movf	SHA256_HashBlock@f& (0+255),w,b
  3547  0106EC  15C6               	andwf	SHA256_HashBlock@e& (0+255),w,b
  3548  0106EE  6E15               	movwf	(??_SHA256_HashBlock+18)^0,c
  3549  0106F0  51AD               	movf	(SHA256_HashBlock@f+1)& (0+255),w,b
  3550  0106F2  15C7               	andwf	(SHA256_HashBlock@e+1)& (0+255),w,b
  3551  0106F4  6E16               	movwf	(??_SHA256_HashBlock+19)^0,c
  3552  0106F6  51AE               	movf	(SHA256_HashBlock@f+2)& (0+255),w,b
  3553  0106F8  15C8               	andwf	(SHA256_HashBlock@e+2)& (0+255),w,b
  3554  0106FA  6E17               	movwf	(??_SHA256_HashBlock+20)^0,c
  3555  0106FC  51AF               	movf	(SHA256_HashBlock@f+3)& (0+255),w,b
  3556  0106FE  15C9               	andwf	(SHA256_HashBlock@e+3)& (0+255),w,b
  3557  010700  6E18               	movwf	(??_SHA256_HashBlock+21)^0,c
  3558  010702  5011               	movf	(??_SHA256_HashBlock+14)^0,w,c
  3559  010704  1815               	xorwf	(??_SHA256_HashBlock+18)^0,w,c
  3560  010706  6E19               	movwf	(??_SHA256_HashBlock+22)^0,c
  3561  010708  5012               	movf	(??_SHA256_HashBlock+15)^0,w,c
  3562  01070A  1816               	xorwf	(??_SHA256_HashBlock+19)^0,w,c
  3563  01070C  6E1A               	movwf	(??_SHA256_HashBlock+23)^0,c
  3564  01070E  5013               	movf	(??_SHA256_HashBlock+16)^0,w,c
  3565  010710  1817               	xorwf	(??_SHA256_HashBlock+20)^0,w,c
  3566  010712  6E1B               	movwf	(??_SHA256_HashBlock+24)^0,c
  3567  010714  5014               	movf	(??_SHA256_HashBlock+17)^0,w,c
  3568  010716  1818               	xorwf	(??_SHA256_HashBlock+21)^0,w,c
  3569  010718  6E1C               	movwf	(??_SHA256_HashBlock+25)^0,c
  3570  01071A  0060  F318  F01D   	movff	SHA256_HashBlock@e,??_SHA256_HashBlock+26
  3571  010720  0060  F31C  F01E   	movff	SHA256_HashBlock@e+1,??_SHA256_HashBlock+27
  3572  010726  0060  F320  F01F   	movff	SHA256_HashBlock@e+2,??_SHA256_HashBlock+28
  3573  01072C  0060  F324  F020   	movff	SHA256_HashBlock@e+3,??_SHA256_HashBlock+29
  3574  010732  0E07               	movlw	7
  3575  010734                     u535:
  3576  010734  90D8               	bcf	status,0,c
  3577  010736  361D               	rlcf	(??_SHA256_HashBlock+26)^0,f,c
  3578  010738  361E               	rlcf	(??_SHA256_HashBlock+27)^0,f,c
  3579  01073A  361F               	rlcf	(??_SHA256_HashBlock+28)^0,f,c
  3580  01073C  3620               	rlcf	(??_SHA256_HashBlock+29)^0,f,c
  3581  01073E  2EE8               	decfsz	wreg,f,c
  3582  010740  EF9A  F083         	goto	u535
  3583  010744  0060  F318  F021   	movff	SHA256_HashBlock@e,??_SHA256_HashBlock+30
  3584  01074A  0060  F31C  F022   	movff	SHA256_HashBlock@e+1,??_SHA256_HashBlock+31
  3585  010750  0060  F320  F023   	movff	SHA256_HashBlock@e+2,??_SHA256_HashBlock+32
  3586  010756  0060  F324  F024   	movff	SHA256_HashBlock@e+3,??_SHA256_HashBlock+33
  3587  01075C  0E1A               	movlw	26
  3588  01075E  EFB6  F083         	goto	u540
  3589  010762                     u545:
  3590  010762  90D8               	bcf	status,0,c
  3591  010764  3224               	rrcf	(??_SHA256_HashBlock+33)^0,f,c
  3592  010766  3223               	rrcf	(??_SHA256_HashBlock+32)^0,f,c
  3593  010768  3222               	rrcf	(??_SHA256_HashBlock+31)^0,f,c
  3594  01076A  3221               	rrcf	(??_SHA256_HashBlock+30)^0,f,c
  3595  01076C                     u540:
  3596  01076C  2EE8               	decfsz	wreg,f,c
  3597  01076E  EFB1  F083         	goto	u545
  3598  010772  501D               	movf	(??_SHA256_HashBlock+26)^0,w,c
  3599  010774  1021               	iorwf	(??_SHA256_HashBlock+30)^0,w,c
  3600  010776  6E25               	movwf	(??_SHA256_HashBlock+34)^0,c
  3601  010778  501E               	movf	(??_SHA256_HashBlock+27)^0,w,c
  3602  01077A  1022               	iorwf	(??_SHA256_HashBlock+31)^0,w,c
  3603  01077C  6E26               	movwf	(??_SHA256_HashBlock+35)^0,c
  3604  01077E  501F               	movf	(??_SHA256_HashBlock+28)^0,w,c
  3605  010780  1023               	iorwf	(??_SHA256_HashBlock+32)^0,w,c
  3606  010782  6E27               	movwf	(??_SHA256_HashBlock+36)^0,c
  3607  010784  5020               	movf	(??_SHA256_HashBlock+29)^0,w,c
  3608  010786  1024               	iorwf	(??_SHA256_HashBlock+33)^0,w,c
  3609  010788  6E28               	movwf	(??_SHA256_HashBlock+37)^0,c
  3610  01078A  0060  F318  F029   	movff	SHA256_HashBlock@e,??_SHA256_HashBlock+38
  3611  010790  0060  F31C  F02A   	movff	SHA256_HashBlock@e+1,??_SHA256_HashBlock+39
  3612  010796  0060  F320  F02B   	movff	SHA256_HashBlock@e+2,??_SHA256_HashBlock+40
  3613  01079C  0060  F324  F02C   	movff	SHA256_HashBlock@e+3,??_SHA256_HashBlock+41
  3614  0107A2  0E15               	movlw	21
  3615  0107A4                     u555:
  3616  0107A4  90D8               	bcf	status,0,c
  3617  0107A6  3629               	rlcf	(??_SHA256_HashBlock+38)^0,f,c
  3618  0107A8  362A               	rlcf	(??_SHA256_HashBlock+39)^0,f,c
  3619  0107AA  362B               	rlcf	(??_SHA256_HashBlock+40)^0,f,c
  3620  0107AC  362C               	rlcf	(??_SHA256_HashBlock+41)^0,f,c
  3621  0107AE  2EE8               	decfsz	wreg,f,c
  3622  0107B0  EFD2  F083         	goto	u555
  3623  0107B4  0060  F318  F02D   	movff	SHA256_HashBlock@e,??_SHA256_HashBlock+42
  3624  0107BA  0060  F31C  F02E   	movff	SHA256_HashBlock@e+1,??_SHA256_HashBlock+43
  3625  0107C0  0060  F320  F02F   	movff	SHA256_HashBlock@e+2,??_SHA256_HashBlock+44
  3626  0107C6  0060  F324  F030   	movff	SHA256_HashBlock@e+3,??_SHA256_HashBlock+45
  3627  0107CC  0E0C               	movlw	12
  3628  0107CE  EFEE  F083         	goto	u560
  3629  0107D2                     u565:
  3630  0107D2  90D8               	bcf	status,0,c
  3631  0107D4  3230               	rrcf	(??_SHA256_HashBlock+45)^0,f,c
  3632  0107D6  322F               	rrcf	(??_SHA256_HashBlock+44)^0,f,c
  3633  0107D8  322E               	rrcf	(??_SHA256_HashBlock+43)^0,f,c
  3634  0107DA  322D               	rrcf	(??_SHA256_HashBlock+42)^0,f,c
  3635  0107DC                     u560:
  3636  0107DC  2EE8               	decfsz	wreg,f,c
  3637  0107DE  EFE9  F083         	goto	u565
  3638  0107E2  5029               	movf	(??_SHA256_HashBlock+38)^0,w,c
  3639  0107E4  102D               	iorwf	(??_SHA256_HashBlock+42)^0,w,c
  3640  0107E6  6E31               	movwf	(??_SHA256_HashBlock+46)^0,c
  3641  0107E8  502A               	movf	(??_SHA256_HashBlock+39)^0,w,c
  3642  0107EA  102E               	iorwf	(??_SHA256_HashBlock+43)^0,w,c
  3643  0107EC  6E32               	movwf	(??_SHA256_HashBlock+47)^0,c
  3644  0107EE  502B               	movf	(??_SHA256_HashBlock+40)^0,w,c
  3645  0107F0  102F               	iorwf	(??_SHA256_HashBlock+44)^0,w,c
  3646  0107F2  6E33               	movwf	(??_SHA256_HashBlock+48)^0,c
  3647  0107F4  502C               	movf	(??_SHA256_HashBlock+41)^0,w,c
  3648  0107F6  1030               	iorwf	(??_SHA256_HashBlock+45)^0,w,c
  3649  0107F8  6E34               	movwf	(??_SHA256_HashBlock+49)^0,c
  3650  0107FA  0060  F318  F035   	movff	SHA256_HashBlock@e,??_SHA256_HashBlock+50
  3651  010800  0060  F31C  F036   	movff	SHA256_HashBlock@e+1,??_SHA256_HashBlock+51
  3652  010806  0060  F320  F037   	movff	SHA256_HashBlock@e+2,??_SHA256_HashBlock+52
  3653  01080C  0060  F324  F038   	movff	SHA256_HashBlock@e+3,??_SHA256_HashBlock+53
  3654  010812  0E1A               	movlw	26
  3655  010814                     u575:
  3656  010814  90D8               	bcf	status,0,c
  3657  010816  3635               	rlcf	(??_SHA256_HashBlock+50)^0,f,c
  3658  010818  3636               	rlcf	(??_SHA256_HashBlock+51)^0,f,c
  3659  01081A  3637               	rlcf	(??_SHA256_HashBlock+52)^0,f,c
  3660  01081C  3638               	rlcf	(??_SHA256_HashBlock+53)^0,f,c
  3661  01081E  2EE8               	decfsz	wreg,f,c
  3662  010820  EF0A  F084         	goto	u575
  3663  010824  0060  F318  F039   	movff	SHA256_HashBlock@e,??_SHA256_HashBlock+54
  3664  01082A  0060  F31C  F03A   	movff	SHA256_HashBlock@e+1,??_SHA256_HashBlock+55
  3665  010830  0060  F320  F03B   	movff	SHA256_HashBlock@e+2,??_SHA256_HashBlock+56
  3666  010836  0060  F324  F03C   	movff	SHA256_HashBlock@e+3,??_SHA256_HashBlock+57
  3667  01083C  0E07               	movlw	7
  3668  01083E  EF26  F084         	goto	u580
  3669  010842                     u585:
  3670  010842  90D8               	bcf	status,0,c
  3671  010844  323C               	rrcf	(??_SHA256_HashBlock+57)^0,f,c
  3672  010846  323B               	rrcf	(??_SHA256_HashBlock+56)^0,f,c
  3673  010848  323A               	rrcf	(??_SHA256_HashBlock+55)^0,f,c
  3674  01084A  3239               	rrcf	(??_SHA256_HashBlock+54)^0,f,c
  3675  01084C                     u580:
  3676  01084C  2EE8               	decfsz	wreg,f,c
  3677  01084E  EF21  F084         	goto	u585
  3678  010852  5035               	movf	(??_SHA256_HashBlock+50)^0,w,c
  3679  010854  1039               	iorwf	(??_SHA256_HashBlock+54)^0,w,c
  3680  010856  6E3D               	movwf	(??_SHA256_HashBlock+58)^0,c
  3681  010858  5036               	movf	(??_SHA256_HashBlock+51)^0,w,c
  3682  01085A  103A               	iorwf	(??_SHA256_HashBlock+55)^0,w,c
  3683  01085C  6E3E               	movwf	(??_SHA256_HashBlock+59)^0,c
  3684  01085E  5037               	movf	(??_SHA256_HashBlock+52)^0,w,c
  3685  010860  103B               	iorwf	(??_SHA256_HashBlock+56)^0,w,c
  3686  010862  6E3F               	movwf	(??_SHA256_HashBlock+60)^0,c
  3687  010864  5038               	movf	(??_SHA256_HashBlock+53)^0,w,c
  3688  010866  103C               	iorwf	(??_SHA256_HashBlock+57)^0,w,c
  3689  010868  6E40               	movwf	(??_SHA256_HashBlock+61)^0,c
  3690  01086A  5031               	movf	(??_SHA256_HashBlock+46)^0,w,c
  3691  01086C  183D               	xorwf	(??_SHA256_HashBlock+58)^0,w,c
  3692  01086E  6E41               	movwf	(??_SHA256_HashBlock+62)^0,c
  3693  010870  5032               	movf	(??_SHA256_HashBlock+47)^0,w,c
  3694  010872  183E               	xorwf	(??_SHA256_HashBlock+59)^0,w,c
  3695  010874  6E42               	movwf	(??_SHA256_HashBlock+63)^0,c
  3696  010876  5033               	movf	(??_SHA256_HashBlock+48)^0,w,c
  3697  010878  183F               	xorwf	(??_SHA256_HashBlock+60)^0,w,c
  3698  01087A  6E43               	movwf	(??_SHA256_HashBlock+64)^0,c
  3699  01087C  5034               	movf	(??_SHA256_HashBlock+49)^0,w,c
  3700  01087E  1840               	xorwf	(??_SHA256_HashBlock+61)^0,w,c
  3701  010880  6E44               	movwf	(??_SHA256_HashBlock+65)^0,c
  3702  010882  5025               	movf	(??_SHA256_HashBlock+34)^0,w,c
  3703  010884  1841               	xorwf	(??_SHA256_HashBlock+62)^0,w,c
  3704  010886  6E45               	movwf	(??_SHA256_HashBlock+66)^0,c
  3705  010888  5026               	movf	(??_SHA256_HashBlock+35)^0,w,c
  3706  01088A  1842               	xorwf	(??_SHA256_HashBlock+63)^0,w,c
  3707  01088C  6E46               	movwf	(??_SHA256_HashBlock+67)^0,c
  3708  01088E  5027               	movf	(??_SHA256_HashBlock+36)^0,w,c
  3709  010890  1843               	xorwf	(??_SHA256_HashBlock+64)^0,w,c
  3710  010892  6E47               	movwf	(??_SHA256_HashBlock+68)^0,c
  3711  010894  5028               	movf	(??_SHA256_HashBlock+37)^0,w,c
  3712  010896  1844               	xorwf	(??_SHA256_HashBlock+65)^0,w,c
  3713  010898  6E48               	movwf	(??_SHA256_HashBlock+69)^0,c
  3714  01089A  5019               	movf	(??_SHA256_HashBlock+22)^0,w,c
  3715  01089C  2445               	addwf	(??_SHA256_HashBlock+66)^0,w,c
  3716  01089E  6E49               	movwf	(??_SHA256_HashBlock+70)^0,c
  3717  0108A0  501A               	movf	(??_SHA256_HashBlock+23)^0,w,c
  3718  0108A2  2046               	addwfc	(??_SHA256_HashBlock+67)^0,w,c
  3719  0108A4  6E4A               	movwf	(??_SHA256_HashBlock+71)^0,c
  3720  0108A6  501B               	movf	(??_SHA256_HashBlock+24)^0,w,c
  3721  0108A8  2047               	addwfc	(??_SHA256_HashBlock+68)^0,w,c
  3722  0108AA  6E4B               	movwf	(??_SHA256_HashBlock+72)^0,c
  3723  0108AC  501C               	movf	(??_SHA256_HashBlock+25)^0,w,c
  3724  0108AE  2048               	addwfc	(??_SHA256_HashBlock+69)^0,w,c
  3725  0108B0  6E4C               	movwf	(??_SHA256_HashBlock+73)^0,c
  3726  0108B2  5009               	movf	(??_SHA256_HashBlock+6)^0,w,c
  3727  0108B4  2449               	addwf	(??_SHA256_HashBlock+70)^0,w,c
  3728  0108B6  6E4D               	movwf	(??_SHA256_HashBlock+74)^0,c
  3729  0108B8  500A               	movf	(??_SHA256_HashBlock+7)^0,w,c
  3730  0108BA  204A               	addwfc	(??_SHA256_HashBlock+71)^0,w,c
  3731  0108BC  6E4E               	movwf	(??_SHA256_HashBlock+75)^0,c
  3732  0108BE  500B               	movf	(??_SHA256_HashBlock+8)^0,w,c
  3733  0108C0  204B               	addwfc	(??_SHA256_HashBlock+72)^0,w,c
  3734  0108C2  6E4F               	movwf	(??_SHA256_HashBlock+76)^0,c
  3735  0108C4  500C               	movf	(??_SHA256_HashBlock+9)^0,w,c
  3736  0108C6  204C               	addwfc	(??_SHA256_HashBlock+73)^0,w,c
  3737  0108C8  6E50               	movwf	(??_SHA256_HashBlock+77)^0,c
  3738  0108CA  5005               	movf	(??_SHA256_HashBlock+2)^0,w,c
  3739  0108CC  244D               	addwf	(??_SHA256_HashBlock+74)^0,w,c
  3740  0108CE  6E51               	movwf	(??_SHA256_HashBlock+78)^0,c
  3741  0108D0  5006               	movf	(??_SHA256_HashBlock+3)^0,w,c
  3742  0108D2  204E               	addwfc	(??_SHA256_HashBlock+75)^0,w,c
  3743  0108D4  6E52               	movwf	(??_SHA256_HashBlock+79)^0,c
  3744  0108D6  5007               	movf	(??_SHA256_HashBlock+4)^0,w,c
  3745  0108D8  204F               	addwfc	(??_SHA256_HashBlock+76)^0,w,c
  3746  0108DA  6E53               	movwf	(??_SHA256_HashBlock+80)^0,c
  3747  0108DC  5008               	movf	(??_SHA256_HashBlock+5)^0,w,c
  3748  0108DE  2050               	addwfc	(??_SHA256_HashBlock+77)^0,w,c
  3749  0108E0  6E54               	movwf	(??_SHA256_HashBlock+81)^0,c
  3750  0108E2  51A8               	movf	SHA256_HashBlock@h& (0+255),w,b
  3751  0108E4  2451               	addwf	(??_SHA256_HashBlock+78)^0,w,c
  3752  0108E6  6FBC               	movwf	SHA256_HashBlock@t1& (0+255),b
  3753  0108E8  51A9               	movf	(SHA256_HashBlock@h+1)& (0+255),w,b
  3754  0108EA  2052               	addwfc	(??_SHA256_HashBlock+79)^0,w,c
  3755  0108EC  6FBD               	movwf	(SHA256_HashBlock@t1+1)& (0+255),b
  3756  0108EE  51AA               	movf	(SHA256_HashBlock@h+2)& (0+255),w,b
  3757  0108F0  2053               	addwfc	(??_SHA256_HashBlock+80)^0,w,c
  3758  0108F2  6FBE               	movwf	(SHA256_HashBlock@t1+2)& (0+255),b
  3759  0108F4  51AB               	movf	(SHA256_HashBlock@h+3)& (0+255),w,b
  3760  0108F6  2054               	addwfc	(??_SHA256_HashBlock+81)^0,w,c
  3761  0108F8  6FBF               	movwf	(SHA256_HashBlock@t1+3)& (0+255),b
  3762  0108FA                     
  3763                           ; BSR set to: 0
  3764                           ;sha256.c: 225:         t2 = (((a >> 2) | (a << (32-2))) ^ ((a >> 13) | (a << (32-13))) 
      +                          ^ ((a >> 22) | (a << (32-22)))) + ((a & b) ^ (a & c) ^ (b & c));
  3765  0108FA  51B8               	movf	SHA256_HashBlock@c& (0+255),w,b
  3766  0108FC  15B4               	andwf	SHA256_HashBlock@b& (0+255),w,b
  3767  0108FE  6E03               	movwf	??_SHA256_HashBlock^0,c
  3768  010900  51B9               	movf	(SHA256_HashBlock@c+1)& (0+255),w,b
  3769  010902  15B5               	andwf	(SHA256_HashBlock@b+1)& (0+255),w,b
  3770  010904  6E04               	movwf	(??_SHA256_HashBlock+1)^0,c
  3771  010906  51BA               	movf	(SHA256_HashBlock@c+2)& (0+255),w,b
  3772  010908  15B6               	andwf	(SHA256_HashBlock@b+2)& (0+255),w,b
  3773  01090A  6E05               	movwf	(??_SHA256_HashBlock+2)^0,c
  3774  01090C  51BB               	movf	(SHA256_HashBlock@c+3)& (0+255),w,b
  3775  01090E  15B7               	andwf	(SHA256_HashBlock@b+3)& (0+255),w,b
  3776  010910  6E06               	movwf	(??_SHA256_HashBlock+3)^0,c
  3777  010912  51B8               	movf	SHA256_HashBlock@c& (0+255),w,b
  3778  010914  15C2               	andwf	SHA256_HashBlock@a& (0+255),w,b
  3779  010916  6E07               	movwf	(??_SHA256_HashBlock+4)^0,c
  3780  010918  51B9               	movf	(SHA256_HashBlock@c+1)& (0+255),w,b
  3781  01091A  15C3               	andwf	(SHA256_HashBlock@a+1)& (0+255),w,b
  3782  01091C  6E08               	movwf	(??_SHA256_HashBlock+5)^0,c
  3783  01091E  51BA               	movf	(SHA256_HashBlock@c+2)& (0+255),w,b
  3784  010920  15C4               	andwf	(SHA256_HashBlock@a+2)& (0+255),w,b
  3785  010922  6E09               	movwf	(??_SHA256_HashBlock+6)^0,c
  3786  010924  51BB               	movf	(SHA256_HashBlock@c+3)& (0+255),w,b
  3787  010926  15C5               	andwf	(SHA256_HashBlock@a+3)& (0+255),w,b
  3788  010928  6E0A               	movwf	(??_SHA256_HashBlock+7)^0,c
  3789  01092A  51B4               	movf	SHA256_HashBlock@b& (0+255),w,b
  3790  01092C  15C2               	andwf	SHA256_HashBlock@a& (0+255),w,b
  3791  01092E  6E0B               	movwf	(??_SHA256_HashBlock+8)^0,c
  3792  010930  51B5               	movf	(SHA256_HashBlock@b+1)& (0+255),w,b
  3793  010932  15C3               	andwf	(SHA256_HashBlock@a+1)& (0+255),w,b
  3794  010934  6E0C               	movwf	(??_SHA256_HashBlock+9)^0,c
  3795  010936  51B6               	movf	(SHA256_HashBlock@b+2)& (0+255),w,b
  3796  010938  15C4               	andwf	(SHA256_HashBlock@a+2)& (0+255),w,b
  3797  01093A  6E0D               	movwf	(??_SHA256_HashBlock+10)^0,c
  3798  01093C  51B7               	movf	(SHA256_HashBlock@b+3)& (0+255),w,b
  3799  01093E  15C5               	andwf	(SHA256_HashBlock@a+3)& (0+255),w,b
  3800  010940  6E0E               	movwf	(??_SHA256_HashBlock+11)^0,c
  3801  010942  5007               	movf	(??_SHA256_HashBlock+4)^0,w,c
  3802  010944  180B               	xorwf	(??_SHA256_HashBlock+8)^0,w,c
  3803  010946  6E0F               	movwf	(??_SHA256_HashBlock+12)^0,c
  3804  010948  5008               	movf	(??_SHA256_HashBlock+5)^0,w,c
  3805  01094A  180C               	xorwf	(??_SHA256_HashBlock+9)^0,w,c
  3806  01094C  6E10               	movwf	(??_SHA256_HashBlock+13)^0,c
  3807  01094E  5009               	movf	(??_SHA256_HashBlock+6)^0,w,c
  3808  010950  180D               	xorwf	(??_SHA256_HashBlock+10)^0,w,c
  3809  010952  6E11               	movwf	(??_SHA256_HashBlock+14)^0,c
  3810  010954  500A               	movf	(??_SHA256_HashBlock+7)^0,w,c
  3811  010956  180E               	xorwf	(??_SHA256_HashBlock+11)^0,w,c
  3812  010958  6E12               	movwf	(??_SHA256_HashBlock+15)^0,c
  3813  01095A  5003               	movf	??_SHA256_HashBlock^0,w,c
  3814  01095C  180F               	xorwf	(??_SHA256_HashBlock+12)^0,w,c
  3815  01095E  6E13               	movwf	(??_SHA256_HashBlock+16)^0,c
  3816  010960  5004               	movf	(??_SHA256_HashBlock+1)^0,w,c
  3817  010962  1810               	xorwf	(??_SHA256_HashBlock+13)^0,w,c
  3818  010964  6E14               	movwf	(??_SHA256_HashBlock+17)^0,c
  3819  010966  5005               	movf	(??_SHA256_HashBlock+2)^0,w,c
  3820  010968  1811               	xorwf	(??_SHA256_HashBlock+14)^0,w,c
  3821  01096A  6E15               	movwf	(??_SHA256_HashBlock+18)^0,c
  3822  01096C  5006               	movf	(??_SHA256_HashBlock+3)^0,w,c
  3823  01096E  1812               	xorwf	(??_SHA256_HashBlock+15)^0,w,c
  3824  010970  6E16               	movwf	(??_SHA256_HashBlock+19)^0,c
  3825  010972  0060  F308  F017   	movff	SHA256_HashBlock@a,??_SHA256_HashBlock+20
  3826  010978  0060  F30C  F018   	movff	SHA256_HashBlock@a+1,??_SHA256_HashBlock+21
  3827  01097E  0060  F310  F019   	movff	SHA256_HashBlock@a+2,??_SHA256_HashBlock+22
  3828  010984  0060  F314  F01A   	movff	SHA256_HashBlock@a+3,??_SHA256_HashBlock+23
  3829  01098A  0E0A               	movlw	10
  3830  01098C                     u595:
  3831  01098C  90D8               	bcf	status,0,c
  3832  01098E  3617               	rlcf	(??_SHA256_HashBlock+20)^0,f,c
  3833  010990  3618               	rlcf	(??_SHA256_HashBlock+21)^0,f,c
  3834  010992  3619               	rlcf	(??_SHA256_HashBlock+22)^0,f,c
  3835  010994  361A               	rlcf	(??_SHA256_HashBlock+23)^0,f,c
  3836  010996  2EE8               	decfsz	wreg,f,c
  3837  010998  EFC6  F084         	goto	u595
  3838  01099C  0060  F308  F01B   	movff	SHA256_HashBlock@a,??_SHA256_HashBlock+24
  3839  0109A2  0060  F30C  F01C   	movff	SHA256_HashBlock@a+1,??_SHA256_HashBlock+25
  3840  0109A8  0060  F310  F01D   	movff	SHA256_HashBlock@a+2,??_SHA256_HashBlock+26
  3841  0109AE  0060  F314  F01E   	movff	SHA256_HashBlock@a+3,??_SHA256_HashBlock+27
  3842  0109B4  0E17               	movlw	23
  3843  0109B6  EFE2  F084         	goto	u600
  3844  0109BA                     u605:
  3845  0109BA  90D8               	bcf	status,0,c
  3846  0109BC  321E               	rrcf	(??_SHA256_HashBlock+27)^0,f,c
  3847  0109BE  321D               	rrcf	(??_SHA256_HashBlock+26)^0,f,c
  3848  0109C0  321C               	rrcf	(??_SHA256_HashBlock+25)^0,f,c
  3849  0109C2  321B               	rrcf	(??_SHA256_HashBlock+24)^0,f,c
  3850  0109C4                     u600:
  3851  0109C4  2EE8               	decfsz	wreg,f,c
  3852  0109C6  EFDD  F084         	goto	u605
  3853  0109CA  5017               	movf	(??_SHA256_HashBlock+20)^0,w,c
  3854  0109CC  101B               	iorwf	(??_SHA256_HashBlock+24)^0,w,c
  3855  0109CE  6E1F               	movwf	(??_SHA256_HashBlock+28)^0,c
  3856  0109D0  5018               	movf	(??_SHA256_HashBlock+21)^0,w,c
  3857  0109D2  101C               	iorwf	(??_SHA256_HashBlock+25)^0,w,c
  3858  0109D4  6E20               	movwf	(??_SHA256_HashBlock+29)^0,c
  3859  0109D6  5019               	movf	(??_SHA256_HashBlock+22)^0,w,c
  3860  0109D8  101D               	iorwf	(??_SHA256_HashBlock+26)^0,w,c
  3861  0109DA  6E21               	movwf	(??_SHA256_HashBlock+30)^0,c
  3862  0109DC  501A               	movf	(??_SHA256_HashBlock+23)^0,w,c
  3863  0109DE  101E               	iorwf	(??_SHA256_HashBlock+27)^0,w,c
  3864  0109E0  6E22               	movwf	(??_SHA256_HashBlock+31)^0,c
  3865  0109E2  0060  F308  F023   	movff	SHA256_HashBlock@a,??_SHA256_HashBlock+32
  3866  0109E8  0060  F30C  F024   	movff	SHA256_HashBlock@a+1,??_SHA256_HashBlock+33
  3867  0109EE  0060  F310  F025   	movff	SHA256_HashBlock@a+2,??_SHA256_HashBlock+34
  3868  0109F4  0060  F314  F026   	movff	SHA256_HashBlock@a+3,??_SHA256_HashBlock+35
  3869  0109FA  0E13               	movlw	19
  3870  0109FC                     u615:
  3871  0109FC  90D8               	bcf	status,0,c
  3872  0109FE  3623               	rlcf	(??_SHA256_HashBlock+32)^0,f,c
  3873  010A00  3624               	rlcf	(??_SHA256_HashBlock+33)^0,f,c
  3874  010A02  3625               	rlcf	(??_SHA256_HashBlock+34)^0,f,c
  3875  010A04  3626               	rlcf	(??_SHA256_HashBlock+35)^0,f,c
  3876  010A06  2EE8               	decfsz	wreg,f,c
  3877  010A08  EFFE  F084         	goto	u615
  3878  010A0C  0060  F308  F027   	movff	SHA256_HashBlock@a,??_SHA256_HashBlock+36
  3879  010A12  0060  F30C  F028   	movff	SHA256_HashBlock@a+1,??_SHA256_HashBlock+37
  3880  010A18  0060  F310  F029   	movff	SHA256_HashBlock@a+2,??_SHA256_HashBlock+38
  3881  010A1E  0060  F314  F02A   	movff	SHA256_HashBlock@a+3,??_SHA256_HashBlock+39
  3882  010A24  0E0E               	movlw	14
  3883  010A26  EF1A  F085         	goto	u620
  3884  010A2A                     u625:
  3885  010A2A  90D8               	bcf	status,0,c
  3886  010A2C  322A               	rrcf	(??_SHA256_HashBlock+39)^0,f,c
  3887  010A2E  3229               	rrcf	(??_SHA256_HashBlock+38)^0,f,c
  3888  010A30  3228               	rrcf	(??_SHA256_HashBlock+37)^0,f,c
  3889  010A32  3227               	rrcf	(??_SHA256_HashBlock+36)^0,f,c
  3890  010A34                     u620:
  3891  010A34  2EE8               	decfsz	wreg,f,c
  3892  010A36  EF15  F085         	goto	u625
  3893  010A3A  5023               	movf	(??_SHA256_HashBlock+32)^0,w,c
  3894  010A3C  1027               	iorwf	(??_SHA256_HashBlock+36)^0,w,c
  3895  010A3E  6E2B               	movwf	(??_SHA256_HashBlock+40)^0,c
  3896  010A40  5024               	movf	(??_SHA256_HashBlock+33)^0,w,c
  3897  010A42  1028               	iorwf	(??_SHA256_HashBlock+37)^0,w,c
  3898  010A44  6E2C               	movwf	(??_SHA256_HashBlock+41)^0,c
  3899  010A46  5025               	movf	(??_SHA256_HashBlock+34)^0,w,c
  3900  010A48  1029               	iorwf	(??_SHA256_HashBlock+38)^0,w,c
  3901  010A4A  6E2D               	movwf	(??_SHA256_HashBlock+42)^0,c
  3902  010A4C  5026               	movf	(??_SHA256_HashBlock+35)^0,w,c
  3903  010A4E  102A               	iorwf	(??_SHA256_HashBlock+39)^0,w,c
  3904  010A50  6E2E               	movwf	(??_SHA256_HashBlock+43)^0,c
  3905  010A52  0060  F308  F02F   	movff	SHA256_HashBlock@a,??_SHA256_HashBlock+44
  3906  010A58  0060  F30C  F030   	movff	SHA256_HashBlock@a+1,??_SHA256_HashBlock+45
  3907  010A5E  0060  F310  F031   	movff	SHA256_HashBlock@a+2,??_SHA256_HashBlock+46
  3908  010A64  0060  F314  F032   	movff	SHA256_HashBlock@a+3,??_SHA256_HashBlock+47
  3909  010A6A  0E1E               	movlw	30
  3910  010A6C                     u635:
  3911  010A6C  90D8               	bcf	status,0,c
  3912  010A6E  362F               	rlcf	(??_SHA256_HashBlock+44)^0,f,c
  3913  010A70  3630               	rlcf	(??_SHA256_HashBlock+45)^0,f,c
  3914  010A72  3631               	rlcf	(??_SHA256_HashBlock+46)^0,f,c
  3915  010A74  3632               	rlcf	(??_SHA256_HashBlock+47)^0,f,c
  3916  010A76  2EE8               	decfsz	wreg,f,c
  3917  010A78  EF36  F085         	goto	u635
  3918  010A7C  0060  F308  F033   	movff	SHA256_HashBlock@a,??_SHA256_HashBlock+48
  3919  010A82  0060  F30C  F034   	movff	SHA256_HashBlock@a+1,??_SHA256_HashBlock+49
  3920  010A88  0060  F310  F035   	movff	SHA256_HashBlock@a+2,??_SHA256_HashBlock+50
  3921  010A8E  0060  F314  F036   	movff	SHA256_HashBlock@a+3,??_SHA256_HashBlock+51
  3922  010A94  0E03               	movlw	3
  3923  010A96  EF52  F085         	goto	u640
  3924  010A9A                     u645:
  3925  010A9A  90D8               	bcf	status,0,c
  3926  010A9C  3236               	rrcf	(??_SHA256_HashBlock+51)^0,f,c
  3927  010A9E  3235               	rrcf	(??_SHA256_HashBlock+50)^0,f,c
  3928  010AA0  3234               	rrcf	(??_SHA256_HashBlock+49)^0,f,c
  3929  010AA2  3233               	rrcf	(??_SHA256_HashBlock+48)^0,f,c
  3930  010AA4                     u640:
  3931  010AA4  2EE8               	decfsz	wreg,f,c
  3932  010AA6  EF4D  F085         	goto	u645
  3933  010AAA  502F               	movf	(??_SHA256_HashBlock+44)^0,w,c
  3934  010AAC  1033               	iorwf	(??_SHA256_HashBlock+48)^0,w,c
  3935  010AAE  6E37               	movwf	(??_SHA256_HashBlock+52)^0,c
  3936  010AB0  5030               	movf	(??_SHA256_HashBlock+45)^0,w,c
  3937  010AB2  1034               	iorwf	(??_SHA256_HashBlock+49)^0,w,c
  3938  010AB4  6E38               	movwf	(??_SHA256_HashBlock+53)^0,c
  3939  010AB6  5031               	movf	(??_SHA256_HashBlock+46)^0,w,c
  3940  010AB8  1035               	iorwf	(??_SHA256_HashBlock+50)^0,w,c
  3941  010ABA  6E39               	movwf	(??_SHA256_HashBlock+54)^0,c
  3942  010ABC  5032               	movf	(??_SHA256_HashBlock+47)^0,w,c
  3943  010ABE  1036               	iorwf	(??_SHA256_HashBlock+51)^0,w,c
  3944  010AC0  6E3A               	movwf	(??_SHA256_HashBlock+55)^0,c
  3945  010AC2  502B               	movf	(??_SHA256_HashBlock+40)^0,w,c
  3946  010AC4  1837               	xorwf	(??_SHA256_HashBlock+52)^0,w,c
  3947  010AC6  6E3B               	movwf	(??_SHA256_HashBlock+56)^0,c
  3948  010AC8  502C               	movf	(??_SHA256_HashBlock+41)^0,w,c
  3949  010ACA  1838               	xorwf	(??_SHA256_HashBlock+53)^0,w,c
  3950  010ACC  6E3C               	movwf	(??_SHA256_HashBlock+57)^0,c
  3951  010ACE  502D               	movf	(??_SHA256_HashBlock+42)^0,w,c
  3952  010AD0  1839               	xorwf	(??_SHA256_HashBlock+54)^0,w,c
  3953  010AD2  6E3D               	movwf	(??_SHA256_HashBlock+58)^0,c
  3954  010AD4  502E               	movf	(??_SHA256_HashBlock+43)^0,w,c
  3955  010AD6  183A               	xorwf	(??_SHA256_HashBlock+55)^0,w,c
  3956  010AD8  6E3E               	movwf	(??_SHA256_HashBlock+59)^0,c
  3957  010ADA  501F               	movf	(??_SHA256_HashBlock+28)^0,w,c
  3958  010ADC  183B               	xorwf	(??_SHA256_HashBlock+56)^0,w,c
  3959  010ADE  6E3F               	movwf	(??_SHA256_HashBlock+60)^0,c
  3960  010AE0  5020               	movf	(??_SHA256_HashBlock+29)^0,w,c
  3961  010AE2  183C               	xorwf	(??_SHA256_HashBlock+57)^0,w,c
  3962  010AE4  6E40               	movwf	(??_SHA256_HashBlock+61)^0,c
  3963  010AE6  5021               	movf	(??_SHA256_HashBlock+30)^0,w,c
  3964  010AE8  183D               	xorwf	(??_SHA256_HashBlock+58)^0,w,c
  3965  010AEA  6E41               	movwf	(??_SHA256_HashBlock+62)^0,c
  3966  010AEC  5022               	movf	(??_SHA256_HashBlock+31)^0,w,c
  3967  010AEE  183E               	xorwf	(??_SHA256_HashBlock+59)^0,w,c
  3968  010AF0  6E42               	movwf	(??_SHA256_HashBlock+63)^0,c
  3969  010AF2  5013               	movf	(??_SHA256_HashBlock+16)^0,w,c
  3970  010AF4  243F               	addwf	(??_SHA256_HashBlock+60)^0,w,c
  3971  010AF6  6FA0               	movwf	SHA256_HashBlock@t2& (0+255),b
  3972  010AF8  5014               	movf	(??_SHA256_HashBlock+17)^0,w,c
  3973  010AFA  2040               	addwfc	(??_SHA256_HashBlock+61)^0,w,c
  3974  010AFC  6FA1               	movwf	(SHA256_HashBlock@t2+1)& (0+255),b
  3975  010AFE  5015               	movf	(??_SHA256_HashBlock+18)^0,w,c
  3976  010B00  2041               	addwfc	(??_SHA256_HashBlock+62)^0,w,c
  3977  010B02  6FA2               	movwf	(SHA256_HashBlock@t2+2)& (0+255),b
  3978  010B04  5016               	movf	(??_SHA256_HashBlock+19)^0,w,c
  3979  010B06  2042               	addwfc	(??_SHA256_HashBlock+63)^0,w,c
  3980  010B08  6FA3               	movwf	(SHA256_HashBlock@t2+3)& (0+255),b
  3981  010B0A                     
  3982                           ; BSR set to: 0
  3983                           ;sha256.c: 226:         h = g;
  3984  010B0A  0060  F2C0  F0A8   	movff	SHA256_HashBlock@g,SHA256_HashBlock@h
  3985  010B10  0060  F2C4  F0A9   	movff	SHA256_HashBlock@g+1,SHA256_HashBlock@h+1
  3986  010B16  0060  F2C8  F0AA   	movff	SHA256_HashBlock@g+2,SHA256_HashBlock@h+2
  3987  010B1C  0060  F2CC  F0AB   	movff	SHA256_HashBlock@g+3,SHA256_HashBlock@h+3
  3988  010B22                     
  3989                           ; BSR set to: 0
  3990                           ;sha256.c: 227:         g = f;
  3991  010B22  0060  F2B0  F0B0   	movff	SHA256_HashBlock@f,SHA256_HashBlock@g
  3992  010B28  0060  F2B4  F0B1   	movff	SHA256_HashBlock@f+1,SHA256_HashBlock@g+1
  3993  010B2E  0060  F2B8  F0B2   	movff	SHA256_HashBlock@f+2,SHA256_HashBlock@g+2
  3994  010B34  0060  F2BC  F0B3   	movff	SHA256_HashBlock@f+3,SHA256_HashBlock@g+3
  3995  010B3A                     
  3996                           ; BSR set to: 0
  3997                           ;sha256.c: 228:         f = e;
  3998  010B3A  0060  F318  F0AC   	movff	SHA256_HashBlock@e,SHA256_HashBlock@f
  3999  010B40  0060  F31C  F0AD   	movff	SHA256_HashBlock@e+1,SHA256_HashBlock@f+1
  4000  010B46  0060  F320  F0AE   	movff	SHA256_HashBlock@e+2,SHA256_HashBlock@f+2
  4001  010B4C  0060  F324  F0AF   	movff	SHA256_HashBlock@e+3,SHA256_HashBlock@f+3
  4002  010B52                     
  4003                           ; BSR set to: 0
  4004                           ;sha256.c: 229:         e = d + t1;
  4005  010B52  51BC               	movf	SHA256_HashBlock@t1& (0+255),w,b
  4006  010B54  25A4               	addwf	SHA256_HashBlock@d& (0+255),w,b
  4007  010B56  6FC6               	movwf	SHA256_HashBlock@e& (0+255),b
  4008  010B58  51BD               	movf	(SHA256_HashBlock@t1+1)& (0+255),w,b
  4009  010B5A  21A5               	addwfc	(SHA256_HashBlock@d+1)& (0+255),w,b
  4010  010B5C  6FC7               	movwf	(SHA256_HashBlock@e+1)& (0+255),b
  4011  010B5E  51BE               	movf	(SHA256_HashBlock@t1+2)& (0+255),w,b
  4012  010B60  21A6               	addwfc	(SHA256_HashBlock@d+2)& (0+255),w,b
  4013  010B62  6FC8               	movwf	(SHA256_HashBlock@e+2)& (0+255),b
  4014  010B64  51BF               	movf	(SHA256_HashBlock@t1+3)& (0+255),w,b
  4015  010B66  21A7               	addwfc	(SHA256_HashBlock@d+3)& (0+255),w,b
  4016  010B68  6FC9               	movwf	(SHA256_HashBlock@e+3)& (0+255),b
  4017  010B6A                     
  4018                           ; BSR set to: 0
  4019                           ;sha256.c: 230:         d = c;
  4020  010B6A  0060  F2E0  F0A4   	movff	SHA256_HashBlock@c,SHA256_HashBlock@d
  4021  010B70  0060  F2E4  F0A5   	movff	SHA256_HashBlock@c+1,SHA256_HashBlock@d+1
  4022  010B76  0060  F2E8  F0A6   	movff	SHA256_HashBlock@c+2,SHA256_HashBlock@d+2
  4023  010B7C  0060  F2EC  F0A7   	movff	SHA256_HashBlock@c+3,SHA256_HashBlock@d+3
  4024  010B82                     
  4025                           ; BSR set to: 0
  4026                           ;sha256.c: 231:         c = b;
  4027  010B82  0060  F2D0  F0B8   	movff	SHA256_HashBlock@b,SHA256_HashBlock@c
  4028  010B88  0060  F2D4  F0B9   	movff	SHA256_HashBlock@b+1,SHA256_HashBlock@c+1
  4029  010B8E  0060  F2D8  F0BA   	movff	SHA256_HashBlock@b+2,SHA256_HashBlock@c+2
  4030  010B94  0060  F2DC  F0BB   	movff	SHA256_HashBlock@b+3,SHA256_HashBlock@c+3
  4031  010B9A                     
  4032                           ; BSR set to: 0
  4033                           ;sha256.c: 232:         b = a;
  4034  010B9A  0060  F308  F0B4   	movff	SHA256_HashBlock@a,SHA256_HashBlock@b
  4035  010BA0  0060  F30C  F0B5   	movff	SHA256_HashBlock@a+1,SHA256_HashBlock@b+1
  4036  010BA6  0060  F310  F0B6   	movff	SHA256_HashBlock@a+2,SHA256_HashBlock@b+2
  4037  010BAC  0060  F314  F0B7   	movff	SHA256_HashBlock@a+3,SHA256_HashBlock@b+3
  4038  010BB2                     
  4039                           ; BSR set to: 0
  4040                           ;sha256.c: 233:         a = t1 + t2;
  4041  010BB2  51A0               	movf	SHA256_HashBlock@t2& (0+255),w,b
  4042  010BB4  25BC               	addwf	SHA256_HashBlock@t1& (0+255),w,b
  4043  010BB6  6FC2               	movwf	SHA256_HashBlock@a& (0+255),b
  4044  010BB8  51A1               	movf	(SHA256_HashBlock@t2+1)& (0+255),w,b
  4045  010BBA  21BD               	addwfc	(SHA256_HashBlock@t1+1)& (0+255),w,b
  4046  010BBC  6FC3               	movwf	(SHA256_HashBlock@a+1)& (0+255),b
  4047  010BBE  51A2               	movf	(SHA256_HashBlock@t2+2)& (0+255),w,b
  4048  010BC0  21BE               	addwfc	(SHA256_HashBlock@t1+2)& (0+255),w,b
  4049  010BC2  6FC4               	movwf	(SHA256_HashBlock@a+2)& (0+255),b
  4050  010BC4  51A3               	movf	(SHA256_HashBlock@t2+3)& (0+255),w,b
  4051  010BC6  21BF               	addwfc	(SHA256_HashBlock@t1+3)& (0+255),w,b
  4052  010BC8  6FC5               	movwf	(SHA256_HashBlock@a+3)& (0+255),b
  4053  010BCA                     
  4054                           ; BSR set to: 0
  4055                           ;sha256.c: 234:     }
  4056  010BCA  2BCA               	incf	SHA256_HashBlock@i& (0+255),f,b
  4057  010BCC                     
  4058                           ; BSR set to: 0
  4059  010BCC  0E3F               	movlw	63
  4060  010BCE  65CA               	cpfsgt	SHA256_HashBlock@i& (0+255),b
  4061  010BD0  EFEC  F085         	goto	u651
  4062  010BD4  EFEE  F085         	goto	u650
  4063  010BD8                     u651:
  4064  010BD8  EF2E  F083         	goto	l1308
  4065  010BDC                     u650:
  4066  010BDC                     
  4067                           ; BSR set to: 0
  4068                           ;sha256.c: 236:     context->h[0] += a;
  4069  010BDC  0060  F007  FFD9   	movff	SHA256_HashBlock@context,fsr2l
  4070  010BE2  0060  F00B  FFDA   	movff	SHA256_HashBlock@context+1,fsr2h
  4071  010BE8  51C2               	movf	SHA256_HashBlock@a& (0+255),w,b
  4072  010BEA  26DE               	addwf	postinc2,f,c
  4073  010BEC  51C3               	movf	(SHA256_HashBlock@a+1)& (0+255),w,b
  4074  010BEE  22DE               	addwfc	postinc2,f,c
  4075  010BF0  51C4               	movf	(SHA256_HashBlock@a+2)& (0+255),w,b
  4076  010BF2  22DE               	addwfc	postinc2,f,c
  4077  010BF4  51C5               	movf	(SHA256_HashBlock@a+3)& (0+255),w,b
  4078  010BF6  22DE               	addwfc	postinc2,f,c
  4079  010BF8                     
  4080                           ; BSR set to: 0
  4081                           ;sha256.c: 237:     context->h[1] += b;
  4082  010BF8  EE20 F004          	lfsr	2,4
  4083  010BFC  5001               	movf	SHA256_HashBlock@context^0,w,c
  4084  010BFE  26D9               	addwf	fsr2l,f,c
  4085  010C00  5002               	movf	(SHA256_HashBlock@context+1)^0,w,c
  4086  010C02  22DA               	addwfc	fsr2h,f,c
  4087  010C04  51B4               	movf	SHA256_HashBlock@b& (0+255),w,b
  4088  010C06  26DE               	addwf	postinc2,f,c
  4089  010C08  51B5               	movf	(SHA256_HashBlock@b+1)& (0+255),w,b
  4090  010C0A  22DE               	addwfc	postinc2,f,c
  4091  010C0C  51B6               	movf	(SHA256_HashBlock@b+2)& (0+255),w,b
  4092  010C0E  22DE               	addwfc	postinc2,f,c
  4093  010C10  51B7               	movf	(SHA256_HashBlock@b+3)& (0+255),w,b
  4094  010C12  22DE               	addwfc	postinc2,f,c
  4095  010C14                     
  4096                           ; BSR set to: 0
  4097                           ;sha256.c: 238:     context->h[2] += c;
  4098  010C14  EE20 F008          	lfsr	2,8
  4099  010C18  5001               	movf	SHA256_HashBlock@context^0,w,c
  4100  010C1A  26D9               	addwf	fsr2l,f,c
  4101  010C1C  5002               	movf	(SHA256_HashBlock@context+1)^0,w,c
  4102  010C1E  22DA               	addwfc	fsr2h,f,c
  4103  010C20  51B8               	movf	SHA256_HashBlock@c& (0+255),w,b
  4104  010C22  26DE               	addwf	postinc2,f,c
  4105  010C24  51B9               	movf	(SHA256_HashBlock@c+1)& (0+255),w,b
  4106  010C26  22DE               	addwfc	postinc2,f,c
  4107  010C28  51BA               	movf	(SHA256_HashBlock@c+2)& (0+255),w,b
  4108  010C2A  22DE               	addwfc	postinc2,f,c
  4109  010C2C  51BB               	movf	(SHA256_HashBlock@c+3)& (0+255),w,b
  4110  010C2E  22DE               	addwfc	postinc2,f,c
  4111  010C30                     
  4112                           ; BSR set to: 0
  4113                           ;sha256.c: 239:     context->h[3] += d;
  4114  010C30  EE20 F00C          	lfsr	2,12
  4115  010C34  5001               	movf	SHA256_HashBlock@context^0,w,c
  4116  010C36  26D9               	addwf	fsr2l,f,c
  4117  010C38  5002               	movf	(SHA256_HashBlock@context+1)^0,w,c
  4118  010C3A  22DA               	addwfc	fsr2h,f,c
  4119  010C3C  51A4               	movf	SHA256_HashBlock@d& (0+255),w,b
  4120  010C3E  26DE               	addwf	postinc2,f,c
  4121  010C40  51A5               	movf	(SHA256_HashBlock@d+1)& (0+255),w,b
  4122  010C42  22DE               	addwfc	postinc2,f,c
  4123  010C44  51A6               	movf	(SHA256_HashBlock@d+2)& (0+255),w,b
  4124  010C46  22DE               	addwfc	postinc2,f,c
  4125  010C48  51A7               	movf	(SHA256_HashBlock@d+3)& (0+255),w,b
  4126  010C4A  22DE               	addwfc	postinc2,f,c
  4127  010C4C                     
  4128                           ; BSR set to: 0
  4129                           ;sha256.c: 240:     context->h[4] += e;
  4130  010C4C  EE20 F010          	lfsr	2,16
  4131  010C50  5001               	movf	SHA256_HashBlock@context^0,w,c
  4132  010C52  26D9               	addwf	fsr2l,f,c
  4133  010C54  5002               	movf	(SHA256_HashBlock@context+1)^0,w,c
  4134  010C56  22DA               	addwfc	fsr2h,f,c
  4135  010C58  51C6               	movf	SHA256_HashBlock@e& (0+255),w,b
  4136  010C5A  26DE               	addwf	postinc2,f,c
  4137  010C5C  51C7               	movf	(SHA256_HashBlock@e+1)& (0+255),w,b
  4138  010C5E  22DE               	addwfc	postinc2,f,c
  4139  010C60  51C8               	movf	(SHA256_HashBlock@e+2)& (0+255),w,b
  4140  010C62  22DE               	addwfc	postinc2,f,c
  4141  010C64  51C9               	movf	(SHA256_HashBlock@e+3)& (0+255),w,b
  4142  010C66  22DE               	addwfc	postinc2,f,c
  4143  010C68                     
  4144                           ; BSR set to: 0
  4145                           ;sha256.c: 241:     context->h[5] += f;
  4146  010C68  EE20 F014          	lfsr	2,20
  4147  010C6C  5001               	movf	SHA256_HashBlock@context^0,w,c
  4148  010C6E  26D9               	addwf	fsr2l,f,c
  4149  010C70  5002               	movf	(SHA256_HashBlock@context+1)^0,w,c
  4150  010C72  22DA               	addwfc	fsr2h,f,c
  4151  010C74  51AC               	movf	SHA256_HashBlock@f& (0+255),w,b
  4152  010C76  26DE               	addwf	postinc2,f,c
  4153  010C78  51AD               	movf	(SHA256_HashBlock@f+1)& (0+255),w,b
  4154  010C7A  22DE               	addwfc	postinc2,f,c
  4155  010C7C  51AE               	movf	(SHA256_HashBlock@f+2)& (0+255),w,b
  4156  010C7E  22DE               	addwfc	postinc2,f,c
  4157  010C80  51AF               	movf	(SHA256_HashBlock@f+3)& (0+255),w,b
  4158  010C82  22DE               	addwfc	postinc2,f,c
  4159  010C84                     
  4160                           ; BSR set to: 0
  4161                           ;sha256.c: 242:     context->h[6] += g;
  4162  010C84  EE20 F018          	lfsr	2,24
  4163  010C88  5001               	movf	SHA256_HashBlock@context^0,w,c
  4164  010C8A  26D9               	addwf	fsr2l,f,c
  4165  010C8C  5002               	movf	(SHA256_HashBlock@context+1)^0,w,c
  4166  010C8E  22DA               	addwfc	fsr2h,f,c
  4167  010C90  51B0               	movf	SHA256_HashBlock@g& (0+255),w,b
  4168  010C92  26DE               	addwf	postinc2,f,c
  4169  010C94  51B1               	movf	(SHA256_HashBlock@g+1)& (0+255),w,b
  4170  010C96  22DE               	addwfc	postinc2,f,c
  4171  010C98  51B2               	movf	(SHA256_HashBlock@g+2)& (0+255),w,b
  4172  010C9A  22DE               	addwfc	postinc2,f,c
  4173  010C9C  51B3               	movf	(SHA256_HashBlock@g+3)& (0+255),w,b
  4174  010C9E  22DE               	addwfc	postinc2,f,c
  4175  010CA0                     
  4176                           ; BSR set to: 0
  4177                           ;sha256.c: 243:     context->h[7] += h;
  4178  010CA0  EE20 F01C          	lfsr	2,28
  4179  010CA4  5001               	movf	SHA256_HashBlock@context^0,w,c
  4180  010CA6  26D9               	addwf	fsr2l,f,c
  4181  010CA8  5002               	movf	(SHA256_HashBlock@context+1)^0,w,c
  4182  010CAA  22DA               	addwfc	fsr2h,f,c
  4183  010CAC  51A8               	movf	SHA256_HashBlock@h& (0+255),w,b
  4184  010CAE  26DE               	addwf	postinc2,f,c
  4185  010CB0  51A9               	movf	(SHA256_HashBlock@h+1)& (0+255),w,b
  4186  010CB2  22DE               	addwfc	postinc2,f,c
  4187  010CB4  51AA               	movf	(SHA256_HashBlock@h+2)& (0+255),w,b
  4188  010CB6  22DE               	addwfc	postinc2,f,c
  4189  010CB8  51AB               	movf	(SHA256_HashBlock@h+3)& (0+255),w,b
  4190  010CBA  22DE               	addwfc	postinc2,f,c
  4191  010CBC                     
  4192                           ; BSR set to: 0
  4193  010CBC  0012               	return		;funcret
  4194  010CBE                     __end_of_SHA256_HashBlock:
  4195                           	opt callstack 0
  4196                           
  4197                           	psect	rparam
  4198  0000                     tosu	equ	0x3FFF
  4199                           tosh	equ	0x3FFE
  4200                           tosl	equ	0x3FFD
  4201                           stkptr	equ	0x3FFC
  4202                           pclatu	equ	0x3FFB
  4203                           pclath	equ	0x3FFA
  4204                           pcl	equ	0x3FF9
  4205                           tblptru	equ	0x3FF8
  4206                           tblptrh	equ	0x3FF7
  4207                           tblptrl	equ	0x3FF6
  4208                           tablat	equ	0x3FF5
  4209                           prodh	equ	0x3FF4
  4210                           prodl	equ	0x3FF3
  4211                           indf0	equ	0x3FEF
  4212                           postinc0	equ	0x3FEE
  4213                           postdec0	equ	0x3FED
  4214                           preinc0	equ	0x3FEC
  4215                           plusw0	equ	0x3FEB
  4216                           fsr0h	equ	0x3FEA
  4217                           fsr0l	equ	0x3FE9
  4218                           wreg	equ	0x3FE8
  4219                           indf1	equ	0x3FE7
  4220                           postinc1	equ	0x3FE6
  4221                           postdec1	equ	0x3FE5
  4222                           preinc1	equ	0x3FE4
  4223                           plusw1	equ	0x3FE3
  4224                           fsr1h	equ	0x3FE2
  4225                           fsr1l	equ	0x3FE1
  4226                           bsr	equ	0x3FE0
  4227                           indf2	equ	0x3FDF
  4228                           postinc2	equ	0x3FDE
  4229                           postdec2	equ	0x3FDD
  4230                           preinc2	equ	0x3FDC
  4231                           plusw2	equ	0x3FDB
  4232                           fsr2h	equ	0x3FDA
  4233                           fsr2l	equ	0x3FD9
  4234                           status	equ	0x3FD8


Data Sizes:
    Strings     0
    Constant    825
    Data        0
    BSS         487
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160     59     123
    BANK1           256      0     103
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    contexts.workingBuffer	PTR unsigned long  size(2) Largest target is 0
		 -> workingBuffer(BIGRAM[320]), 

    memcmp@vr	PTR const void  size(2) Largest target is 32
		 -> message1_256_digest(CODE[32]), message0_256_digest(CODE[32]), 

    memcmp@r	PTR const unsigned char  size(2) Largest target is 32
		 -> message1_256_digest(CODE[32]), message0_256_digest(CODE[32]), 

    memcmp@vl	PTR const void  size(2) Largest target is 64
		 -> digest(BANK0[64]), 

    memcmp@l	PTR const unsigned char  size(2) Largest target is 64
		 -> digest(BANK0[64]), 

    contexts.context256.workingBuffer	PTR unsigned long  size(2) Largest target is 320
		 -> workingBuffer(BIGRAM[320]), 

    SHA256_OutputData@output	PTR unsigned char  size(2) Largest target is 64
		 -> digest(BANK0[64]), 

    SHA256_Calculate@result	PTR unsigned char  size(2) Largest target is 64
		 -> digest(BANK0[64]), 

    SHA256_Calculate@endPtr	PTR unsigned char  size(2) Largest target is 104
		 -> contexts.partialBlock(BANK1[64]), contexts(BANK1[103]), 

    SHA256_Calculate@context.workingBuffer	PTR unsigned long  size(2) Largest target is 320
		 -> workingBuffer(BIGRAM[320]), 

    SHA256_Calculate@context	PTR struct . size(2) Largest target is 104
		 -> contexts(BANK1[103]), 

    SHA256_Calculate@blockPtr	PTR unsigned char  size(2) Largest target is 104
		 -> contexts.partialBlock(BANK1[64]), contexts(BANK1[103]), 

    SHA256_HashBlock@schedulePtr	PTR unsigned long  size(2) Largest target is 320
		 -> workingBuffer(BIGRAM[320]), 

    SHA256_HashBlock@context.workingBuffer	PTR unsigned long  size(2) Largest target is 320
		 -> workingBuffer(BIGRAM[320]), 

    SHA256_HashBlock@context	PTR struct . size(2) Largest target is 104
		 -> contexts(BANK1[103]), 

    SHA256_HashBlock@dataPtr	PTR unsigned char  size(2) Largest target is 104
		 -> contexts.partialBlock(BANK1[64]), contexts(BANK1[103]), 

    SHA256_DataAdd@data	PTR unsigned char  size(2) Largest target is 2
		 -> message1(CODE[2]), message0(CODE[1]), 

    SHA256_DataAdd@context.workingBuffer	PTR unsigned long  size(2) Largest target is 320
		 -> workingBuffer(BIGRAM[320]), 

    SHA256_DataAdd@context	PTR struct . size(2) Largest target is 104
		 -> contexts(BANK1[103]), 

    SHA256_DataAdd@blockPtr	PTR unsigned char  size(2) Largest target is 104
		 -> contexts.partialBlock(BANK1[64]), contexts(BANK1[103]), 

    SHA256_Initialize@workingBuffer	PTR unsigned long  size(2) Largest target is 320
		 -> workingBuffer(BIGRAM[320]), 

    S27$workingBuffer	PTR unsigned long  size(2) Largest target is 320
		 -> workingBuffer(BIGRAM[320]), 

    SHA256_Initialize@context.workingBuffer	PTR unsigned long  size(2) Largest target is 320
		 -> workingBuffer(BIGRAM[320]), 

    SHA256_Initialize@context	PTR struct . size(2) Largest target is 104
		 -> contexts(BANK1[103]), 


Critical Paths under _main in COMRAM

    _SHA256_DataAdd->_SHA256_HashBlock
    _SHA256_Calculate->_SHA256_HashBlock

Critical Paths under _main in BANK0

    _main->_SHA256_DataAdd
    _SHA256_DataAdd->_SHA256_HashBlock
    _SHA256_Calculate->_SHA256_HashBlock

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8370
                   _SHA256_Calculate
                     _SHA256_DataAdd
                  _SHA256_Initialize
                  _SYSTEM_Initialize
                             _memcmp
 ---------------------------------------------------------------------------------
 (1) _memcmp                                              11     5      6     637
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SHA256_Initialize                                    5     0      5     940
                                              0 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (1) _SHA256_DataAdd                                      14     6      8    2972
                                             45 BANK0     14     6      8
                   _SHA256_HashBlock
 ---------------------------------------------------------------------------------
 (1) _SHA256_Calculate                                    13     9      4    3821
                                             45 BANK0     13     9      4
                   _SHA256_HashBlock
                  _SHA256_OutputData
 ---------------------------------------------------------------------------------
 (2) _SHA256_OutputData                                    6     0      6     484
                                              0 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (2) _SHA256_HashBlock                                   139   137      2    2269
                                              0 COMRAM    94    92      2
                                              0 BANK0     45    45      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SHA256_Calculate
     _SHA256_HashBlock
     _SHA256_OutputData
   _SHA256_DataAdd
     _SHA256_HashBlock
   _SHA256_Initialize
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _memcmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     140      69        3.9%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      67       7       40.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3B      7B       5       76.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     140      58        0.0%
DATA                 0      0     280       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Apr 04 23:28:15 2020

         __end_of_SHA256_DataAdd 1302                      __CFG_CP$OFF 000000  
                             l11 1212                               l40 0FFE  
                             l18 1300                               l27 0CBC  
                             l43 1584                               l81 15F6  
                             l84 15DE                               l78 1604  
                    __CFG_LVP$ON 000000                              l169 152A  
                            l920 14A2                              u410 012C  
                            u411 0128                              u420 01E2  
                            u510 0454                              u600 09C4  
                            u520 0520                              u440 0252  
                            u521 051C                              u505 0410  
                            u425 01D8                              u515 044A  
                            u435 020E                              u620 0A34  
                            u540 076C                              u460 02DA  
                            u700 0D6C                              u605 09BA  
                            u445 0248                              u701 0D68  
                            u470 035C                              u710 0DC8  
                            u615 09FC                              u535 0734  
                            u455 0296                              u711 0DC4  
                            u640 0AA4                              u560 07DC  
                            u720 0DFC                              u800 146C  
                            u625 0A2A                              u545 0762  
                            u465 02D0                              u801 1468  
                            u650 0BDC                              u490 03CC  
                            u730 0E4A                              u651 0BD8  
                            u635 0A6C                              u555 07A4  
                            u475 0352                              u580 084C  
                            u740 0E98                              u660 1010  
                            u645 0A9A                              u565 07D2  
                            u485 0388                              u725 0DF2  
                            u661 100C                              u750 0EE6  
                            u670 12C2                              u575 0814  
                            u495 03C2                              u735 0E40  
                            u671 12BE                              u760 0FAE  
                            u680 1300                              u585 0842  
                            u761 0FAA                              u745 0E8E  
                            u681 12FC                              u770 0FCA  
                            u690 0D36                              u595 098C  
                            u771 0FC6                              u755 0EDC  
                            u691 0D32                              u780 142A  
                            u781 1426                              u790 145A  
                            u791 1456          __size_of_PMD_Initialize 0024  
       __end_of_SHA256_Calculate 1000                              wreg 003FE8  
                  __CFG_BBEN$OFF 000000                     __CFG_ZCD$OFF 000000  
                           l1300 0640                             l1310 08FA  
                           l1302 0658                             l1320 0B6A  
                           l1312 0B0A                             l1240 000E  
                           l1400 1010                             l1330 0BCC  
                           l1322 0B82                             l1314 0B22  
                           l1250 0044                             l1242 0026  
                           l1410 109C                             l1402 102C  
                           l1340 0C4C                             l1332 0BDC  
                           l1324 0B9A                             l1316 0B3A  
                           l1308 065C                             l1260 00AC  
                           l1252 0048                             l1500 0F2E  
                           l1420 112C                             l1412 10B8  
                           l1404 1048                             l1342 0C68  
                           l1334 0BF8                             l1326 0BB2  
                           l1318 0B52                             l1270 011C  
                           l1262 00B0                             l1254 005C  
                           l1238 0000                             l1350 153E  
                           l1510 0F9A                             l1502 0F3E  
                           l1430 11B8                             l1422 1148  
                           l1414 10D4                             l1406 1064  
                           l1344 0C84                             l1336 0C14  
                           l1328 0BCA                             l1280 050E  
                           l1272 012C                             l1264 00C4  
                           l1256 0078                             l1248 002A  
                           l1352 1542                             l1512 0F9E  
                           l1440 1276                             l1424 1164  
                           l1432 11D4                             l1408 1080  
                           l1416 10F4                             l1360 15BC  
                           l1520 13EE                             l1346 0CA0  
                           l1338 0C30                             l1290 058C  
                           l1282 0510                             l1266 00E4  
                           l1258 0090                             l1354 1558  
                           l1514 0FAE                             l1450 12D2  
                           l1442 1296                             l1434 11E6  
                           l1426 1180                             l1418 1110  
                           l1370 14C2                             l1362 14A4  
                           l1530 146C                             l1522 140A  
                           l1292 05B0                             l1284 0520  
                           l1268 011A                             l1356 156A  
                           l1348 152C                             l1516 0FCA  
                           l1508 0F44                             l1460 0D14  
                           l1452 12E0                             l1444 129A  
                           l1436 11FA                             l1428 119C  
                           l1380 1512                             l1372 14C4  
                           l1364 14BC                             l1532 1478  
                           l1524 1418                             l1540 131E  
                           l1294 05D4                             l1286 0544  
                           l1278 0130                             l1358 1580  
                           l1470 0D56                             l1462 0D20  
                           l1446 129E                             l1454 12EA  
                           l1438 1214                             l1390 1520  
                           l1382 1514                             l1374 14C8  
                           l1366 14BE                             l1518 15F8  
                           l1526 142A                             l1550 13B4  
                           l1542 1344                             l1296 05F8  
                           l1288 0568                             l1480 0D9E  
                           l1472 0D6C                             l1464 0D36  
                           l1456 0CBE                             l1448 12C2  
                           l1392 1522                             l1384 1516  
                           l1376 14CA                             l1368 14C0  
                           l1528 145A                             l1552 13CA  
                           l1544 135A                             l1536 1302  
                           l1298 061C                             l1490 0E16  
                           l1482 0DAE                             l1474 0D7C  
                           l1466 0D42                             l1458 0D00  
                           l1394 1524                             l1386 1518  
                           l1378 14D0                             l1546 1376  
                           l1538 1306                             l1492 0E64  
                           l1484 0DB2                             l1476 0D8A  
                           l1468 0D52                             l1396 15E0  
                           l1388 151E                             l1548 138E  
                           l1494 0EAE                             l1486 0DC8  
                           l1478 0D92                             l1398 1000  
                           l1496 0EFC                             l1488 0E12  
                           l1498 0F00                             _LATA 003FBA  
                           _LATB 003FBB                             _LATC 003FBC  
                           _LATD 003FBD                             _LATE 003FBE  
                           _PMD0 0039C0                             _PMD1 0039C1  
                           _PMD2 0039C2                             _PMD3 0039C3  
                           _PMD4 0039C4                             _PMD5 0039C5  
                           _PMD6 0039C6                             _PMD7 0039C7  
       __end_of_SHA256_HashBlock 0CBE                             _WPUA 003A41  
                           _WPUB 003A51                             _WPUC 003A61  
                           _WPUD 003A71                             _WPUE 003A81  
                  __CFG_FCMEN$ON 000000                             _main 1302  
                           fsr1h 003FE2                             fsr2h 003FDA  
                           indf2 003FDF                             fsr1l 003FE1  
                           fsr2l 003FD9                             prodh 003FF4  
                           prodl 003FF3                             start FFFC  
                  __CFG_CSWEN$ON 000000                     ___param_bank 000000  
                ?_SHA256_DataAdd 00CD                 __end_of_SHA256_K FDC5  
 __size_of_OSCILLATOR_Initialize 0018    __end_of_OSCILLATOR_Initialize 15F8  
                          ?_main 0001                    __CFG_WDTE$OFF 000000  
                 __CFG_DEBUG$OFF 000000                            _OSCEN 0039DD  
                          _TRISA 003FC2                            _TRISB 003FC3  
                          _TRISC 003FC4                            _TRISD 003FC5  
                          _TRISE 003FC6                    __CFG_WRTB$OFF 000000  
    __end_of_message0_256_digest FFFB                    __CFG_WRTC$OFF 000000  
                  __CFG_WRTD$OFF 000000               __CFG_MCLRE$EXTMCLR 000000  
 SHA256_Initialize@workingBuffer 0004                            tablat 003FF5  
                          status 003FD8                  __initialization 1586  
    __end_of_message1_256_digest FFDB                     __end_of_main 13EE  
             SHA256_HashBlock@t1 00BC               SHA256_HashBlock@t2 00A0  
                 __CFG_SAFEN$OFF 000000                           ??_main 005F  
                 __CFG_PR1WAY$ON 000000                    __activetblptr 000002  
    __end_of_message2_256_digest FF82                           _ANSELA 003A40  
                         _ANSELB 003A50                           _ANSELC 003A60  
                         _ANSELD 003A70                           _ANSELE 003A80  
                         _RB1I2C 003A5A                           _RB2I2C 003A5B  
                         _RD0I2C 003A7A                           _RC3I2C 003A6A  
                         _RD1I2C 003A7B                           _RC4I2C 003A6B  
                         _ODCONA 003A42                           _ODCONB 003A52  
                         _ODCONC 003A62                           _ODCOND 003A72  
                         _ODCONE 003A82                   __CFG_WDTCCS$SC 000000  
                         _INLVLA 003A44                           _INLVLB 003A54  
                         _INLVLC 003A64                           _INLVLD 003A74  
                         _INLVLE 003A84                           _OSCFRQ 0039DF  
                 __CFG_XINST$OFF 000000      __end_of_message3_256_digest FF62  
                 __CFG_STVREN$ON 000000                           _digest 0060  
                         _memcmp 13EE                           clear_0 158E  
                         clear_1 15A0                           clear_2 15AC  
               __end_of_message0 FFFE                 __end_of_message1 FFFD  
               __end_of_message2 FFBB                 __end_of_message3 FFAC  
               __end_of_message4 FF9D                 __end_of_message5 FEA2  
               __end_of_message6 FE69                 __end_of_message7 FFB7  
               __end_of_message8 FE2A                   _PMD_Initialize 15BC  
                   __mediumconst FCC4                           tblptrh 003FF7  
                         tblptrl 003FF6                           tblptru 003FF8  
    __end_of_message4_256_digest FF42                _SYSTEM_Initialize 15F8  
                     __accesstop 0060          __end_of__initialization 15B2  
             ?_SYSTEM_Initialize 0001                    ___rparam_used 000001  
                 __pcstackCOMRAM 0001      __end_of_message5_256_digest FF22  
            ??_SYSTEM_Initialize 0001           __end_of_PMD_Initialize 15E0  
              ?_SHA256_Calculate 00CD      __end_of_message6_256_digest FF02  
             ??_SHA256_Calculate 00D1        __end_of_SYSTEM_Initialize 1606  
                __CFG_IVT1WAY$ON 000000                       __pbssBANK0 0060  
                     __pbssBANK1 0100                ?_SHA256_HashBlock 0001  
                __CFG_MVECEN$OFF 000000               ??_SHA256_HashBlock 0003  
               ??_SHA256_DataAdd 00D5      __end_of_message7_256_digest FEE2  
                __CFG_PPS1WAY$ON 000000                          ?_memcmp 0001  
                ?_PMD_Initialize 0001          SHA256_OutputData@output 0001  
            __CFG_PWRTS$PWRT_OFF 000000                          _OSCCON1 0039D9  
                        _OSCCON3 0039DB                          _OSCTUNE 0039DE  
                        _SLRCONA 003A43                          _SLRCONB 003A53  
                        _SLRCONC 003A63                          _SLRCOND 003A73  
                        _SLRCONE 003A83      __end_of_message8_256_digest FEC2  
         SHA256_DataAdd@blockPtr 00D9                    _workingBuffer 0167  
                        __Hparam 0000                          __Lparam 0000  
     __CFG_RSTOSC$HFINTOSC_64MHZ 000000                          __pcinit 1586  
                __size_of_memcmp 00B6                          __ramtop 2000  
                        __ptext0 1302                          __ptext1 13EE  
                        __ptext2 15F8                          __ptext3 15BC  
                        __ptext4 14A4                          __ptext5 15E0  
                        __ptext6 1000                          __ptext7 1214  
                        __ptext8 0CBE                          __ptext9 152C  
                __CFG_WRTAPP$OFF 000000            _OSCILLATOR_Initialize 15E0  
       ??_PIN_MANAGER_Initialize 0001                  __CFG_WRTSAF$OFF 000000  
     __size_of_SYSTEM_Initialize 000E             end_of_initialization 15B2  
                        memcmp@l 0008                          memcmp@n 0005  
                        memcmp@r 000A                    __Lmediumconst FCC4  
                        postdec1 003FE5                          postdec2 003FDD  
                        postinc0 003FEE                          postinc2 003FDE  
          __CFG_WDTCPS$WDTCPS_31 000000                SHA256_DataAdd@len 00D1  
              SHA256_Calculate@i 00D7                 __CFG_FEXTOSC$OFF 000000  
        SHA256_HashBlock@dataPtr 00C0          SHA256_HashBlock@context 0001  
                 __end_of_memcmp 14A4           ?_OSCILLATOR_Initialize 0001  
            start_initialization 1586  __size_of_PIN_MANAGER_Initialize 0088  
              SHA256_HashBlock@a 00C2                SHA256_HashBlock@b 00B4  
              SHA256_HashBlock@c 00B8                SHA256_HashBlock@d 00A4  
              SHA256_HashBlock@e 00C6                SHA256_HashBlock@f 00AC  
              SHA256_HashBlock@g 00B0                SHA256_HashBlock@h 00A8  
              SHA256_HashBlock@i 00CA        __size_of_SHA256_Calculate 0342  
               __CFG_LPBOREN$OFF 000000                 ??_PMD_Initialize 0001  
                       ??_memcmp 0007        __size_of_SHA256_HashBlock 0CBE  
                    __pbssBIGRAM 0167                    __pcstackBANK0 00A0  
         _PIN_MANAGER_Initialize 14A4                    __pmediumconst FCC4  
         SHA256_OutputData@value 0003              _message0_256_digest FFDB  
         __CFG_BBSIZE$BBSIZE_512 000000            SHA256_DataAdd@context 00CD  
              _SHA256_Initialize 1000               ?_SHA256_Initialize 0001  
                       _SHA256_K FCC5              _message1_256_digest FFBB  
            ??_SHA256_Initialize 0006              __CFG_BORV$VBOR_2P45 000000  
       SHA256_Calculate@blockPtr 00D8          __size_of_SHA256_DataAdd 00EE  
            _message2_256_digest FF62        __end_of_SHA256_Initialize 1214  
            _message3_256_digest FF42                 _SHA256_Calculate 0CBE  
                       __Hrparam 0000                         __Lrparam 0000  
             __CFG_BOREN$SBORDIS 000000                _SHA256_OutputData 152C  
        ??_OSCILLATOR_Initialize 0001               ?_SHA256_OutputData 0001  
               _SHA256_HashBlock 0000              _message4_256_digest FF22  
            ??_SHA256_OutputData 0007                         __ptext10 0000  
                       _contexts 0100                    __size_of_main 00EC  
                       _message0 FFFD                         _message1 FFFB  
                       _message2 FFB7                         _message3 FF9D  
                       _message4 FF82                         _message5 FE69  
                       _message6 FE2A                         _message7 FFAC  
                       _message8 FDC5              _message5_256_digest FF02  
           __CFG_WDTCWS$WDTCWS_7 000000        __end_of_SHA256_OutputData 1586  
        SHA256_Calculate@context 00CD         SHA256_Initialize@context 0001  
     __size_of_SHA256_Initialize 0214              _message6_256_digest FEE2  
                       memcmp@vl 0001                         memcmp@vr 0003  
        ?_PIN_MANAGER_Initialize 0001                __CFG_CLKOUTEN$OFF 000000  
            _message7_256_digest FEC2      SHA256_HashBlock@schedulePtr 00CB  
         SHA256_Calculate@endPtr 00D5          SHA256_Initialize@length 0003  
         SHA256_Calculate@result 00CF                   _SHA256_DataAdd 1214  
            _message8_256_digest FEA2               SHA256_DataAdd@data 00CF  
 __end_of_PIN_MANAGER_Initialize 152C       __size_of_SHA256_OutputData 005A  
